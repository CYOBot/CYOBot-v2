"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[129],{4096:function(e,_,t){t.d(_,{d:function(){return o},z:function(){return l}});var L=t(9219),T=t(1011),i=t(5762),n=t(2564),O=t(1962);let o=(0,i.j)("inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",muted:"bg-muted text-muted-foreground hover:bg-muted/90",positive:"bg-positive text-positive-foreground hover:bg-positive/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),l=n.forwardRef((e,_)=>{let{className:t,variant:i,size:n,asChild:l=!1,...a}=e,E=l?T.g7:"button";return(0,L.jsx)(E,{className:(0,O.cn)(o({variant:i,size:n,className:t})),ref:_,...a})});l.displayName="Button"},3075:function(e,_,t){t.d(_,{Ei:function(){return c},Tu:function(){return s},bC:function(){return I},ue:function(){return C},yo:function(){return l}});var L=t(9219),T=t(9179),i=t(5762),n=t(3887),O=t(2564),o=t(1962);let l=T.fC;T.xz,T.x8;let a=T.h_,E=O.forwardRef((e,_)=>{let{className:t,...i}=e;return(0,L.jsx)(T.aV,{className:(0,o.cn)("fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",t),...i,ref:_})});E.displayName=T.aV.displayName;let r=(0,i.j)("fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",{variants:{side:{top:"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",bottom:"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",left:"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",right:"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm"}},defaultVariants:{side:"right"}}),C=O.forwardRef((e,_)=>{let{side:t="right",className:i,children:l,onClickOutside:C,onClickClose:s,onPressEscape:I,...c}=e;return O.useEffect(()=>{let e=e=>{"Escape"===e.key&&I&&I()};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[I]),(0,L.jsxs)(a,{children:[(0,L.jsx)(E,{onClick:C}),(0,L.jsxs)(T.VY,{ref:_,className:(0,o.cn)(r({side:t}),i),...c,children:[l,(0,L.jsxs)(T.x8,{className:"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary",onClick:s,children:[(0,L.jsx)(n.Z,{className:"h-4 w-4"}),(0,L.jsx)("span",{className:"sr-only",children:"Close"})]})]})]})});C.displayName=T.VY.displayName;let s=e=>{let{className:_,...t}=e;return(0,L.jsx)("div",{className:(0,o.cn)("flex flex-col space-y-2 text-center sm:text-left",_),...t})};s.displayName="SheetHeader";let I=O.forwardRef((e,_)=>{let{className:t,...i}=e;return(0,L.jsx)(T.Dx,{ref:_,className:(0,o.cn)("text-lg font-semibold text-foreground",t),...i})});I.displayName=T.Dx.displayName;let c=O.forwardRef((e,_)=>{let{className:t,...i}=e;return(0,L.jsx)(T.dk,{ref:_,className:(0,o.cn)("text-sm text-muted-foreground",t),...i})});c.displayName=T.dk.displayName},3250:function(e,_,t){t.d(_,{z:function(){return i}});var L=t(9219),T=t(1962);let i=e=>{let{children:_,className:t}=e;return(0,L.jsx)("h2",{className:(0,T.cn)("scroll-m-20 border-b pb-2 text-3xl font-semibold tracking-tight transition-colors first:mt-0",t),children:_})}},1891:function(e,_,t){t.d(_,{B:function(){return i}});var L=t(9219),T=t(1962);let i=e=>{let{children:_,className:t}=e;return(0,L.jsx)("h3",{className:(0,T.cn)("scroll-m-20 text-2xl font-semibold tracking-tight",t),children:_})}},9187:function(e,_,t){t.d(_,{_:function(){return L}});let L={localStorage:{cyobot_portal_robot_ip_address:"cyobot_portal_robot_ip_address",cyobot_local_storage_code:"cyobot_local_storage_code",cyobot_local_storage_opened_files:"cyobot_local_opened_files",cyobot_local_storage_active_files_stack:"cyobot_local_storage_active_files_stack",cyobot_local_storage_code_executing:"cyobot_local_storage_code_executing",cyobot_local_storage_code_deploying:"cyobot_local_storage_code_deploying",cyobot_local_storage_code_saving:"cyobot_local_storage_code_saving",cyobot_local_storage_code_loading:"cyobot_local_storage_code_loading"}}},3552:function(e,_,t){t.d(_,{k:function(){return T},n:function(){return i}});var L=t(2564);let T=(0,L.createContext)(void 0),i=()=>{let e=(0,L.useContext)(T);if(!e)throw Error("useBlockEditor must be used within a BlockEditorContextProvider");return e}},6833:function(e,_,t){t.d(_,{q:function(){return i}});var L=t(3916),T=t(2564);let i=(0,T.createContext)({code:"",setCode:L.Z})},1984:function(e,_,t){t.d(_,{E:function(){return n}});var L=t(810),T=t(3916),i=t(2564);let n=(0,i.createContext)({config:L.u,setConfig:T.Z})},6736:function(e,_,t){t.d(_,{J:function(){return n}});var L=t(9718),T=t(3916),i=t(2564);let n=(0,i.createContext)({fileTree:{items:[]},activeFilesStack:new L.K,openedFiles:[],setFileTree:T.Z,setActiveFilesStack:T.Z,setOpenedFiles:T.Z})},6126:function(e,_,t){t.d(_,{D:function(){return i}});var L=t(3916),T=t(2564);let i=(0,T.createContext)({open:!1,setOpen:L.Z})},1679:function(e,_,t){t.d(_,{p:function(){return n}});var L=t(810),T=t(2072),i=t(2564);let n=(0,i.createContext)(new T.v({endpoint:L.u.pythonWebREPL.endpoint,password:L.u.pythonWebREPL.password}))},1991:function(e,_,t){t.d(_,{L:function(){return i}});var L=t(3916),T=t(2564);let i=(0,T.createContext)({clientResponses:[],setClientResponses:L.Z})},734:function(e,_,t){t.d(_,{I:function(){return i}});var L=t(3916),T=t(2564);let i=(0,T.createContext)({robotIPAddress:null,setRobotIPAddress:L.Z})},810:function(e,_,t){t.d(_,{u:function(){return L}});let L={editor:"code",locale:"en",pythonWebREPL:{endpoint:"ws://192.168.4.1:8266",password:"cyobot"},codeEditor:{loading:{progressIntervalMs:1e3,progressIncrementValue:10,messageIntervalMs:3e3,messages:["Hang on tight...","Almost there...","Patience is a virtue of all programmers","Sometimes taking a walk is the best debug strategy","Don't forget to drink water, programmers are human too","Have you touched grass today?"],onFinishLoadingMessage:"We're ready, have fun!",onFinishLoadingDelayMs:1e3}},onboarding:{hasProvidedWifiCredentials:!0,hasProvidedCodeEditorPreference:!1,openPortalInstructionCards:[{header:"1. Connect your laptop to WiFi",content:"Use your navigation bar to connect your laptop to the same WiFi network that CYOBot connected to previously."},{header:"2. Type CYOBot’s IP into a new browser",content:"Your CYOBot will show a unique IP on its LED screen (e.g, 192.168.100.200). Type the IP shown into a new tab on your browser."},{header:"3. Finish!",content:"Now, your CYOBot’s IP address has become your personal portal address. Next time, just type in this IP into your browser to connect to the portal while going online."}]},queryIndices:{useConfig:"useConfig",useNetworks:"useNetworks",useCyobrainInternetConnectionStatus:"useCyobrainInternetConnectionStatus"},activitiesLibrary:{levelDropdown:{triggerPlaceholder:"Level",options:[{displayName:"Explorer",value:"beginner"},{displayName:"Adventurer",value:"intermediate"},{displayName:"Pioneer",value:"advanced"}]},topicDropdown:{triggerPlaceholder:"Topic",options:[{displayName:"Brain",value:"brain"},{displayName:"Crawler",value:"crawler"},{displayName:"Wheeler",value:"wheeler"},{displayName:"Console",value:"console"}]},activities:[{title:"Blink an LED on matrix",description:"Blink an LED on the LED matrix display of the robot. Click on Break to terminate the program once you are done.",slug:"matrix_led_blink",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="matrix_init" id="pHU(@FdyVcihzO/*XL(Q" x="270" y="110"><next><block type="time_init" id="L8_^im:kVD+0c3shhvmS"><next><block type="controls_whileUntil" id="![o_Zc2XHyZ:MsG8uJ3j"><field name="MODE">WHILE</field><value name="BOOL"><block type="logic_boolean" id=",DZ0y1,t#XY?g[@$$9j,"><field name="BOOL">TRUE</field></block></value><statement name="DO"><block type="matrix_manual" id="o#]$[O#OZXF^(1qcmYLf"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="EPDpCyBqce/Ll~Y#YplG"><field name="NUM">0</field></block></value><next><block type="timing_sleep" id="q:s0X[fU}o*#KqncLgYM"><value name="SECS"><block type="value_number" id="e^m,~FR]|UtCGGt~T*$}"><field name="NUM">1</field></block></value><next><block type="matrix_reset" id="bI#NLa9y1n|O^_uEuVL;"><next><block type="timing_sleep" id="~g]yFHJ,)5Jnt%%EZ]51"><value name="SECS"><block type="value_number" id="e|)]DHz]VR/W6wYsQdgR"><field name="NUM">1</field></block></value></block></next></block></next></block></next></block></statement><next><block type="matrix_reset" id="QHbhXA2T6B2%%WB/fj`m"></block></next></block></next></block></next></block></xml>',code:"from lib.display import *\nimport time\nmatrix = Matrix()\nwhile True:\n    matrix.set_manual(0, (0, 0, 200))\n    time.sleep(1.0)\n    matrix.reset()\n    time.sleep(1.0)\nmatrix.reset()"},{title:"Display a character",description:"Display a character on the LED matrix display. You can display alphabet characters (A~Z), and numbers (0~9).",slug:"matrix_character",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="matrix_init" id="(%x^}(eFk5%6~Y!:8ci=" x="350" y="170"><next><block type="matrix_character" id="`_|1^df%fr%rH_2:,Q5k"><field name="CHAR">B</field><field name="COLOR">#40ff40</field></block></next></block></xml>',code:'from lib.display import Matrix\nmatrix = Matrix()\nmatrix.set_character("A", red=64, green=255, blue=64)'},{title:"Scroll a word",description:"Use the built-in function to scroll a word on the LED display. You can further change the speed, the color of the word. Currently, the library on supports capital letters and numbers.",slug:"scroll_word",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="matrix_init" id="DVxp%I()h,21g{m),BhZ" x="-70" y="-70"><next><block type="matrix_scroll" id="~6o@A6+?q@Bi~j[+{yxh"><value name="VALUE"><block type="text" id="0LxmV7;ry5HsquXA-xpO"><field name="TEXT">hello</field></block></value><next><block type="matrix_reset" id="R,]2E]|bdMbE;q#5Kt4S"></block></next></block></next></block></xml>',code:'from lib.display import Matrix\nmatrix = Matrix()\nmatrix.scroll("HELLO", speed=0.1, red=0, green=0, blue=100)\nmatrix.reset()\n'},{title:"Turn on LED on ring",description:"Turn on an LED on the LED ring of the robot.",slug:"ring_manual",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="ring_init" id="]7]TRDZ=m_we/{{?k._T" x="70" y="30"><next><block type="ring_manual" id="vQkL4HEsTF%D|*#clyXt"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="`9-pY@UiKMu-Ojh#mFcq"><field name="NUM">0</field></block></value></block></next></block></xml>',code:"from lib.display import LEDRing\nring = LEDRing()\nring.set_manual(0, (64, 255, 64))"},{title:"Move LED lights in circle",description:"Turn on an LED on the LED ring of the robot and move it in circle.",slug:"ring_loading",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="ring_init" id="VxRqx5Xp+;@y5a[x_Z6@" x="350" y="190"><next><block type="ring_spin" id="v.N`[S?NTHM6n1I~xeZB"><field name="COLOR">#40ff40</field><field name="SPEED">0.1</field></block></next></block></xml>',code:"from lib.display import LEDRing\nring = LEDRing()\nring.loading(speed=0.1, red=64, green=255, blue=64)"},{title:"Detect pressed button",description:"Detect pressed button. If left button is pressed, turn on an LED on matrix display. Else, turn off LED. Click on Break to terminate the program once you are done.",slug:"button_pressed",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="time_init" id="T:vO,P5}~mY+qR#0PpLL" x="370" y="130"><next><block type="button_init" id=".W*SLyy5@Z6zzi~tlXll"><next><block type="matrix_init" id="5utcN_Q8=hBv{Jxd!~Q0"><next><block type="controls_whileUntil" id="`v^B_E5zaV|n90|JAC=y"><field name="MODE">WHILE</field><value name="BOOL"><block type="logic_boolean" id="([p7gmpmK-Fry,Xm/dA("><field name="BOOL">TRUE</field></block></value><statement name="DO"><block type="controls_if" id=".*]Bev#OKv:`){2YwY^J"><mutation else="1"></mutation><value name="IF0"><block type="logic_compare" id="H=w6oPi*]:V7-hJM?EZz"><field name="OP">EQ</field><value name="A"><block type="sensing_button" id="C=?zwa8seH-:bVnw$x#5"><field name="BUTTON">left</field></block></value><value name="B"><block type="value_number" id="n~q^h(=M~1mV9$N{ImAj"><field name="NUM">0</field></block></value></block></value><statement name="DO0"><block type="matrix_manual" id="UV#htkO,^40ACT!L0H7_"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="Zx)lDHnPtTVip,ZK4ds}"><field name="NUM">0</field></block></value></block></statement><statement name="ELSE"><block type="matrix_reset" id="|PB*kuq`Md`rk:VfRPPR"></block></statement><next><block type="timing_sleep" id="rCWrN5NGW;(RRS^d0_Zc"><value name="SECS"><block type="value_number" id="*5%{2P*Li#/S(_)AGJh!"><field name="NUM">0.001</field></block></value></block></next></block></statement><next><block type="matrix_reset" id="7GkL0V8BjSJ-G1Y|hc9h"></block></next></block></next></block></next></block></next></block></xml>',code:"import time\nimport machine\nleft = machine.Pin(4, machine.Pin.IN)\nfrom lib.display import Matrix\nmatrix = Matrix()\nwhile True:\n  if (left.value()) == 0:\n    matrix.set_manual(0, (64, 255, 64))\n  else:\n    matrix.reset()\n  time.sleep(0.001)\nmatrix.reset()"},{title:"Play a music file",description:"Play a music file stored in the micro SD card, using the built-in speaker of the robot.",slug:"speaker_play",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="speaker_init" id="U3)={nD)[Z6yE98[DQ-j" x="70" y="30"><next><block type="sound_play" id="eu+M-L4$JTC@cYQ-]J_N"></block></next></block></xml>',code:"from audio import player\nmPlayer = player(None)\nmPlayer.play('file://sdcard/lib/data/sample-music.mp3')"},{title:"Capture motion data",description:"Capture motion data by tilting the robot in different directions and observe the LED displaying accordingly. Click on Break to terminate the program once you are done.",slug:"imu_tilt_test",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="matrix_init" id="3|L(y`fU6qdUcVf^hI!N" x="130" y="10"><next><block type="time_init" id="!UyiU*M;[1xDm(Zf8=dR"><next><block type="imu_init" id="G=~85GyB4PX5*{dj~T8s"><next><block type="controls_whileUntil" id="?u=tcz~LJpN3_[u8?9Bh"><field name="MODE">WHILE</field><value name="BOOL"><block type="logic_boolean" id="DtP%}m|T!H=/Ci)_WM}("><field name="BOOL">TRUE</field></block></value><statement name="DO"><block type="controls_if" id="Fh.W+Jp0-7a|!#fI~S?v"><mutation elseif="3" else="1"></mutation><value name="IF0"><block type="logic_compare" id="]#)6Cpq|Sz+`2nW=9glv"><field name="OP">LT</field><value name="A"><block type="sensing_gyro" id="K2gyZNC%E~:YN5izUD%$"><field name="AXIS">1</field></block></value><value name="B"><block type="value_number" id="1{1nbF6+n5MV4~E!KH9e"><field name="NUM">-1</field></block></value></block></value><statement name="DO0"><block type="matrix_manual" id=";:}ThojmzWmWB+i:@f!p"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="*v%1.}#`JgL(s;PI7=29"><field name="NUM">20</field></block></value></block></statement><value name="IF1"><block type="logic_compare" id="=JjTak-?um=l,D59glw`"><field name="OP">GT</field><value name="A"><block type="sensing_gyro" id="D*JLoL)q%t.J0;5;KiR%"><field name="AXIS">1</field></block></value><value name="B"><block type="value_number" id="}-+GX80`Bkn-3!GLY4sQ"><field name="NUM">1</field></block></value></block></value><statement name="DO1"><block type="matrix_manual" id="7_AHP[rg$H=@{[ps.;PT"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="nO$L{n6fgInWDRv]H^(B"><field name="NUM">12</field></block></value></block></statement><value name="IF2"><block type="logic_compare" id="kwvI2u22]$A/*26kPm{c"><field name="OP">LT</field><value name="A"><block type="sensing_gyro" id="$cZKQ[}s$_1pEfUn}QSy"><field name="AXIS">0</field></block></value><value name="B"><block type="value_number" id="?hXl#D1A8Q4J1SC[|.@U"><field name="NUM">-1</field></block></value></block></value><statement name="DO2"><block type="matrix_manual" id="=8ZT*(%:YC$56]9rUZ[q"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="c;K4mc8IuLpWsPU5A-HU"><field name="NUM">2</field></block></value></block></statement><value name="IF3"><block type="logic_compare" id="I#?W4826PGyiRL*;/I89"><field name="OP">GT</field><value name="A"><block type="sensing_gyro" id="eyb4q9Gd,j`4`O?bO7z:"><field name="AXIS">0</field></block></value><value name="B"><block type="value_number" id="pw_ny72F4B;czI3;GEP;"><field name="NUM">1</field></block></value></block></value><statement name="DO3"><block type="matrix_manual" id="5C#!5YE9g6h_FbHNq@U,"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="l2wp;jCvvU/v:azhr?`y"><field name="NUM">30</field></block></value></block></statement><statement name="ELSE"><block type="matrix_reset" id="s~yDS-%}Yq2z+u^KkW6o"></block></statement><next><block type="timing_sleep" id="%.)NSRcO%pLaY*uUHorH"><value name="SECS"><block type="value_number" id="}?wfk[`?z|;LH79=7pK@"><field name="NUM">0.001</field></block></value></block></next></block></statement></block></next></block></next></block></next></block></xml>',code:"from lib.display import Matrix\nmatrix = Matrix()\nimport time\nfrom lib.imu import IMU\nimu = IMU(SDA=17, SCL=18)\nwhile True:\n  if (imu.gyro[1]) < -1:\n    matrix.set_manual(20, (64, 255, 64))\n  elif (imu.gyro[1]) > 1:\n    matrix.set_manual(12, (64, 255, 64))\n  elif (imu.gyro[0]) < -1:\n    matrix.set_manual(2, (64, 255, 64))\n  elif (imu.gyro[0]) > 1:\n    matrix.set_manual(30, (64, 255, 64))\n  else:\n    matrix.reset()\n  time.sleep(0.001)"},{title:"Capture sound",description:"Capture sound using built-in microphone for 10 seconds and replay using the built-in speaker.",slug:"record_replay",tags:{topic:{displayName:"Brain",slug:"brain",color:"#f9b616"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="microphone_init" id="5N?lP^T^Yu[C^tKFwb06" x="210" y="90"><next><block type="speaker_init" id="2u)Fx+1G53gGk?s4~SK9"><next><block type="sound_record" id="AQ~}/_*;*B^HBCa4e4lV"><value name="SECS"><block type="value_number" id=")/8F+EK,McIR3Q0.dPdd"><field name="NUM">3</field></block></value><next><block type="sound_play_record" id="dAeaklzF*vR=c]*?vCt1"></block></next></block></next></block></next></block></xml>',code:"from audio import player, recorder\nimport time\n\nmPlayer=player(None)\nmPlayer.set_vol(100)\n\naRecorder=recorder()\naRecorder.start('/sdcard/record.wav', recorder.WAV, 10)\n\ni = 0\nwhile aRecorder.is_running():\n    print('Recording:', i)\n    i += 1\n    time.sleep(1)\n\naRecorder.stop()\n\nprint('Playback the recording file')\nmPlayer.play('file://sdcard/record.wav')"},{title:"Walk forward 3 steps on 4 legs",description:"Use the built-in functions to control the robot to walk forward 3 steps in its spider-form.",slug:"forward_command",tags:{topic:{displayName:"Crawler",slug:"crawler",color:"#1f3c71"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="crawler_init" id="m!BgDI,^4;T?qFY?bD_E" x="490" y="130"><next><block type="motion_command" id="EVEs8!;})#X4zRwT+8mS"><field name="COMMAND">forward</field><value name="STEPS"><block type="value_number" id="pE9d*VfG+IJ^Vi)0cU.a"><field name="NUM">3</field></block></value><next><block type="motion_off" id="z=,9prI4SkMg}Ve{WbH6"></block></next></block></next></block></xml>',code:'from lib.kinematics import Crawler\ncrawler = Crawler()\nfor i in range(3):\n    crawler.command("forward")\ncrawler.pca.all_off()'},{title:"Rotate 3 steps to left on 4 legs",description:"Use the built-in functions to control the robot to rotate 3 steps to the left in its spider-form.",slug:"rotate_command",tags:{topic:{displayName:"Crawler",slug:"crawler",color:"#1f3c71"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="crawler_init" id="=SZ5@HX#EI,^s4g-wB]#" x="350" y="150"><next><block type="motion_command_2" id="MlKjJj[-eM)=PjUbd_~="><field name="COMMAND">rotate_left</field><value name="STEPS"><block type="value_number" id="/`!2M]U!+y[B`Lknc$_j"><field name="NUM">3</field></block></value><next><block type="motion_off" id="J}o@fK#EKm/Gy|^(sOrC"></block></next></block></next></block></xml>',code:'from lib.kinematics import Crawler\ncrawler = Crawler()\nfor i in range(3):\n    crawler.command("rotate_left")\ncrawler.pca.all_off()'},{title:"Wave right hand standing up",description:"Control 1 motor at the hip of the first leg while positioning the robot standing up in human form to make it wave at you 3 times.",slug:"waving",tags:{topic:{displayName:"Crawler",slug:"crawler",color:"#1f3c71"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="Y!f-[HGJEs1H0%DuwZQA">i</variable></variables><block type="crawler_init" id="uZqN3zUJg2t`/RJh69Cb" x="110" y="30"><next><block type="time_init" id="M6cg00m=kECIjkE~sMSh"><next><block type="controls_repeat_ext" id="~n=yt~k^+#s(o9{KO7rv"><value name="TIMES"><block type="value_number" id="Xw5W5+BPgh4U/r19]hP."><field name="NUM">3</field></block></value><statement name="DO"><block type="controls_for" id="/HkuG.n/3eIFhZTgw)*m"><field name="VAR" id="Y!f-[HGJEs1H0%DuwZQA">i</field><value name="FROM"><block type="value_number" id="|}rHgTk~sBr2uXuX)XBF"><field name="NUM">-30</field></block></value><value name="TO"><block type="value_number" id="KPe%*fDSCHyDdaA}0^!X"><field name="NUM">30</field></block></value><value name="BY"><block type="value_number" id="3:V,d8xypa:y2)Gw:=IE"><field name="NUM">1</field></block></value><statement name="DO"><block type="motion_set_angle" id="Ald|Vk~oWv1=1S)(d}C*"><field name="CHANNEL">0</field><value name="ANGLE"><block type="variables_get" id="xm-lDO8[a`FJ?A34[|^^"><field name="VAR" id="Y!f-[HGJEs1H0%DuwZQA">i</field></block></value><next><block type="timing_sleep" id="oOU(4_1j`~/#gsCwB1$r"><value name="SECS"><block type="value_number" id="x13$!D70!-kTALuhTv6T"><field name="NUM">0.02</field></block></value></block></next></block></statement><next><block type="controls_for" id="R+?5*Zn-b-WbG.DWHCqB"><field name="VAR" id="Y!f-[HGJEs1H0%DuwZQA">i</field><value name="FROM"><block type="value_number" id="8baj6Yws1utpfwRa9%gO"><field name="NUM">30</field></block></value><value name="TO"><block type="value_number" id="SAfb.h/44V.*nfW!;gxw"><field name="NUM">-30</field></block></value><value name="BY"><block type="value_number" id="nr,kNQrf.j~|$DStN)dw"><field name="NUM">-1</field></block></value><statement name="DO"><block type="motion_set_angle" id="nC6J~crqJ!h27(7ZZ7cw"><field name="CHANNEL">0</field><value name="ANGLE"><block type="variables_get" id="pUT~rr3QREy%U.*A4ej~"><field name="VAR" id="Y!f-[HGJEs1H0%DuwZQA">i</field></block></value><next><block type="timing_sleep" id=")+^z|PXEvd6zmzcw`c`W"><value name="SECS"><block type="value_number" id="(-57fZ8T36k#6H,s`jWW"><field name="NUM">0.02</field></block></value></block></next></block></statement></block></next></block></statement><next><block type="motion_off" id="dcWN1.x?/@Z!XW3J!+-;"></block></next></block></next></block></next></block></xml>',code:"from lib.kinematics import Crawler\ncrawler = Crawler()\nimport time\nfor count in range(3):\n  for i in range(-30, 31):\n    crawler.pca.set_angle(0, i)\n    time.sleep(0.02)\n  for i in range(30, -31, -1):\n    crawler.pca.set_angle(0, i)\n    time.sleep(0.02)\ncrawler.pca.all_off()"},{title:"Push up",description:"Control 2 motors at the knees of 2 legs to make your robot push up in human form.",slug:"pushup",tags:{topic:{displayName:"Crawler",slug:"crawler",color:"#1f3c71"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="crawler_init" id="uZqN3zUJg2t`/RJh69Cb" x="110" y="30"><next><block type="time_init" id="M6cg00m=kECIjkE~sMSh"><next><block type="motion_all" id="*.;-S1Y6KGF*r[M-?jc$"><value name="UPPER0"><block type="value_number" id="cPg.l=[/T/GNisPE?51H"><field name="NUM">-40</field></block></value><value name="LOWER0"><block type="value_number" id="?gdAlr]l!k%YD7z:CM$]"><field name="NUM">0</field></block></value><value name="UPPER1"><block type="value_number" id="u_g)a3$J}yGbihwAPZ@9"><field name="NUM">-40</field></block></value><value name="LOWER1"><block type="value_number" id="u-Gdd%iDi@v9E*NK(}J3"><field name="NUM">0</field></block></value><value name="UPPER2"><block type="value_number" id=":ALi9[/{%sd8V.MhTbam"><field name="NUM">-40</field></block></value><value name="LOWER2"><block type="value_number" id="Icnq#mk:Nmh^x|n34r`o"><field name="NUM">0</field></block></value><value name="UPPER3"><block type="value_number" id=",(Q.lc1W:3!|6p,f~~2L"><field name="NUM">-40</field></block></value><value name="LOWER3"><block type="value_number" id="ea+(|96%7_0,0aeO8myJ"><field name="NUM">0</field></block></value><next><block type="controls_repeat_ext" id="~n=yt~k^+#s(o9{KO7rv"><value name="TIMES"><block type="value_number" id="Xw5W5+BPgh4U/r19]hP."><field name="NUM">3</field></block></value><statement name="DO"><block type="motion_all" id="z#:IRX:U5?WZW#hw{bf_"><value name="UPPER0"><block type="value_number" id="?R^dh7q6@(HkE(Rvv5aW"><field name="NUM">-40</field></block></value><value name="LOWER0"><block type="value_number" id="a)q^fCPKPgu|Q8Z::K}e"><field name="NUM">30</field></block></value><value name="UPPER1"><block type="value_number" id="M^tZ;Mcb%O0xB*+qgSMW"><field name="NUM">-40</field></block></value><value name="LOWER1"><block type="value_number" id="Im*CXlZD-?ovV%(GboS+"><field name="NUM">0</field></block></value><value name="UPPER2"><block type="value_number" id="xc_b[4dPrS3@etEGdLp3"><field name="NUM">-40</field></block></value><value name="LOWER2"><block type="value_number" id="t!(LiIf%O^w]c5J#ZAj@"><field name="NUM">0</field></block></value><value name="UPPER3"><block type="value_number" id="*HHe$1*geG)wgQ[B;e#t"><field name="NUM">-40</field></block></value><value name="LOWER3"><block type="value_number" id="Qpgh0?F5{O^.{y/R{QV)"><field name="NUM">30</field></block></value><next><block type="motion_all" id="Fa!R+IM+^6:^;;:BNbmj"><value name="UPPER0"><block type="value_number" id="VJ~OK,;juoCD9!jC)GAH"><field name="NUM">-40</field></block></value><value name="LOWER0"><block type="value_number" id="JgJ?=r%aJ0QR;E^djYD?"><field name="NUM">-30</field></block></value><value name="UPPER1"><block type="value_number" id="*QdYB;.wjK[=I?-CX-C|"><field name="NUM">-40</field></block></value><value name="LOWER1"><block type="value_number" id=".n$j]HiE5,$V}6vNiuwt"><field name="NUM">0</field></block></value><value name="UPPER2"><block type="value_number" id="D2#flc~,6_|g*K-CKFS?"><field name="NUM">-40</field></block></value><value name="LOWER2"><block type="value_number" id="7K31=%2.2j%T/Z|pe3l?"><field name="NUM">0</field></block></value><value name="UPPER3"><block type="value_number" id="W?lb[-d^CU=zBCB5Am2X"><field name="NUM">-40</field></block></value><value name="LOWER3"><block type="value_number" id="ea4_PnmI`:PC;k*evpKY"><field name="NUM">-30</field></block></value></block></next></block></statement><next><block type="motion_off" id="dcWN1.x?/@Z!XW3J!+-;"></block></next></block></next></block></next></block></next></block></xml>',code:"from lib.kinematics import Crawler\ncrawler = Crawler()\nimport time\ncrawler.centeredDynamicServoAssignment(-40, 0, -40, 0, -40, 0, -40, 0)\nfor count in range(3):\n  crawler.centeredDynamicServoAssignment(-40, 30, -40, 0, -40, 0, -40, 30)\n  crawler.centeredDynamicServoAssignment(-40, -30, -40, 0, -40, 0, -40, -30)\ncrawler.pca.all_off()"},{title:"Drive straight forward for 2 seconds",description:"Use the built-in functions to control the robot to drive forward for 2 seconds in wheeler mode",slug:"forward_command_wheeler",tags:{topic:{displayName:"Wheeler",slug:"wheeler",color:"#ea2761"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="wheeler_init" id="P$i2g,0J84L$[1HHFE.a" x="190" y="50"><next><block type="motion_command_3" id="pGDXt-`wSb)4o?V0{1m~"><field name="COMMAND1">forward</field><field name="COMMAND2">straight</field><value name="SECONDS"><block type="value_number" id="zBO;oSasTY$K7iRiXKe3"><field name="NUM">2</field></block></value></block></next></block></xml>',code:'from lib.kinematics import Wheeler\nrobot = Wheeler()\nrobot.nudge("forward_straight", t=2)'},{title:"Drive straight diagonally for 2 seconds",description:"Use the built-in functions to control the robot to drive forward diagonally for 2 seconds in wheeler mode",slug:"forward_diagleft_command_wheeler",tags:{topic:{displayName:"Wheeler",slug:"wheeler",color:"#ea2761"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="wheeler_init" id="P$i2g,0J84L$[1HHFE.a" x="190" y="50"><next><block type="motion_command_3" id="pGDXt-`wSb)4o?V0{1m~"><field name="COMMAND1">forward</field><field name="COMMAND2">diagleft</field><value name="SECONDS"><block type="value_number" id="zBO;oSasTY$K7iRiXKe3"><field name="NUM">2</field></block></value></block></next></block></xml>',code:'from lib.kinematics import Wheeler\nrobot = Wheeler()\nrobot.nudge("forward_diagleft", t=2)'},{title:"Turn left for 2 seconds",description:"Use the built-in functions to control the robot to turn left for 2 seconds in wheeler mode",slug:"forward_left_command_wheeler",tags:{topic:{displayName:"Wheeler",slug:"wheeler",color:"#ea2761"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="wheeler_init" id="P$i2g,0J84L$[1HHFE.a" x="190" y="50"><next><block type="motion_command_3" id="pGDXt-`wSb)4o?V0{1m~"><field name="COMMAND1">forward</field><field name="COMMAND2">left</field><value name="SECONDS"><block type="value_number" id="zBO;oSasTY$K7iRiXKe3"><field name="NUM">2</field></block></value></block></next></block></xml>',code:'from lib.kinematics import Wheeler\nrobot = Wheeler()\nrobot.nudge("forward_left", t=2)'},{title:"Display joystick position",description:"Read left joystick and display the position using LED ring.",slug:"console_joystick_ring",tags:{topic:{displayName:"Console",slug:"console",color:"#5d3a92"},level:{displayName:"Explorer",slug:"beginner",color:"#19d196"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="console_init" id="EuEq!z%a7ht#`dA(SCIK" x="390" y="110"><next><block type="time_init" id="T:vO,P5}~mY+qR#0PpLL"><next><block type="ring_init" id=".qE%*V;s;9B:31.fv_OW"><next><block type="controls_whileUntil" id="`v^B_E5zaV|n90|JAC=y"><field name="MODE">WHILE</field><value name="BOOL"><block type="logic_boolean" id="([p7gmpmK-Fry,Xm/dA("><field name="BOOL">TRUE</field></block></value><statement name="DO"><block type="controls_if" id=".*]Bev#OKv:`){2YwY^J"><mutation elseif="1"></mutation><value name="IF0"><block type="logic_compare" id="H=w6oPi*]:V7-hJM?EZz"><field name="OP">GT</field><value name="A"><block type="sensing_console_joystick" id="wVUhq+8hyz?ek3.C6vqg"><field name="JOYSTICK">left</field><field name="AXIS">x</field></block></value><value name="B"><block type="value_number" id="n~q^h(=M~1mV9$N{ImAj"><field name="NUM">3000</field></block></value></block></value><statement name="DO0"><block type="ring_manual" id="a]g42Rla2iR[VnH:5n#i"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="D,Nd.G#2-gDB[ITm{jo."><field name="NUM">3</field></block></value></block></statement><value name="IF1"><block type="logic_compare" id="[83h-$uYz?my##EwT:Z{"><field name="OP">LT</field><value name="A"><block type="sensing_console_joystick" id="pg~*rI5`SS]-o_wZ=:V]"><field name="JOYSTICK">left</field><field name="AXIS">x</field></block></value><value name="B"><block type="value_number" id="+g7{d,:aXm{mRR+uhobH"><field name="NUM">1000</field></block></value></block></value><statement name="DO1"><block type="ring_manual" id="1f7`}XUe]_v#(q$FZaEu"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="kM2Fg[#r(@agV@#CiVv2"><field name="NUM">9</field></block></value></block></statement><next><block type="controls_if" id="dov*!Pq#;m-o_(8.GWbg"><mutation elseif="1"></mutation><value name="IF0"><block type="logic_compare" id="];~b,x^EIS/v-5ks7%pT"><field name="OP">GT</field><value name="A"><block type="sensing_console_joystick" id="ZTFIY8Yom`qNrr6RMXYs"><field name="JOYSTICK">left</field><field name="AXIS">y</field></block></value><value name="B"><block type="value_number" id="tMxq[d6U2$05uTEa(r9I"><field name="NUM">3000</field></block></value></block></value><statement name="DO0"><block type="ring_manual" id="pgwnPBgQFc!Yro.ri`Ri"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="zbL$M5(81_X_EW()$#68"><field name="NUM">0</field></block></value></block></statement><value name="IF1"><block type="logic_compare" id="2Rc{E$fsj)*j5-oB4Mxq"><field name="OP">LT</field><value name="A"><block type="sensing_console_joystick" id="|Lt:SXp)-r2W0V^H);{2"><field name="JOYSTICK">left</field><field name="AXIS">y</field></block></value><value name="B"><block type="value_number" id="NsqTgwbX!vGyXF,x){6Y"><field name="NUM">1000</field></block></value></block></value><statement name="DO1"><block type="ring_manual" id="F=wG~cLI#dMwtq^By(_~"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="value_number" id="sZvYyUEio6=gft+9Z@=w"><field name="NUM">6</field></block></value></block></statement><next><block type="ring_reset" id="tYifhe)K}W1BJ;f3wcU8"><next><block type="timing_sleep" id="rCWrN5NGW;(RRS^d0_Zc"><value name="SECS"><block type="value_number" id="*5%{2P*Li#/S(_)AGJh!"><field name="NUM">0.001</field></block></value></block></next></block></next></block></next></block></statement><next><block type="ring_reset" id="~IAzE!yYwVZH7dVIj20;"></block></next></block></next></block></next></block></next></block></xml>',code:"import machine\nimport time\nfrom lib.display import LEDRing\n\nlefty = machine.ADC(5)\nleftx = machine.ADC(2)\nleftx.atten(leftx.ATTN_11DB)\nlefty.atten(lefty.ATTN_11DB)\nring = LEDRing()\n\nwhile True:\n  if (leftx.read()) > 3000:\n    ring.set_manual(3, (64, 255, 64))\n  elif (leftx.read()) < 1000:\n    ring.set_manual(9, (64, 255, 64))\n  if (lefty.read()) > 3000:\n    ring.set_manual(0, (64, 255, 64))\n  elif (lefty.read()) < 1000:\n    ring.set_manual(6, (64, 255, 64))\n  ring.reset()\n  time.sleep(0.001)"},{title:"Display joystick angle",description:"Read left joystick position and display joystick angle using LED ring.",slug:"console_joystick_ring",tags:{topic:{displayName:"Console",slug:"console",color:"#5d3a92"},level:{displayName:"Adventurer",slug:"intermediate",color:"#f9b616"}},block:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="time_init" id="T:vO,P5}~mY+qR#0PpLL" x="390" y="110"><next><block type="console_init" id="wrfGWbeOB.+3[9#$nEVn"><next><block type="ring_init" id="ZqaNJ`q8WmY}%kF~AfWY"><next><block type="controls_whileUntil" id="`v^B_E5zaV|n90|JAC=y"><field name="MODE">WHILE</field><value name="BOOL"><block type="logic_boolean" id="([p7gmpmK-Fry,Xm/dA("><field name="BOOL">TRUE</field></block></value><statement name="DO"><block type="ring_reset" id="3)W7Car}S13(EY|j.R{r"><next><block type="ring_manual" id="P~p${]jeK/wErGOA[G({"><field name="COLOR">#40ff40</field><value name="INDEX"><block type="math_round" id="sw(EGGQC^F4t*nedrF7G"><field name="OP">ROUNDDOWN</field><value name="NUM"><block type="math_arithmetic" id="_aGanDDPd|UWQ$Bw^{HJ"><field name="OP">DIVIDE</field><value name="A"><block type="math_modulo" id="/IMl4t;alB(L,~GPcrp."><value name="DIVIDEND"><block type="math_arithmetic" id="MEcd_Te:~z5vBXpeFq3."><field name="OP">ADD</field><value name="A"><block type="math_atan2" id="[l/pHAp^pQ2KX({-qtf-"><value name="X"><block type="math_arithmetic" id="OqYR*wionxACT5pI5.cc"><field name="OP">MINUS</field><value name="A"><block type="sensing_console_joystick" id="@l`(6Ag]@^ss.-Enu/V["><field name="JOYSTICK">left</field><field name="AXIS">x</field></block></value><value name="B"><block type="value_number" id="_t|_8}Qh)MaDjv8;IBKW"><field name="NUM">2048</field></block></value></block></value><value name="Y"><block type="math_arithmetic" id="#y-{TSE^2d:2Qr~7RN5v"><field name="OP">MINUS</field><value name="A"><block type="value_number" id="fJN(zk{nY@s1@F9^Kx*R"><field name="NUM">2048</field></block></value><value name="B"><block type="sensing_console_joystick" id="lLKf?G!M(~7-r*$67{)h"><field name="JOYSTICK">left</field><field name="AXIS">y</field></block></value></block></value></block></value><value name="B"><block type="value_number" id="A7E7vp7:Rp6g^d2[ww,+"><field name="NUM">90</field></block></value></block></value><value name="DIVISOR"><block type="value_number" id="cn/#q[d%n@[gPf8?TE^a"><field name="NUM">360</field></block></value></block></value><value name="B"><block type="value_number" id="|pXA}LUB8FW)`9[KY)Qr"><field name="NUM">30</field></block></value></block></value></block></value><next><block type="timing_sleep" id="DRutO#)OIJ+(eZf593Mt"><value name="SECS"><block type="value_number" id=":6LK*_;nE+D?HCWy$)/H"><field name="NUM">0.05</field></block></value></block></next></block></next></block></statement><next><block type="ring_reset" id="*!Y-Cc4odJNurkBgNuZF"></block></next></block></next></block></next></block></next></block></xml>',code:"import machine\nimport math\nimport time\nfrom lib.display import *\n\nring = LEDRing()\n\nlefty = machine.ADC(5)\nleftx = machine.ADC(2)\nlefty.atten(leftx.ATTN_11DB)\nleftx.atten(lefty.ATTN_11DB)\n\nwhile True:\n    dx = leftx.read() - 2048\n    dy = 2048 - lefty.read()\n\n    angle_radians = math.atan2(dy, dx)\n    angle_degrees = math.degrees(angle_radians)\n    angle_degrees = (angle_degrees + 90) % 360\n    led_index = int(angle_degrees / 30)\n\n    ring.reset()\n    ring.set_manual(led_index, (50, 100, 20))\n\n    time.sleep(0.05)"}],loadCodeDialog:{title:"Are you absolutely sure?",description:"Loading code will delete all existing code and this action cannot be undone."}},version:"v1.1.2"}},8992:function(e,_,t){t.d(_,{Z:function(){return E}});var L=t(1984),T=t(810),i=t(1310),n=t(678);let O=n.z.object({editor:n.z.literal("code").or(n.z.literal("block")),locale:n.z.union([n.z.literal("en"),n.z.literal("vi"),n.z.literal("fr")]),pythonWebREPL:n.z.object({endpoint:n.z.string(),password:n.z.string()}),codeEditor:n.z.object({loading:n.z.object({progressIntervalMs:n.z.number(),progressIncrementValue:n.z.number(),messageIntervalMs:n.z.number(),messages:n.z.array(n.z.string()),onFinishLoadingMessage:n.z.string(),onFinishLoadingDelayMs:n.z.number()})}),onboarding:n.z.object({hasProvidedWifiCredentials:n.z.boolean(),hasProvidedCodeEditorPreference:n.z.boolean(),openPortalInstructionCards:n.z.array(n.z.object({header:n.z.string(),content:n.z.string()}))}),queryIndices:n.z.object({useConfig:n.z.string(),useNetworks:n.z.string(),useCyobrainInternetConnectionStatus:n.z.string()}),activitiesLibrary:n.z.object({levelDropdown:n.z.object({triggerPlaceholder:n.z.string(),options:n.z.array(n.z.object({displayName:n.z.string(),value:n.z.string()}))}),topicDropdown:n.z.object({triggerPlaceholder:n.z.string(),options:n.z.array(n.z.object({displayName:n.z.string(),value:n.z.string()}))}),activities:n.z.array(n.z.object({title:n.z.string(),slug:n.z.string(),description:n.z.string(),tags:n.z.object({topic:n.z.object({displayName:n.z.string(),slug:n.z.string(),color:n.z.string()}),level:n.z.object({displayName:n.z.string(),slug:n.z.string(),color:n.z.string()})}),code:n.z.string(),block:n.z.string()})),loadCodeDialog:n.z.object({title:n.z.string(),description:n.z.string()})})}).default(T.u);var o=t(8553),l=t(2564),a=t(3328);let E=()=>{let{config:e,setConfig:_}=(0,l.useContext)(L.E),{robotIPAddress:t}=(0,i.W)(),{data:n,refetch:E}=(0,a.useQuery)(e.queryIndices.useConfig,async()=>{try{let e=await o.Z.get("".concat(null===t?"":"http://".concat(t),"/api/config"));if(200!==e.status)throw await e;return O.parse(e.data)}catch(e){return console.error(e),console.error("Error fetching config, fallback to default config"),O.parse(void 0)}});return(0,l.useEffect)(()=>{n?_(n):_(T.u)},[n,_]),{config:e,setConfig:_,refetchConfig:async()=>{await E()}}}},7501:function(e,_,t){t.d(_,{c:function(){return o}});var L=t(8992),T=t(1310),i=t(8553),n=t(3328),O=t(678);let o=()=>{var e;let{config:_}=(0,L.Z)(),{robotIPAddress:t}=(0,T.W)(),{data:o,refetch:l}=(0,n.useQuery)(_.queryIndices.useCyobrainInternetConnectionStatus,async()=>{try{let e=await i.Z.get("".concat(null===t?"":"http://".concat(t),"/api/internet"),{headers:{Origin:null!=t?t:""}});if(200!==e.status)throw e;return O.z.object({status:O.z.literal("connected").or(O.z.literal("disconnected"))}).parse(e.data)}catch(e){return console.error(e),{status:"disconnected"}}});return{status:null!==(e=null==o?void 0:o.status)&&void 0!==e?e:"disconnected",refetchStatus:async()=>{await l()}}}},1057:function(e,_,t){t.d(_,{_:function(){return T}});var L=t(2564);function T(e,_){let[t,T]=(0,L.useState)(()=>{try{let t=window.localStorage.getItem(e);return t?JSON.parse(t):_}catch(t){return console.error("Error reading localStorage key:",e,t),_}});return(0,L.useEffect)(()=>{try{window.localStorage.setItem(e,JSON.stringify(t))}catch(_){console.error("Error writing to localStorage key:",e,_)}},[e,t]),[t,T]}},2145:function(e,_,t){t.d(_,{K:function(){return i}});var L=t(6126),T=t(2564);let i=()=>{let{open:e,setOpen:_}=(0,T.useContext)(L.D);return{open:e,setOpen:_}}},1392:function(e,_,t){t.d(_,{x:function(){return O}});var L=t(9187),T=t(1679),i=t(1057),n=t(2564);let O=()=>{let e=(0,n.useContext)(T.p),[_,t]=(0,n.useState)(e.status),[O,o]=(0,i._)(L._.localStorage.cyobot_local_storage_code_executing,!1),[l,a]=(0,i._)(L._.localStorage.cyobot_local_storage_code_deploying,!1),[E,r]=(0,i._)(L._.localStorage.cyobot_local_storage_code_saving,!1),[C,s]=(0,i._)(L._.localStorage.cyobot_local_storage_code_loading,!1);(0,n.useEffect)(()=>{e.addOnAfterStatusChangedCallback("setStatusCallback",(e,_)=>t(_))},[e]);let I=(0,n.useCallback)(()=>{e.connect(),o(!1),a(!1),r(!1),s(!1)},[e,a,o,s,r]);return{client:e,status:_,refetchStatus:I}}},1310:function(e,_,t){t.d(_,{W:function(){return i}});var L=t(734),T=t(2564);let i=()=>{let{robotIPAddress:e,setRobotIPAddress:_}=(0,T.useContext)(L.I);return{robotIPAddress:e,setRobotIPAddress:_}}},5244:function(e,_,t){t.d(_,{N:function(){return O}});var L=t(8992),T=t(4868),i=t(796),n=t(4166);let O=()=>{let{config:e}=(0,L.Z)(),_={en:T,vi:n,fr:i};return{t:t=>_[e.locale][t]}}},5814:function(e,_,t){t.d(_,{Am:function(){return E},pm:function(){return r}});var L=t(2564);let T=0,i=new Map,n=e=>{if(i.has(e))return;let _=setTimeout(()=>{i.delete(e),a({type:"REMOVE_TOAST",toastId:e})},1e6);i.set(e,_)},O=(e,_)=>{switch(_.type){case"ADD_TOAST":return{...e,toasts:[_.toast,...e.toasts].slice(0,1)};case"UPDATE_TOAST":return{...e,toasts:e.toasts.map(e=>e.id===_.toast.id?{...e,..._.toast}:e)};case"DISMISS_TOAST":{let{toastId:t}=_;return t?n(t):e.toasts.forEach(e=>{n(e.id)}),{...e,toasts:e.toasts.map(e=>e.id===t||void 0===t?{...e,open:!1}:e)}}case"REMOVE_TOAST":if(void 0===_.toastId)return{...e,toasts:[]};return{...e,toasts:e.toasts.filter(e=>e.id!==_.toastId)}}},o=[],l={toasts:[]};function a(e){l=O(l,e),o.forEach(e=>{e(l)})}function E(e){let{..._}=e,t=(T=(T+1)%Number.MAX_VALUE).toString(),L=()=>a({type:"DISMISS_TOAST",toastId:t});return a({type:"ADD_TOAST",toast:{..._,id:t,open:!0,onOpenChange:e=>{e||L()}}}),{id:t,dismiss:L,update:e=>a({type:"UPDATE_TOAST",toast:{...e,id:t}})}}function r(){let[e,_]=L.useState(l);return L.useEffect(()=>(o.push(_),()=>{let e=o.indexOf(_);e>-1&&o.splice(e,1)}),[e]),{...e,toast:E,dismiss:e=>a({type:"DISMISS_TOAST",toastId:e})}}},2072:function(e,_,t){t.d(_,{v:function(){return i}});let L=e=>(" "+e).slice(1);var T=t(7883);class i{connect(){var e;"connected"===this.status&&(null===(e=this.socket)||void 0===e||e.close()),this.setStatus("loading");let _=setTimeout(()=>{"loading"===this.status&&this.close()},3e3);this.socket=new T.w3cwebsocket(this.endpoint),this.socket.onopen=()=>{var e;null===(e=this.socket)||void 0===e||e.send("".concat(this.password,"\n"))},this.socket.onmessage=async e=>{if("connected"!==this.status)"\r\nWebREPL connected\r\n>>> "===e.data?(this.setStatus("connected"),clearTimeout(_)):"Password: "===e.data?this.setStatus("loading"):this.setStatus("disconnected");else if("connected"===this.status)for(let _=0;_<this.onMessageReceiveCallbacks.length;_++)await this.onMessageReceiveCallbacks[_](e.data.toString())},this.socket.onerror=e=>{console.error(e)}}close(){var e;null===(e=this.socket)||void 0===e||e.close(),this.setStatus("disconnected")}async send(e){let _=async()=>{let _=L(e);if(this.socket){for(this.socket.send('\x01exec("""print(\'STARTCODERUNNING\')\n');""!==_;)this.socket.send(_.substring(0,20)),_=_.substring(20),await new Promise(e=>setTimeout(e,50));this.socket.send('\nprint(\'ENDCODERUNNING\')""", {})\x04')}};for(let _=0;_<this.onBeforeSendCallbacks.length;_++)await this.onBeforeSendCallbacks[_](e);await _();for(let _=0;_<this.onAfterSentCallbacks.length;_++)await this.onAfterSentCallbacks[_](e)}async interrupt(){var e;null===(e=this.socket)||void 0===e||e.send("\x02\x03")}async reboot(){var e;null===(e=this.socket)||void 0===e||e.send("\x02\x04"),this.setStatus("disconnected")}async setStatus(e){let _=this.status;Object.defineProperty(this,"status",{writable:!1,configurable:!0,value:e});for(let t=0;t<this.onAfterStatusChangedCallbacks.length;t++)await this.onAfterStatusChangedCallbacks[t](_,e)}addOnMessageReceiveCallback(e,_){this.onMessageReceiveCallbackIds.has(e)||(this.onMessageReceiveCallbacks.push(_),this.onMessageReceiveCallbackIds.add(e))}addOnAfterStatusChangedCallback(e,_){this.onAfterStatusChangedCallbackIds.has(e)||(this.onAfterStatusChangedCallbacks.push(_),this.onAfterStatusChangedCallbackIds.add(e))}addOnBeforeSendCallbacks(e,_){this.onBeforeSendCallbackIds.has(e)||(this.onBeforeSendCallbacks.push(_),this.onBeforeSendCallbackIds.add(e))}addOnAfterSentCallbacks(e,_){this.onAfterSentCallbackIds.has(e)||(this.onAfterSentCallbacks.push(_),this.onAfterSentCallbackIds.add(e))}constructor({endpoint:e,password:_}){this.onMessageReceiveCallbacks=[],this.onMessageReceiveCallbackIds=new Set,this.onAfterStatusChangedCallbacks=[],this.onAfterStatusChangedCallbackIds=new Set,this.onBeforeSendCallbacks=[],this.onBeforeSendCallbackIds=new Set,this.onAfterSentCallbacks=[],this.onAfterSentCallbackIds=new Set,this.endpoint=e,this.password=_,this.status="disconnected"}}},9718:function(e,_,t){t.d(_,{K:function(){return L}});class L{push(e){this.elements.push(e)}pop(){return this.elements.pop()}peek(){return this.elements[this.elements.length-1]}isEmpty(){return 0===this.elements.length}findById(e){return this.elements.find(_=>_.id===e)}removeById(e){let _=this.elements.findIndex(_=>_.id===e);return -1!==_&&(this.elements.splice(_,1),!0)}size(){return this.elements.length}getElements(){return[...this.elements]}constructor(e=[]){this.elements=[],this.elements=[...e]}}},1962:function(e,_,t){t.d(_,{cn:function(){return i}});var L=t(4686),T=t(7226);function i(){for(var e=arguments.length,_=Array(e),t=0;t<e;t++)_[t]=arguments[t];return(0,T.m)((0,L.W)(_))}},3916:function(e,_,t){t.d(_,{Z:function(){return L}});let L=function(){for(var e=arguments.length,_=Array(e),t=0;t<e;t++)_[t]=arguments[t]}},4868:function(e){e.exports=JSON.parse('{"DISCONNECTED":"Disconnected","CONNECTED":"Connected","SAVE":"Save","LOAD":"Load","DEPLOY":"Deploy","CLEAR":"Clear","CLEAR_FILTER":"Clear Filter","BREAK":"Break","RUN":"Run","CONNECT":"Connect","CONNECTION":"Connection","REFRESH":"Refresh","REBOOT":"Reboot","ROBOT":"Robot","CONFIRM":"Confirm","CANCEL":"Cancel","CODE_EDITOR":"Code Editor","CONSOLE":"Console","CLOSE_TAB":"Close Tab","ACTIVITY":"Activity","ACTIVITIES_LIBRARY":"Activities Library","ALL":"All","ACTIVITY_NOT_FOUND":"Uh Oh, No Activity Found","SETTINGS":"Settings","CONFIG":"Config","ROBOT_IP_ADDRESS":"Robot IP Address","EDITOR":"Editor","CODE":"Code","BLOCK":"Block","LANGUAGE":"Language","SSID":"SSID","PASSWORD":"Password","WIFI":"Wifi","WIFI_NETWORK":"Wifi Network","WIFI_PASSWORD":"Wifi Password","TOAST_LOAD_ACTIVITY_TITLE":"Activity loaded","TOAST_LOAD_ACTIVITY_CODE_DESCRIPTION":"Activity code is loaded into a new tab in workspace","TOAST_LOAD_ACTIVITY_BLOCK_DESCRIPTION":"Activity is loaded into workspace","TOAST_LOAD_CODE_ERROR_TITLE":"Error: Fail to load code from the SD card","TOAST_LOAD_CODE_ERROR_DESCRIPTION":"Please try again","TOAST_LOAD_CODE_SUCCESS_TITLE":"Success","TOAST_LOAD_CODE_SUCCESS_DESCRIPTION":"Loaded code from the SD card","TOAST_DEPLOY_CODE_ERROR_TITLE":"Error: Fail to deploy","TOAST_DEPLOY_CODE_ERROR_DESCRIPTION":"Please try again","TOAST_DEPLOY_CODE_SUCCESS_TITLE":"Success","TOAST_DEPLOY_CODE_SUCCESS_DESCRIPTION":"Deployed code","TOAST_DEPLOY_CODE_FAIL_TITLE":"Uh oh, something went wrong...","TOAST_DEPLOY_CODE_FAIL_DESCRIPTION":"Please try again","TOAST_SAVE_CODE_ERROR_TITLE":"Error: Fail to save to the SD card","TOAST_SAVE_CODE_ERROR_DESCRIPTION":"Please try again","TOAST_SAVE_CODE_SUCCESS_TITLE":"Success","TOAST_SAVE_CODE_SUCCESS_DESCRIPTION":"Saved code to the SD card","TOAST_NETWORK_STATUS_DISCONNECTED_TITLE":"Robot is not connected","TOAST_NETWORK_STATUS_DISCONNECTED_SAVE_DESCRIPTION":"Please connect your robot to save","TOAST_NETWORK_STATUS_DISCONNECTED_LOAD_DESCRIPTION":"Please connect your robot to save","TOAST_NETWORK_STATUS_DISCONNECTED_BREAK_DESCRIPTION":"Please connect your robot to BREAK","TOAST_NETWORK_STATUS_DISCONNECTED_RUN_DESCRIPTION":"Please connect your robot to run","TOAST_NETWORK_STATUS_DISCONNECTED_DEPLOY_DESCRIPTION":"Please connect your robot to deploy","TOAST_WIFI_CONNECTING_TITLE":"Connecting to WiFi...","TOAST_WIFI_CONNECT_FAIL_TITLE":"Wrong WiFi password","TOAST_WIFI_CONNECT_FAIL_DESCRIPTION":"Please try again","TOAST_WIFI_CONNECT_SUCCESS_TITLE":"Success","TOAST_WIFI_CONNECT_SUCCESS_DESCRIPTION":"Connected to WiFi","TOAST_SETTINGS_UPDATE_ERROR_TITLE":"Uh oh, something went wrong...","TOAST_SETTINGS_UPDATE_ERROR_DESCRIPTION":"Fail to update config, please try again","TOAST_SETTINGS_UPDATE_SUCCESS_TITLE":"Success","TOAST_SETTINGS_UPDATE_SUCCESS_DESCRIPTION":"Config is updated","ALERT_SETTINGS_UPDATE_TITLE":"Confirm Change","ALERT_LANGUAGE_UPDATE_DESCRIPTION":"Are you sure you want to change the language?","ALERT_EDITOR_UPDATE_DESCRIPTION":"Your current progress will be removed. Are you sure you want to change Editor?","ALERT_CODE_DEPLOY_TITLE":"Confirm Code Deployment","ALERT_CODE_DEPLOY_DESCRIPTION":"Deploying this code will overwrite the portal feature. Do you want to continue?","ONBOARDING_WIFI_CONNECT_TITLE":"Connect CYOBot to WiFi","ONBOARDING_WIFI_CONNECT_DESCRIPTION":"Choose your WiFi network","ONBOARDING_WIFI_CONNECT_NOT_FOUND":"No networks found","ONBOARDING_RETURN_TO_HOME":"Return to home","ONBOARDING_BACK_TO_WIFI_SELECT":"Back to select WiFi network","ACTIVITY_TITLE_MATRIX_LED_BLINK":"Blink an LED on matrix","ACTIVITY_DESCRIPTION_MATRIX_LED_BLINK":"Blink an LED on the LED matrix display of the robot. Click on Break to terminate the program once you are done.","ACTIVITY_TITLE_MATRIX_CHARACTER":"Display a character","ACTIVITY_DESCRIPTION_MATRIX_CHARACTER":"Display a character on the LED matrix display. You can display alphabet characters (A~Z), and numbers (0~9).","ACTIVITY_TITLE_SCROLL_WORD":"Scroll a word","ACTIVITY_DESCRIPTION_SCROLL_WORD":"Use the built-in function to scroll a word on the LED display. You can further change the speed, the color of the word. Currently, the library on supports capital letters and numbers.","ACTIVITY_TITLE_RING_MANUAL":"Turn on LED on ring","ACTIVITY_DESCRIPTION_RING_MANUAL":"Turn on an LED on the LED ring of the robot.","ACTIVITY_TITLE_RING_LOADING":"Move LED lights in circle","ACTIVITY_DESCRIPTION_RING_LOADING":"Turn on an LED on the LED ring of the robot and move it in circle.","ACTIVITY_TITLE_BUTTON_PRESSED":"Detect pressed button","ACTIVITY_DESCRIPTION_BUTTON_PRESSED":"Detect pressed button. If left button is pressed, turn on an LED on matrix display. Else, turn off LED. Click on Break to terminate the program once you are done.","ACTIVITY_TITLE_SPEAKER_PLAY":"Play a music file","ACTIVITY_DESCRIPTION_SPEAKER_PLAY":"Play a music file stored in the micro SD card, using the built-in speaker of the robot.","ACTIVITY_TITLE_IMU_TILT_TEST":"Capture motion data","ACTIVITY_DESCRIPTION_IMU_TILT_TEST":"Capture motion data by tilting the robot in different directions and observe the LED displaying accordingly. Click on Break to terminate the program once you are done.","ACTIVITY_TITLE_RECORD_REPLAY":"Capture sound","ACTIVITY_DESCRIPTION_RECORD_REPLAY":"Capture sound using built-in microphone for 10 seconds and replay using the built-in speaker.","ACTIVITY_TITLE_FORWARD_COMMAND":"Walk forward 3 steps on 4 legs","ACTIVITY_DESCRIPTION_FORWARD_COMMAND":"Use the built-in functions to control the robot to walk forward 3 steps in its spider-form.","ACTIVITY_TITLE_ROTATE_COMMAND":"Rotate 3 steps to left on 4 legs","ACTIVITY_DESCRIPTION_ROTATE_COMMAND":"Use the built-in functions to control the robot to rotate 3 steps to the left in its spider-form.","ACTIVITY_TITLE_WAVING":"Wave right hand standing up","ACTIVITY_DESCRIPTION_WAVING":"Control 1 motor at the hip of the first leg while positioning the robot standing up in human form to make it wave at you 3 times.","ACTIVITY_TITLE_PUSHUP":"Push up","ACTIVITY_DESCRIPTION_PUSHUP":"Control 2 motors at the knees of 2 legs to make your robot push up in human form.","ACTIVITY_TITLE_FORWARD_COMMAND_WHEELER":"Drive straight forward for 2 seconds","ACTIVITY_DESCRIPTION_FORWARD_COMMAND_WHEELER":"Use the built-in functions to control the robot to drive forward for 2 seconds in wheeler mode","ACTIVITY_TITLE_FORWARD_DIAGLEFT_COMMAND_WHEELER":"Drive straight diagonally for 2 seconds","ACTIVITY_DESCRIPTION_FORWARD_DIAGLEFT_COMMAND_WHEELER":"Use the built-in functions to control the robot to drive forward diagonally for 2 seconds in wheeler mode","ACTIVITY_TITLE_FORWARD_LEFT_COMMAND_WHEELER":"Turn left for 2 seconds","ACTIVITY_DESCRIPTION_FORWARD_LEFT_COMMAND_WHEELER":"Use the built-in functions to control the robot to turn left for 2 seconds in wheeler mode","ACTIVITY_TITLE_CONSOLE_JOYSTICK_RING":"Display joystick position","ACTIVITY_DESCRIPTION_CONSOLE_JOYSTICK_RING":"Read left joystick and display the position using LED ring.","ACTIVITY_TITLE_CONSOLE_JOYSTICK_RING_2":"Display joystick angle","ACTIVITY_DESCRIPTION_CONSOLE_JOYSTICK_RING_2":"Read left joystick position and display joystick angle using LED ring.","BLOCKLY_CATEGORY_STRUCTURE":"Structure","BLOCKLY_CATEGORY_CONDITION":"Condition","BLOCKLY_CATEGORY_VALUE":"Value","BLOCKLY_CATEGORY_DISPLAY":"Display","BLOCKLY_CATEGORY_MOTION":"Motion","BLOCKLY_CATEGORY_SENSING":"Sensing","BLOCKLY_CATEGORY_SOUND":"Sound","BLOCKLY_CATEGORY_TIMING":"Timing","BLOCKLY_CATEGORY_OTHER":"Other","BLOCKLY_CATEGORY_MATH":"Math","BLOCKLY_CATEGORY_DATA_LIST":"Data List","BLOCKLY_CATEGORY_EXTERNAL":"External","BLOCKLY_CATEGORY_VARIABLES":"Variables","BLOCKLY_STRUCTURE_MATRIX_INIT":"Start LED matrix","BLOCKLY_STRUCTURE_RING_INIT":"Start LED ring","BLOCKLY_STRUCTURE_TIME_INIT":"Start timing","BLOCKLY_STRUCTURE_SPEAKER_INIT":"Start speaker","BLOCKLY_STRUCTURE_IMU_INIT":"Start motion sensor","BLOCKLY_STRUCTURE_BUTTON_INIT":"Start buttons","BLOCKLY_STRUCTURE_MICROPHONE_INIT":"Start microphone","BLOCKLY_STRUCTURE_CRAWLER_INIT":"Start Crawler","BLOCKLY_STRUCTURE_WHEELER_INIT":"Start Wheeler","BLOCKLY_STRUCTURE_CONSOLE_INIT":"Start Game Console","BLOCKLY_DISPLAY_MATRIX_RESET":"Reset LED matrix","BLOCKLY_DISPLAY_RING_RESET":"Reset LED ring","BLOCKLY_DISPLAY_MATRIX_CHARACTER":"Display %1 in %2","BLOCKLY_DISPLAY_MATRIX_SCROLL":"Scroll %1 in %2 %3","BLOCKLY_DISPLAY_MATRIX_MANUAL":"Set LED #%1 on matrix to %2","BLOCKLY_DISPLAY_MATRIX_MANUAL_2":"Set LED #%1 on matrix to red: %2%, green: %3%, blue: %4%","BLOCKLY_DISPLAY_MATRIX_ALL":"Set all LEDs on matrix to %1","BLOCKLY_DISPLAY_MATRIX_ALL_2":"Set all LEDs on matrix to red: %1%, green: %2%, blue: %3%","BLOCKLY_DISPLAY_RING_SPIN":"Spin an LED in %1 %2","BLOCKLY_DISPLAY_RING_MANUAL":"Set LED #%1 on ring to %2","BLOCKLY_DISPLAY_RING_MANUAL_2":"Set LED #%1 on ring to red: %2%, green: %3%, blue: %4%","BLOCKLY_DISPLAY_RING_ALL":"Set all LEDs on ring to %1","BLOCKLY_DISPLAY_RING_ALL_2":"Set all LEDs on ring to red: %1%, green: %2%, blue: %3%","BLOCKLY_MOTION_COMMAND":"Walk %1 %2 steps","BLOCKLY_MOTION_COMMAND_2":"Rotate %1 %2 steps","BLOCKLY_MOTION_COMMAND_3":"Drive %1 %2 for %3 seconds","BLOCKLY_MOTION_THROTTLE":"Set throttle to %1","BLOCKLY_MOTION_STEERING":"Set steering\\nfront %1 back %2","BLOCKLY_MOTION_OFF":"Turn off motors","BLOCKLY_MOTION_CENTER":"Center motors","BLOCKLY_MOTION_SINGLE":"Set leg %1 \\nhip %2 knee %3","BLOCKLY_MOTION_ALL":"Set all legs\\nLeg 0 hip %1 knee %2\\nLeg 1 hip %3 knee %4\\nLeg 2 hip %5 knee %6\\nLeg 3 hip %7 knee %8\\n","BLOCKLY_MOTION_SET_ANGLE":"Set channel %1 to angle %2","BLOCKLY_SENSING_ACCEL":"acceleration %1","BLOCKLY_SENSING_GYRO":"gyroscope %1","BLOCKLY_SENSING_TEMP":"temperature","BLOCKLY_SENSING_BUTTON":"%1 button","BLOCKLY_SENSING_CONSOLE_TRIGGER":"%1 trigger","BLOCKLY_SENSING_CONSOLE_JOYSTICK_BUTTON":"%1 joystick button","BLOCKLY_SENSING_CONSOLE_JOYSTICK":"%1 joystick %2 axis","BLOCKLY_SOUND_PLAY":"Play song","BLOCKLY_SOUND_PLAY_RECORD":"Play record","BLOCKLY_SOUND_RECORD":"Record %1 seconds","BLOCKLY_TIMING_SLEEP":"Delay %1 seconds","BLOCKLY_TIMING_TICKSMS":"milliseconds since start","BLOCKLY_TIMING_TIME":"seconds since start","BLOCKLY_VALUE_NUMBER":"%1","BLOCKLY_SPEED_SLOWLY":"slowly","BLOCKLY_SPEED_NORMALLY":"normally","BLOCKLY_SPEED_FAST":"fast","BLOCKLY_SPEED_VERY_FAST":"very fast","BLOCKLY_STRAIGHT":"straight","BLOCKLY_LEFT":"left","BLOCKLY_RIGHT":"right","BLOCKLY_LEFT_DIAGONAL":"left diagonal","BLOCKLY_RIGHT_DIAGONAL":"right diagonal","BLOCKLY_FORWARD":"forward","BLOCKLY_BACKWARD":"backward","BLOCKLY_ADD_COMMENT":"Add Comment","BLOCKLY_CANNOT_DELETE_VARIABLE_PROCEDURE":"Can\'t delete the variable \'%1\' because it\'s part of the definition of the function \'%2\'","BLOCKLY_CHANGE_VALUE_TITLE":"Change value:","BLOCKLY_CLEAN_UP":"Clean up Blocks","BLOCKLY_COLLAPSED_WARNINGS_WARNING":"Collapsed blocks contain warnings.","BLOCKLY_COLLAPSE_ALL":"Collapse Blocks","BLOCKLY_COLLAPSE_BLOCK":"Collapse Block","BLOCKLY_COLOUR_BLEND_COLOUR1":"colour 1","BLOCKLY_COLOUR_BLEND_COLOUR2":"colour 2","BLOCKLY_COLOUR_BLEND_HELPURL":"https://meyerweb.com/eric/tools/color-blend/#:::rgbp","BLOCKLY_COLOUR_BLEND_RATIO":"ratio","BLOCKLY_COLOUR_BLEND_TITLE":"blend","BLOCKLY_COLOUR_BLEND_TOOLTIP":"Blends two colours together with a given ratio (0.0 - 1.0).","BLOCKLY_COLOUR_PICKER_HELPURL":"https://en.wikipedia.org/wiki/Color","BLOCKLY_COLOUR_PICKER_TOOLTIP":"Choose a colour from the palette.","BLOCKLY_COLOUR_RANDOM_HELPURL":"http://randomcolour.com","BLOCKLY_COLOUR_RANDOM_TITLE":"random colour","BLOCKLY_COLOUR_RANDOM_TOOLTIP":"Choose a colour at random.","BLOCKLY_COLOUR_RGB_BLUE":"blue","BLOCKLY_COLOUR_RGB_GREEN":"green","BLOCKLY_COLOUR_RGB_HELPURL":"https://www.december.com/html/spec/colorpercompact.html","BLOCKLY_COLOUR_RGB_RED":"red","BLOCKLY_COLOUR_RGB_TITLE":"colour with","BLOCKLY_COLOUR_RGB_TOOLTIP":"Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_HELPURL":"https://github.com/google/blockly/wiki/Loops#loop-termination-blocks","BLOCKLY_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK":"break out of loop","BLOCKLY_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE":"continue with next iteration of loop","BLOCKLY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK":"Break out of the containing loop.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE":"Skip the rest of this loop, and continue with the next iteration.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_WARNING":"Warning: This block may only be used within a loop.","BLOCKLY_CONTROLS_FOREACH_HELPURL":"https://github.com/google/blockly/wiki/Loops#for-each","BLOCKLY_CONTROLS_FOREACH_TITLE":"for each item %1 in list %2","BLOCKLY_CONTROLS_FOREACH_TOOLTIP":"For each item in a list, set the variable \'%1\' to the item, and then do some statements.","BLOCKLY_CONTROLS_FOR_HELPURL":"https://github.com/google/blockly/wiki/Loops#count-with","BLOCKLY_CONTROLS_FOR_TITLE":"count with %1 from %2 to %3 by %4","BLOCKLY_CONTROLS_FOR_TOOLTIP":"Have the variable \'%1\' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.","BLOCKLY_CONTROLS_IF_ELSEIF_TOOLTIP":"Add a condition to the if block.","BLOCKLY_CONTROLS_IF_ELSE_TOOLTIP":"Add a final, catch-all condition to the if block.","BLOCKLY_CONTROLS_IF_HELPURL":"https://github.com/google/blockly/wiki/IfElse","BLOCKLY_CONTROLS_IF_IF_TOOLTIP":"Add, remove, or reorder sections to reconfigure this if block.","BLOCKLY_CONTROLS_IF_MSG_ELSE":"else","BLOCKLY_CONTROLS_IF_MSG_ELSEIF":"else if","BLOCKLY_CONTROLS_IF_MSG_IF":"if","BLOCKLY_CONTROLS_IF_TOOLTIP_1":"If a value is true, then do some statements.","BLOCKLY_CONTROLS_IF_TOOLTIP_2":"If a value is true, then do the first block of statements. Otherwise, do the second block of statements.","BLOCKLY_CONTROLS_IF_TOOLTIP_3":"If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.","BLOCKLY_CONTROLS_IF_TOOLTIP_4":"If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.","BLOCKLY_CONTROLS_REPEAT_HELPURL":"https://en.wikipedia.org/wiki/For_loop","BLOCKLY_CONTROLS_REPEAT_INPUT_DO":"do","BLOCKLY_CONTROLS_REPEAT_TITLE":"repeat %1 times","BLOCKLY_CONTROLS_REPEAT_TOOLTIP":"Do some statements several times.","BLOCKLY_CONTROLS_WHILEUNTIL_HELPURL":"https://github.com/google/blockly/wiki/Loops#repeat","BLOCKLY_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL":"repeat until","BLOCKLY_CONTROLS_WHILEUNTIL_OPERATOR_WHILE":"repeat while","BLOCKLY_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL":"While a value is false, then do some statements.","BLOCKLY_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE":"While a value is true, then do some statements.","BLOCKLY_DELETE_ALL_BLOCKS":"Delete all %1 blocks?","BLOCKLY_DELETE_BLOCK":"Delete Block","BLOCKLY_DELETE_VARIABLE":"Delete the \'%1\' variable","BLOCKLY_DELETE_VARIABLE_CONFIRMATION":"Delete %1 uses of the \'%2\' variable?","BLOCKLY_DELETE_X_BLOCKS":"Delete %1 Blocks","BLOCKLY_DIALOG_CANCEL":"Cancel","BLOCKLY_DIALOG_OK":"OK","BLOCKLY_DISABLE_BLOCK":"Disable Block","BLOCKLY_DUPLICATE_BLOCK":"Duplicate","BLOCKLY_DUPLICATE_COMMENT":"Duplicate Comment","BLOCKLY_ENABLE_BLOCK":"Enable Block","BLOCKLY_EXPAND_ALL":"Expand Blocks","BLOCKLY_EXPAND_BLOCK":"Expand Block","BLOCKLY_EXTERNAL_INPUTS":"External Inputs","BLOCKLY_HELP":"Help","BLOCKLY_INLINE_INPUTS":"Inline Inputs","BLOCKLY_LISTS_CREATE_EMPTY_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-empty-list","BLOCKLY_LISTS_CREATE_EMPTY_TITLE":"create empty list","BLOCKLY_LISTS_CREATE_EMPTY_TOOLTIP":"Returns a list, of length 0, containing no data records","BLOCKLY_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD":"list","BLOCKLY_LISTS_CREATE_WITH_CONTAINER_TOOLTIP":"Add, remove, or reorder sections to reconfigure this list block.","BLOCKLY_LISTS_CREATE_WITH_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-list-with","BLOCKLY_LISTS_CREATE_WITH_INPUT_WITH":"create list with","BLOCKLY_LISTS_CREATE_WITH_ITEM_TOOLTIP":"Add an item to the list.","BLOCKLY_LISTS_CREATE_WITH_TOOLTIP":"Create a list with any number of items.","BLOCKLY_LISTS_GET_INDEX_FIRST":"first","BLOCKLY_LISTS_GET_INDEX_FROM_END":"# from end","BLOCKLY_LISTS_GET_INDEX_FROM_START":"#","BLOCKLY_LISTS_GET_INDEX_GET":"get","BLOCKLY_LISTS_GET_INDEX_GET_REMOVE":"get and remove","BLOCKLY_LISTS_GET_INDEX_LAST":"last","BLOCKLY_LISTS_GET_INDEX_RANDOM":"random","BLOCKLY_LISTS_GET_INDEX_REMOVE":"remove","BLOCKLY_LISTS_GET_INDEX_TAIL":"","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_FIRST":"Returns the first item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_FROM":"Returns the item at the specified position in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_LAST":"Returns the last item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_RANDOM":"Returns a random item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST":"Removes and returns the first item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM":"Removes and returns the item at the specified position in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST":"Removes and returns the last item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM":"Removes and returns a random item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST":"Removes the first item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM":"Removes the item at the specified position in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST":"Removes the last item in a list.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM":"Removes a random item in a list.","BLOCKLY_LISTS_GET_SUBLIST_END_FROM_END":"to # from end","BLOCKLY_LISTS_GET_SUBLIST_END_FROM_START":"to #","BLOCKLY_LISTS_GET_SUBLIST_END_LAST":"to last","BLOCKLY_LISTS_GET_SUBLIST_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-a-sublist","BLOCKLY_LISTS_GET_SUBLIST_START_FIRST":"get sub-list from first","BLOCKLY_LISTS_GET_SUBLIST_START_FROM_END":"get sub-list from # from end","BLOCKLY_LISTS_GET_SUBLIST_START_FROM_START":"get sub-list from #","BLOCKLY_LISTS_GET_SUBLIST_TAIL":"","BLOCKLY_LISTS_GET_SUBLIST_TOOLTIP":"Creates a copy of the specified portion of a list.","BLOCKLY_LISTS_INDEX_FROM_END_TOOLTIP":"%1 is the last item.","BLOCKLY_LISTS_INDEX_FROM_START_TOOLTIP":"%1 is the first item.","BLOCKLY_LISTS_INDEX_OF_FIRST":"find first occurrence of item","BLOCKLY_LISTS_INDEX_OF_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list","BLOCKLY_LISTS_INDEX_OF_LAST":"find last occurrence of item","BLOCKLY_LISTS_INDEX_OF_TOOLTIP":"Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.","BLOCKLY_LISTS_INLIST":"in list","BLOCKLY_LISTS_ISEMPTY_HELPURL":"https://github.com/google/blockly/wiki/Lists#is-empty","BLOCKLY_LISTS_ISEMPTY_TITLE":"%1 is empty","BLOCKLY_LISTS_ISEMPTY_TOOLTIP":"Returns true if the list is empty.","BLOCKLY_LISTS_LENGTH_HELPURL":"https://github.com/google/blockly/wiki/Lists#length-of","BLOCKLY_LISTS_LENGTH_TITLE":"length of %1","BLOCKLY_LISTS_LENGTH_TOOLTIP":"Returns the length of a list.","BLOCKLY_LISTS_REPEAT_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-list-with","BLOCKLY_LISTS_REPEAT_TITLE":"create list with item %1 repeated %2 times","BLOCKLY_LISTS_REPEAT_TOOLTIP":"Creates a list consisting of the given value repeated the specified number of times.","BLOCKLY_LISTS_REVERSE_HELPURL":"https://github.com/google/blockly/wiki/Lists#reversing-a-list","BLOCKLY_LISTS_REVERSE_MESSAGE0":"reverse %1","BLOCKLY_LISTS_REVERSE_TOOLTIP":"Reverse a copy of a list.","BLOCKLY_LISTS_SET_INDEX_HELPURL":"https://github.com/google/blockly/wiki/Lists#in-list--set","BLOCKLY_LISTS_SET_INDEX_INPUT_TO":"as","BLOCKLY_LISTS_SET_INDEX_INSERT":"insert at","BLOCKLY_LISTS_SET_INDEX_SET":"set","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST":"Inserts the item at the start of a list.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_FROM":"Inserts the item at the specified position in a list.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_LAST":"Append the item to the end of a list.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM":"Inserts the item randomly in a list.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_FIRST":"Sets the first item in a list.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_FROM":"Sets the item at the specified position in a list.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_LAST":"Sets the last item in a list.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_RANDOM":"Sets a random item in a list.","BLOCKLY_LISTS_SORT_HELPURL":"https://github.com/google/blockly/wiki/Lists#sorting-a-list","BLOCKLY_LISTS_SORT_ORDER_ASCENDING":"ascending","BLOCKLY_LISTS_SORT_ORDER_DESCENDING":"descending","BLOCKLY_LISTS_SORT_TITLE":"sort %1 %2 %3","BLOCKLY_LISTS_SORT_TOOLTIP":"Sort a copy of a list.","BLOCKLY_LISTS_SORT_TYPE_IGNORECASE":"alphabetic, ignore case","BLOCKLY_LISTS_SORT_TYPE_NUMERIC":"numeric","BLOCKLY_LISTS_SORT_TYPE_TEXT":"alphabetic","BLOCKLY_LISTS_SPLIT_HELPURL":"https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists","BLOCKLY_LISTS_SPLIT_LIST_FROM_TEXT":"make list from text","BLOCKLY_LISTS_SPLIT_TEXT_FROM_LIST":"make text from list","BLOCKLY_LISTS_SPLIT_TOOLTIP_JOIN":"Join a list of texts into one text, separated by a delimiter.","BLOCKLY_LISTS_SPLIT_TOOLTIP_SPLIT":"Split text into a list of texts, breaking at each delimiter.","BLOCKLY_LISTS_SPLIT_WITH_DELIMITER":"with delimiter","BLOCKLY_LOGIC_BOOLEAN_FALSE":"false","BLOCKLY_LOGIC_BOOLEAN_HELPURL":"https://github.com/google/blockly/wiki/Logic#values","BLOCKLY_LOGIC_BOOLEAN_TOOLTIP":"Returns either true or false.","BLOCKLY_LOGIC_BOOLEAN_TRUE":"true","BLOCKLY_LOGIC_COMPARE_HELPURL":"https://en.wikipedia.org/wiki/Inequality_(mathematics)","BLOCKLY_LOGIC_COMPARE_TOOLTIP_EQ":"Return true if both inputs equal each other.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_GT":"Return true if the first input is greater than the second input.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_GTE":"Return true if the first input is greater than or equal to the second input.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_LT":"Return true if the first input is smaller than the second input.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_LTE":"Return true if the first input is smaller than or equal to the second input.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_NEQ":"Return true if both inputs are not equal to each other.","BLOCKLY_LOGIC_NEGATE_HELPURL":"https://github.com/google/blockly/wiki/Logic#not","BLOCKLY_LOGIC_NEGATE_TITLE":"not %1","BLOCKLY_LOGIC_NEGATE_TOOLTIP":"Returns true if the input is false. Returns false if the input is true.","BLOCKLY_LOGIC_NULL":"null","BLOCKLY_LOGIC_NULL_HELPURL":"https://en.wikipedia.org/wiki/Nullable_type","BLOCKLY_LOGIC_NULL_TOOLTIP":"Returns null.","BLOCKLY_LOGIC_OPERATION_AND":"and","BLOCKLY_LOGIC_OPERATION_HELPURL":"https://github.com/google/blockly/wiki/Logic#logical-operations","BLOCKLY_LOGIC_OPERATION_OR":"or","BLOCKLY_LOGIC_OPERATION_TOOLTIP_AND":"Return true if both inputs are true.","BLOCKLY_LOGIC_OPERATION_TOOLTIP_OR":"Return true if at least one of the inputs is true.","BLOCKLY_LOGIC_TERNARY_CONDITION":"test","BLOCKLY_LOGIC_TERNARY_HELPURL":"https://en.wikipedia.org/wiki/%3F:","BLOCKLY_LOGIC_TERNARY_IF_FALSE":"if false","BLOCKLY_LOGIC_TERNARY_IF_TRUE":"if true","BLOCKLY_LOGIC_TERNARY_TOOLTIP":"Check the condition in \'test\'. If the condition is true, returns the \'if true\' value; otherwise returns the \'if false\' value.","BLOCKLY_MATH_ADDITION_SYMBOL":"+","BLOCKLY_MATH_ARITHMETIC_HELPURL":"https://en.wikipedia.org/wiki/Arithmetic","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_ADD":"Return the sum of the two numbers.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_DIVIDE":"Return the quotient of the two numbers.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_MINUS":"Return the difference of the two numbers.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_MULTIPLY":"Return the product of the two numbers.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_POWER":"Return the first number raised to the power of the second number.","BLOCKLY_MATH_ATAN2_HELPURL":"https://en.wikipedia.org/wiki/Atan2","BLOCKLY_MATH_ATAN2_TITLE":"atan2 of X:%1 Y:%2","BLOCKLY_MATH_ATAN2_TOOLTIP":"Return the arctangent of point (X, Y) in degrees from -180 to 180.","BLOCKLY_MATH_CHANGE_HELPURL":"https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter","BLOCKLY_MATH_CHANGE_TITLE":"change %1 by %2","BLOCKLY_MATH_CHANGE_TOOLTIP":"Add a number to variable \'%1\'.","BLOCKLY_MATH_CONSTANT_HELPURL":"https://en.wikipedia.org/wiki/Mathematical_constant","BLOCKLY_MATH_CONSTANT_TOOLTIP":"Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(\xbd) (0.707…), or ∞ (infinity).","BLOCKLY_MATH_CONSTRAIN_HELPURL":"https://en.wikipedia.org/wiki/Clamping_(graphics)","BLOCKLY_MATH_CONSTRAIN_TITLE":"constrain %1 low %2 high %3","BLOCKLY_MATH_CONSTRAIN_TOOLTIP":"Constrain a number to be between the specified limits (inclusive).","BLOCKLY_MATH_DIVISION_SYMBOL":"\xf7","BLOCKLY_MATH_IS_DIVISIBLE_BY":"is divisible by","BLOCKLY_MATH_IS_EVEN":"is even","BLOCKLY_MATH_IS_NEGATIVE":"is negative","BLOCKLY_MATH_IS_ODD":"is odd","BLOCKLY_MATH_IS_POSITIVE":"is positive","BLOCKLY_MATH_IS_PRIME":"is prime","BLOCKLY_MATH_IS_TOOLTIP":"Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.","BLOCKLY_MATH_IS_WHOLE":"is whole","BLOCKLY_MATH_MODULO_HELPURL":"https://en.wikipedia.org/wiki/Modulo_operation","BLOCKLY_MATH_MODULO_TITLE":"remainder of %1 \xf7 %2","BLOCKLY_MATH_MODULO_TOOLTIP":"Return the remainder from dividing the two numbers.","BLOCKLY_MATH_MULTIPLICATION_SYMBOL":"\xd7","BLOCKLY_MATH_NUMBER_HELPURL":"https://en.wikipedia.org/wiki/Number","BLOCKLY_MATH_NUMBER_TOOLTIP":"A number.","BLOCKLY_MATH_ONLIST_HELPURL":"","BLOCKLY_MATH_ONLIST_OPERATOR_AVERAGE":"average of list","BLOCKLY_MATH_ONLIST_OPERATOR_MAX":"max of list","BLOCKLY_MATH_ONLIST_OPERATOR_MEDIAN":"median of list","BLOCKLY_MATH_ONLIST_OPERATOR_MIN":"min of list","BLOCKLY_MATH_ONLIST_OPERATOR_MODE":"modes of list","BLOCKLY_MATH_ONLIST_OPERATOR_RANDOM":"random item of list","BLOCKLY_MATH_ONLIST_OPERATOR_STD_DEV":"standard deviation of list","BLOCKLY_MATH_ONLIST_OPERATOR_SUM":"sum of list","BLOCKLY_MATH_ONLIST_TOOLTIP_AVERAGE":"Return the average (arithmetic mean) of the numeric values in the list.","BLOCKLY_MATH_ONLIST_TOOLTIP_MAX":"Return the largest number in the list.","BLOCKLY_MATH_ONLIST_TOOLTIP_MEDIAN":"Return the median number in the list.","BLOCKLY_MATH_ONLIST_TOOLTIP_MIN":"Return the smallest number in the list.","BLOCKLY_MATH_ONLIST_TOOLTIP_MODE":"Return a list of the most common item(s) in the list.","BLOCKLY_MATH_ONLIST_TOOLTIP_RANDOM":"Return a random element from the list.","BLOCKLY_MATH_ONLIST_TOOLTIP_STD_DEV":"Return the standard deviation of the list.","BLOCKLY_MATH_ONLIST_TOOLTIP_SUM":"Return the sum of all the numbers in the list.","BLOCKLY_MATH_POWER_SYMBOL":"^","BLOCKLY_MATH_RANDOM_FLOAT_HELPURL":"https://en.wikipedia.org/wiki/Random_number_generation","BLOCKLY_MATH_RANDOM_FLOAT_TITLE_RANDOM":"random fraction","BLOCKLY_MATH_RANDOM_FLOAT_TOOLTIP":"Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).","BLOCKLY_MATH_RANDOM_INT_HELPURL":"https://en.wikipedia.org/wiki/Random_number_generation","BLOCKLY_MATH_RANDOM_INT_TITLE":"random integer from %1 to %2","BLOCKLY_MATH_RANDOM_INT_TOOLTIP":"Return a random integer between the two specified limits, inclusive.","BLOCKLY_MATH_ROUND_HELPURL":"https://en.wikipedia.org/wiki/Rounding","BLOCKLY_MATH_ROUND_OPERATOR_ROUND":"round","BLOCKLY_MATH_ROUND_OPERATOR_ROUNDDOWN":"round down","BLOCKLY_MATH_ROUND_OPERATOR_ROUNDUP":"round up","BLOCKLY_MATH_ROUND_TOOLTIP":"Round a number up or down.","BLOCKLY_MATH_SINGLE_HELPURL":"https://en.wikipedia.org/wiki/Square_root","BLOCKLY_MATH_SINGLE_OP_ABSOLUTE":"absolute","BLOCKLY_MATH_SINGLE_OP_ROOT":"square root","BLOCKLY_MATH_SINGLE_TOOLTIP_ABS":"Return the absolute value of a number.","BLOCKLY_MATH_SINGLE_TOOLTIP_EXP":"Return e to the power of a number.","BLOCKLY_MATH_SINGLE_TOOLTIP_LN":"Return the natural logarithm of a number.","BLOCKLY_MATH_SINGLE_TOOLTIP_LOG10":"Return the base 10 logarithm of a number.","BLOCKLY_MATH_SINGLE_TOOLTIP_NEG":"Return the negation of a number.","BLOCKLY_MATH_SINGLE_TOOLTIP_POW10":"Return 10 to the power of a number.","BLOCKLY_MATH_SINGLE_TOOLTIP_ROOT":"Return the square root of a number.","BLOCKLY_MATH_SUBTRACTION_SYMBOL":"-","BLOCKLY_MATH_TRIG_ACOS":"acos","BLOCKLY_MATH_TRIG_ASIN":"asin","BLOCKLY_MATH_TRIG_ATAN":"atan","BLOCKLY_MATH_TRIG_COS":"cos","BLOCKLY_MATH_TRIG_HELPURL":"https://en.wikipedia.org/wiki/Trigonometric_functions","BLOCKLY_MATH_TRIG_SIN":"sin","BLOCKLY_MATH_TRIG_TAN":"tan","BLOCKLY_MATH_TRIG_TOOLTIP_ACOS":"Return the arccosine of a number.","BLOCKLY_MATH_TRIG_TOOLTIP_ASIN":"Return the arcsine of a number.","BLOCKLY_MATH_TRIG_TOOLTIP_ATAN":"Return the arctangent of a number.","BLOCKLY_MATH_TRIG_TOOLTIP_COS":"Return the cosine of a degree (not radian).","BLOCKLY_MATH_TRIG_TOOLTIP_SIN":"Return the sine of a degree (not radian).","BLOCKLY_MATH_TRIG_TOOLTIP_TAN":"Return the tangent of a degree (not radian).","BLOCKLY_NEW_COLOUR_VARIABLE":"Create colour variable...","BLOCKLY_NEW_NUMBER_VARIABLE":"Create number variable...","BLOCKLY_NEW_STRING_VARIABLE":"Create string variable...","BLOCKLY_NEW_VARIABLE":"Create variable...","BLOCKLY_NEW_VARIABLE_TITLE":"New variable name:","BLOCKLY_NEW_VARIABLE_TYPE_TITLE":"New variable type:","BLOCKLY_ORDINAL_NUMBER_SUFFIX":"","BLOCKLY_PROCEDURES_ALLOW_STATEMENTS":"allow statements","BLOCKLY_PROCEDURES_BEFORE_PARAMS":"with:","BLOCKLY_PROCEDURES_CALLNORETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_CALLNORETURN_TOOLTIP":"Run the user-defined function \'%1\'.","BLOCKLY_PROCEDURES_CALLRETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_CALLRETURN_TOOLTIP":"Run the user-defined function \'%1\' and use its output.","BLOCKLY_PROCEDURES_CALL_BEFORE_PARAMS":"with:","BLOCKLY_PROCEDURES_CREATE_DO":"Create \'%1\'","BLOCKLY_PROCEDURES_DEFNORETURN_COMMENT":"Describe this function...","BLOCKLY_PROCEDURES_DEFNORETURN_DO":"","BLOCKLY_PROCEDURES_DEFNORETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_DEFNORETURN_PROCEDURE":"do something","BLOCKLY_PROCEDURES_DEFNORETURN_TITLE":"to","BLOCKLY_PROCEDURES_DEFNORETURN_TOOLTIP":"Creates a function with no output.","BLOCKLY_PROCEDURES_DEFRETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_DEFRETURN_RETURN":"return","BLOCKLY_PROCEDURES_DEFRETURN_TOOLTIP":"Creates a function with an output.","BLOCKLY_PROCEDURES_DEF_DUPLICATE_WARNING":"Warning: This function has duplicate parameters.","BLOCKLY_PROCEDURES_HIGHLIGHT_DEF":"Highlight function definition","BLOCKLY_PROCEDURES_IFRETURN_HELPURL":"https://c2.com/cgi/wiki?GuardClause","BLOCKLY_PROCEDURES_IFRETURN_TOOLTIP":"If a value is true, then return a second value.","BLOCKLY_PROCEDURES_IFRETURN_WARNING":"Warning: This block may be used only within a function definition.","BLOCKLY_PROCEDURES_MUTATORARG_TITLE":"input name:","BLOCKLY_PROCEDURES_MUTATORARG_TOOLTIP":"Add an input to the function.","BLOCKLY_PROCEDURES_MUTATORCONTAINER_TITLE":"inputs","BLOCKLY_PROCEDURES_MUTATORCONTAINER_TOOLTIP":"Add, remove, or reorder inputs to this function.","BLOCKLY_REDO":"Redo","BLOCKLY_REMOVE_COMMENT":"Remove Comment","BLOCKLY_RENAME_VARIABLE":"Rename variable...","BLOCKLY_RENAME_VARIABLE_TITLE":"Rename all \'%1\' variables to:","BLOCKLY_TEXT_APPEND_HELPURL":"https://github.com/google/blockly/wiki/Text#text-modification","BLOCKLY_TEXT_APPEND_TITLE":"to %1 append text %2","BLOCKLY_TEXT_APPEND_TOOLTIP":"Append some text to variable \'%1\'.","BLOCKLY_TEXT_CHANGECASE_HELPURL":"https://github.com/google/blockly/wiki/Text#adjusting-text-case","BLOCKLY_TEXT_CHANGECASE_OPERATOR_LOWERCASE":"to lower case","BLOCKLY_TEXT_CHANGECASE_OPERATOR_TITLECASE":"to Title Case","BLOCKLY_TEXT_CHANGECASE_OPERATOR_UPPERCASE":"to UPPER CASE","BLOCKLY_TEXT_CHANGECASE_TOOLTIP":"Return a copy of the text in a different case.","BLOCKLY_TEXT_CHARAT_FIRST":"get first letter","BLOCKLY_TEXT_CHARAT_FROM_END":"get letter # from end","BLOCKLY_TEXT_CHARAT_FROM_START":"get letter #","BLOCKLY_TEXT_CHARAT_HELPURL":"https://github.com/google/blockly/wiki/Text#extracting-text","BLOCKLY_TEXT_CHARAT_LAST":"get last letter","BLOCKLY_TEXT_CHARAT_RANDOM":"get random letter","BLOCKLY_TEXT_CHARAT_TAIL":"","BLOCKLY_TEXT_CHARAT_TITLE":"in text %1 %2","BLOCKLY_TEXT_CHARAT_TOOLTIP":"Returns the letter at the specified position.","BLOCKLY_TEXT_COUNT_HELPURL":"https://github.com/google/blockly/wiki/Text#counting-substrings","BLOCKLY_TEXT_COUNT_MESSAGE0":"count %1 in %2","BLOCKLY_TEXT_COUNT_TOOLTIP":"Count how many times some text occurs within some other text.","BLOCKLY_TEXT_CREATE_JOIN_ITEM_TOOLTIP":"Add an item to the text.","BLOCKLY_TEXT_CREATE_JOIN_TITLE_JOIN":"join","BLOCKLY_TEXT_CREATE_JOIN_TOOLTIP":"Add, remove, or reorder sections to reconfigure this text block.","BLOCKLY_TEXT_GET_SUBSTRING_END_FROM_END":"to letter # from end","BLOCKLY_TEXT_GET_SUBSTRING_END_FROM_START":"to letter #","BLOCKLY_TEXT_GET_SUBSTRING_END_LAST":"to last letter","BLOCKLY_TEXT_GET_SUBSTRING_HELPURL":"https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text","BLOCKLY_TEXT_GET_SUBSTRING_INPUT_IN_TEXT":"in text","BLOCKLY_TEXT_GET_SUBSTRING_START_FIRST":"get substring from first letter","BLOCKLY_TEXT_GET_SUBSTRING_START_FROM_END":"get substring from letter # from end","BLOCKLY_TEXT_GET_SUBSTRING_START_FROM_START":"get substring from letter #","BLOCKLY_TEXT_GET_SUBSTRING_TAIL":"","BLOCKLY_TEXT_GET_SUBSTRING_TOOLTIP":"Returns a specified portion of the text.","BLOCKLY_TEXT_INDEXOF_HELPURL":"https://github.com/google/blockly/wiki/Text#finding-text","BLOCKLY_TEXT_INDEXOF_OPERATOR_FIRST":"find first occurrence of text","BLOCKLY_TEXT_INDEXOF_OPERATOR_LAST":"find last occurrence of text","BLOCKLY_TEXT_INDEXOF_TITLE":"in text %1 %2 %3","BLOCKLY_TEXT_INDEXOF_TOOLTIP":"Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.","BLOCKLY_TEXT_ISEMPTY_HELPURL":"https://github.com/google/blockly/wiki/Text#checking-for-empty-text","BLOCKLY_TEXT_ISEMPTY_TITLE":"%1 is empty","BLOCKLY_TEXT_ISEMPTY_TOOLTIP":"Returns true if the provided text is empty.","BLOCKLY_TEXT_JOIN_HELPURL":"https://github.com/google/blockly/wiki/Text#text-creation","BLOCKLY_TEXT_JOIN_TITLE_CREATEWITH":"create text with","BLOCKLY_TEXT_JOIN_TOOLTIP":"Create a piece of text by joining together any number of items.","BLOCKLY_TEXT_LENGTH_HELPURL":"https://github.com/google/blockly/wiki/Text#text-modification","BLOCKLY_TEXT_LENGTH_TITLE":"length of %1","BLOCKLY_TEXT_LENGTH_TOOLTIP":"Returns the number of letters (including spaces) in the provided text.","BLOCKLY_TEXT_PRINT_HELPURL":"https://github.com/google/blockly/wiki/Text#printing-text","BLOCKLY_TEXT_PRINT_TITLE":"print %1","BLOCKLY_TEXT_PRINT_TOOLTIP":"Print the specified text, number or other value.","BLOCKLY_TEXT_PROMPT_HELPURL":"https://github.com/google/blockly/wiki/Text#getting-input-from-the-user","BLOCKLY_TEXT_PROMPT_TOOLTIP_NUMBER":"Prompt for user for a number.","BLOCKLY_TEXT_PROMPT_TOOLTIP_TEXT":"Prompt for user for some text.","BLOCKLY_TEXT_PROMPT_TYPE_NUMBER":"prompt for number with message","BLOCKLY_TEXT_PROMPT_TYPE_TEXT":"prompt for text with message","BLOCKLY_TEXT_REPLACE_HELPURL":"https://github.com/google/blockly/wiki/Text#replacing-substrings","BLOCKLY_TEXT_REPLACE_MESSAGE0":"replace %1 with %2 in %3","BLOCKLY_TEXT_REPLACE_TOOLTIP":"Replace all occurances of some text within some other text.","BLOCKLY_TEXT_REVERSE_HELPURL":"https://github.com/google/blockly/wiki/Text#reversing-text","BLOCKLY_TEXT_REVERSE_MESSAGE0":"reverse %1","BLOCKLY_TEXT_REVERSE_TOOLTIP":"Reverses the order of the characters in the text.","BLOCKLY_TEXT_TEXT_HELPURL":"https://en.wikipedia.org/wiki/String_(computer_science)","BLOCKLY_TEXT_TEXT_TOOLTIP":"A letter, word, or line of text.","BLOCKLY_TEXT_TRIM_HELPURL":"https://github.com/google/blockly/wiki/Text#trimming-removing-spaces","BLOCKLY_TEXT_TRIM_OPERATOR_BOTH":"trim spaces from both sides of","BLOCKLY_TEXT_TRIM_OPERATOR_LEFT":"trim spaces from left side of","BLOCKLY_TEXT_TRIM_OPERATOR_RIGHT":"trim spaces from right side of","BLOCKLY_TEXT_TRIM_TOOLTIP":"Return a copy of the text with spaces removed from one or both ends.","BLOCKLY_TODAY":"Today","BLOCKLY_UNDO":"Undo","BLOCKLY_UNNAMED_KEY":"unnamed","BLOCKLY_VARIABLES_DEFAULT_NAME":"item","BLOCKLY_VARIABLES_GET_CREATE_SET":"Create \'set %1\'","BLOCKLY_VARIABLES_GET_HELPURL":"https://github.com/google/blockly/wiki/Variables#get","BLOCKLY_VARIABLES_GET_TOOLTIP":"Returns the value of this variable.","BLOCKLY_VARIABLES_SET":"set %1 to %2","BLOCKLY_VARIABLES_SET_CREATE_GET":"Create \'get %1\'","BLOCKLY_VARIABLES_SET_HELPURL":"https://github.com/google/blockly/wiki/Variables#set","BLOCKLY_VARIABLES_SET_TOOLTIP":"Sets this variable to be equal to the input.","BLOCKLY_VARIABLE_ALREADY_EXISTS":"A variable named \'%1\' already exists.","BLOCKLY_VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE":"A variable named \'%1\' already exists for another type: \'%2\'.","BLOCKLY_WORKSPACE_ARIA_LABEL":"Blockly Workspace","BLOCKLY_WORKSPACE_COMMENT_DEFAULT_TEXT":"Say something...","BLOCKLY_CONTROLS_FOREACH_INPUT_DO":"do","BLOCKLY_CONTROLS_FOR_INPUT_DO":"do","BLOCKLY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF":"else if","BLOCKLY_CONTROLS_IF_ELSE_TITLE_ELSE":"else","BLOCKLY_CONTROLS_IF_IF_TITLE_IF":"if","BLOCKLY_CONTROLS_IF_MSG_THEN":"do","BLOCKLY_CONTROLS_WHILEUNTIL_INPUT_DO":"do","BLOCKLY_LISTS_CREATE_WITH_ITEM_TITLE":"item","BLOCKLY_LISTS_GET_INDEX_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list","BLOCKLY_LISTS_GET_INDEX_INPUT_IN_LIST":"in list","BLOCKLY_LISTS_GET_SUBLIST_INPUT_IN_LIST":"in list","BLOCKLY_LISTS_INDEX_OF_INPUT_IN_LIST":"in list","BLOCKLY_LISTS_SET_INDEX_INPUT_IN_LIST":"in list","BLOCKLY_MATH_CHANGE_TITLE_ITEM":"item","BLOCKLY_PROCEDURES_DEFRETURN_COMMENT":"Describe this function...","BLOCKLY_PROCEDURES_DEFRETURN_DO":"","BLOCKLY_PROCEDURES_DEFRETURN_PROCEDURE":"do something","BLOCKLY_PROCEDURES_DEFRETURN_TITLE":"to","BLOCKLY_TEXT_APPEND_VARIABLE":"item","BLOCKLY_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM":"item","BLOCKLY_MATH_HUE":"230","BLOCKLY_LOOPS_HUE":"120","BLOCKLY_LISTS_HUE":"260","BLOCKLY_LOGIC_HUE":"210","BLOCKLY_VARIABLES_HUE":"330","BLOCKLY_TEXTS_HUE":"160","BLOCKLY_PROCEDURES_HUE":"290","BLOCKLY_COLOUR_HUE":"20","BLOCKLY_VARIABLES_DYNAMIC_HUE":"310"}')},796:function(e){e.exports=JSON.parse('{"DISCONNECTED":"D\xe9connect\xe9","CONNECTED":"Connect\xe9","SAVE":"Enregistrer","LOAD":"Charger","DEPLOY":"D\xe9ployer","CLEAR":"Effacer","CLEAR_FILTER":"Effacer le filtre","BREAK":"Arr\xeater","RUN":"Ex\xe9cuter","CONNECT":"Connecter","CONNECTION":"Connexion","REFRESH":"Rafra\xeechir","REBOOT":"Red\xe9marrer","ROBOT":"Robot","CONFIRM":"Confirmer","CANCEL":"Annuler","CODE_EDITOR":"\xc9diteur de code","CONSOLE":"Console","CLOSE_TAB":"Fermer l\'onglet","ACTIVITY":"Activit\xe9","ACTIVITIES_LIBRARY":"Biblioth\xe8que d\'activit\xe9s","ALL":"Tous","ACTIVITY_NOT_FOUND":"Oups, aucune activit\xe9 trouv\xe9e","SETTINGS":"Param\xe8tres","CONFIG":"Configuration","ROBOT_IP_ADDRESS":"Adresse IP du robot","EDITOR":"\xc9diteur","CODE":"Code","BLOCK":"Bloc","LANGUAGE":"Langue","SSID":"SSID","PASSWORD":"Mot de passe","WIFI":"WiFi","WIFI_NETWORK":"R\xe9seau WiFi","WIFI_PASSWORD":"Mot de passe WiFi","TOAST_LOAD_ACTIVITY_TITLE":"Activit\xe9 charg\xe9e","TOAST_LOAD_ACTIVITY_CODE_DESCRIPTION":"Le code de l’activit\xe9 a \xe9t\xe9 charg\xe9 dans un nouvel onglet de l’espace de travail","TOAST_LOAD_ACTIVITY_BLOCK_DESCRIPTION":"L’activit\xe9 a \xe9t\xe9 charg\xe9e dans l’espace de travail","TOAST_LOAD_CODE_ERROR_TITLE":"Erreur : \xe9chec du chargement du code depuis la carte SD","TOAST_LOAD_CODE_ERROR_DESCRIPTION":"Veuillez r\xe9essayer","TOAST_LOAD_CODE_SUCCESS_TITLE":"Succ\xe8s","TOAST_LOAD_CODE_SUCCESS_DESCRIPTION":"Code charg\xe9 depuis la carte SD","TOAST_DEPLOY_CODE_ERROR_TITLE":"Erreur : \xe9chec du d\xe9ploiement","TOAST_DEPLOY_CODE_ERROR_DESCRIPTION":"Veuillez r\xe9essayer","TOAST_DEPLOY_CODE_SUCCESS_TITLE":"Succ\xe8s","TOAST_DEPLOY_CODE_SUCCESS_DESCRIPTION":"Code d\xe9ploy\xe9","TOAST_DEPLOY_CODE_FAIL_TITLE":"Oups, une erreur s’est produite...","TOAST_DEPLOY_CODE_FAIL_DESCRIPTION":"Veuillez r\xe9essayer","TOAST_SAVE_CODE_ERROR_TITLE":"Erreur : \xe9chec de l\'enregistrement sur la carte SD","TOAST_SAVE_CODE_ERROR_DESCRIPTION":"Veuillez r\xe9essayer","TOAST_SAVE_CODE_SUCCESS_TITLE":"Succ\xe8s","TOAST_SAVE_CODE_SUCCESS_DESCRIPTION":"Code enregistr\xe9 sur la carte SD","TOAST_NETWORK_STATUS_DISCONNECTED_TITLE":"Le robot n’est pas connect\xe9","TOAST_NETWORK_STATUS_DISCONNECTED_SAVE_DESCRIPTION":"Veuillez connecter votre robot pour enregistrer","TOAST_NETWORK_STATUS_DISCONNECTED_LOAD_DESCRIPTION":"Veuillez connecter votre robot pour charger","TOAST_NETWORK_STATUS_DISCONNECTED_BREAK_DESCRIPTION":"Veuillez connecter votre robot pour ARR\xcaTER","TOAST_NETWORK_STATUS_DISCONNECTED_RUN_DESCRIPTION":"Veuillez connecter votre robot pour ex\xe9cuter","TOAST_NETWORK_STATUS_DISCONNECTED_DEPLOY_DESCRIPTION":"Veuillez connecter votre robot pour d\xe9ployer","TOAST_WIFI_CONNECTING_TITLE":"Connexion au WiFi...","TOAST_WIFI_CONNECT_FAIL_TITLE":"Mot de passe WiFi incorrect","TOAST_WIFI_CONNECT_FAIL_DESCRIPTION":"Veuillez r\xe9essayer","TOAST_WIFI_CONNECT_SUCCESS_TITLE":"Succ\xe8s","TOAST_WIFI_CONNECT_SUCCESS_DESCRIPTION":"Connect\xe9 au WiFi","TOAST_SETTINGS_UPDATE_ERROR_TITLE":"Oups, une erreur s’est produite...","TOAST_SETTINGS_UPDATE_ERROR_DESCRIPTION":"\xc9chec de la mise \xe0 jour de la configuration, veuillez r\xe9essayer","TOAST_SETTINGS_UPDATE_SUCCESS_TITLE":"Succ\xe8s","TOAST_SETTINGS_UPDATE_SUCCESS_DESCRIPTION":"La configuration a \xe9t\xe9 mise \xe0 jour","ALERT_SETTINGS_UPDATE_TITLE":"Confirmer les modifications","ALERT_LANGUAGE_UPDATE_DESCRIPTION":"\xcates-vous s\xfbr de vouloir changer de langue ?","ALERT_EDITOR_UPDATE_DESCRIPTION":"Votre progression actuelle sera perdue. \xcates-vous s\xfbr de vouloir changer d’\xe9diteur ?","ALERT_CODE_DEPLOY_TITLE":"Confirmer le d\xe9ploiement du code","ALERT_CODE_DEPLOY_DESCRIPTION":"Le d\xe9ploiement de ce code \xe9crasera la fonctionnalit\xe9 du portail. Voulez-vous continuer ?","ONBOARDING_WIFI_CONNECT_TITLE":"Connecter CYOBot au WiFi","ONBOARDING_WIFI_CONNECT_DESCRIPTION":"Choisissez votre r\xe9seau WiFi","ONBOARDING_WIFI_CONNECT_NOT_FOUND":"Aucun r\xe9seau trouv\xe9","ONBOARDING_RETURN_TO_HOME":"Retour \xe0 l’accueil","ONBOARDING_BACK_TO_WIFI_SELECT":"Retour \xe0 la s\xe9lection du WiFi","ACTIVITY_TITLE_MATRIX_LED_BLINK":"Faire clignoter une LED sur la matrice","ACTIVITY_DESCRIPTION_MATRIX_LED_BLINK":"Faites clignoter une LED sur l\'afficheur matriciel du robot. Cliquez sur Arr\xeater pour terminer le programme.","ACTIVITY_TITLE_MATRIX_CHARACTER":"Afficher un caract\xe8re","ACTIVITY_DESCRIPTION_MATRIX_CHARACTER":"Affichez un caract\xe8re sur la matrice LED. Vous pouvez afficher les lettres de l’alphabet (A~Z) et les chiffres (0~9).","ACTIVITY_TITLE_SCROLL_WORD":"Faire d\xe9filer un mot","ACTIVITY_DESCRIPTION_SCROLL_WORD":"Utilisez la fonction int\xe9gr\xe9e pour faire d\xe9filer un mot sur l’affichage LED. Vous pouvez aussi modifier la vitesse et la couleur du mot. Actuellement, la biblioth\xe8que ne prend en charge que les lettres capitales et les chiffres.","ACTIVITY_TITLE_RING_MANUAL":"Allumer une LED sur l\'anneau","ACTIVITY_DESCRIPTION_RING_MANUAL":"Allumez une LED sur l’anneau LED du robot.","ACTIVITY_TITLE_RING_LOADING":"Faire tourner la lumi\xe8re en cercle","ACTIVITY_DESCRIPTION_RING_LOADING":"Allumez une LED sur l’anneau du robot et faites-la tourner en cercle.","ACTIVITY_TITLE_BUTTON_PRESSED":"D\xe9tecter un bouton press\xe9","ACTIVITY_DESCRIPTION_BUTTON_PRESSED":"D\xe9tectez si un bouton est press\xe9. Si le bouton gauche est press\xe9, allumez une LED sur la matrice. Sinon, \xe9teignez la LED. Cliquez sur Arr\xeater pour terminer le programme.","ACTIVITY_TITLE_SPEAKER_PLAY":"Lire un fichier audio","ACTIVITY_DESCRIPTION_SPEAKER_PLAY":"Lisez un fichier audio stock\xe9 sur la carte micro SD en utilisant le haut-parleur int\xe9gr\xe9 du robot.","ACTIVITY_TITLE_IMU_TILT_TEST":"Capturer les donn\xe9es de mouvement","ACTIVITY_DESCRIPTION_IMU_TILT_TEST":"Capturez les donn\xe9es de mouvement en inclinant le robot dans diff\xe9rentes directions et observez l’affichage LED en cons\xe9quence. Cliquez sur Arr\xeater pour terminer le programme.","ACTIVITY_TITLE_RECORD_REPLAY":"Capturer un son","ACTIVITY_DESCRIPTION_RECORD_REPLAY":"Capturez un son avec le microphone int\xe9gr\xe9 pendant 10 secondes et rejouez-le avec le haut-parleur int\xe9gr\xe9.","ACTIVITY_TITLE_FORWARD_COMMAND":"Avancer de 3 pas sur 4 pattes","ACTIVITY_DESCRIPTION_FORWARD_COMMAND":"Utilisez les fonctions int\xe9gr\xe9es pour faire avancer le robot de 3 pas en mode araign\xe9e.","ACTIVITY_TITLE_ROTATE_COMMAND":"Tourner de 3 pas vers la gauche sur 4 pattes","ACTIVITY_DESCRIPTION_ROTATE_COMMAND":"Utilisez les fonctions int\xe9gr\xe9es pour faire tourner le robot de 3 pas vers la gauche en mode araign\xe9e.","ACTIVITY_TITLE_WAVING":"Faire un signe de la main en position debout","ACTIVITY_DESCRIPTION_WAVING":"Contr\xf4lez un moteur \xe0 la hanche de la premi\xe8re jambe pour faire signe de la main lorsque le robot est debout en forme humaine, 3 fois.","ACTIVITY_TITLE_PUSHUP":"Faire une pompe","ACTIVITY_DESCRIPTION_PUSHUP":"Contr\xf4lez 2 moteurs aux genoux de 2 jambes pour faire faire une pompe au robot en mode humain.","ACTIVITY_TITLE_FORWARD_COMMAND_WHEELER":"Avancer tout droit pendant 2 secondes","ACTIVITY_DESCRIPTION_FORWARD_COMMAND_WHEELER":"Utilisez les fonctions int\xe9gr\xe9es pour faire avancer le robot pendant 2 secondes en mode roues.","ACTIVITY_TITLE_FORWARD_DIAGLEFT_COMMAND_WHEELER":"Avancer en diagonale pendant 2 secondes","ACTIVITY_DESCRIPTION_FORWARD_DIAGLEFT_COMMAND_WHEELER":"Utilisez les fonctions int\xe9gr\xe9es pour faire avancer le robot en diagonale pendant 2 secondes en mode roues.","ACTIVITY_TITLE_FORWARD_LEFT_COMMAND_WHEELER":"Tourner \xe0 gauche pendant 2 secondes","ACTIVITY_DESCRIPTION_FORWARD_LEFT_COMMAND_WHEELER":"Utilisez les fonctions int\xe9gr\xe9es pour faire tourner le robot \xe0 gauche pendant 2 secondes en mode roues.","ACTIVITY_TITLE_CONSOLE_JOYSTICK_RING":"Afficher la position du joystick","ACTIVITY_DESCRIPTION_CONSOLE_JOYSTICK_RING":"Lisez le joystick gauche et affichez la position avec l’anneau LED.","ACTIVITY_TITLE_CONSOLE_JOYSTICK_RING_2":"Afficher l’angle du joystick","ACTIVITY_DESCRIPTION_CONSOLE_JOYSTICK_RING_2":"Lisez la position du joystick gauche et affichez l’angle \xe0 l’aide de l’anneau LED.","BLOCKLY_CATEGORY_STRUCTURE":"Structure","BLOCKLY_CATEGORY_CONDITION":"Condition","BLOCKLY_CATEGORY_VALUE":"Valeur","BLOCKLY_CATEGORY_DISPLAY":"Affichage","BLOCKLY_CATEGORY_MOTION":"Mouvement","BLOCKLY_CATEGORY_SENSING":"Capteurs","BLOCKLY_CATEGORY_SOUND":"Son","BLOCKLY_CATEGORY_TIMING":"Temps","BLOCKLY_CATEGORY_OTHER":"Autre","BLOCKLY_CATEGORY_MATH":"Math\xe9matiques","BLOCKLY_CATEGORY_DATA_LIST":"Liste de donn\xe9es","BLOCKLY_CATEGORY_EXTERNAL":"Externe","BLOCKLY_CATEGORY_VARIABLES":"Variables","BLOCKLY_STRUCTURE_MATRIX_INIT":"D\xe9marrer la matrice LED","BLOCKLY_STRUCTURE_RING_INIT":"D\xe9marrer l’anneau LED","BLOCKLY_STRUCTURE_TIME_INIT":"D\xe9marrer le chronom\xe9trage","BLOCKLY_STRUCTURE_SPEAKER_INIT":"D\xe9marrer le haut-parleur","BLOCKLY_STRUCTURE_IMU_INIT":"D\xe9marrer le capteur de mouvement","BLOCKLY_STRUCTURE_BUTTON_INIT":"D\xe9marrer les boutons","BLOCKLY_STRUCTURE_MICROPHONE_INIT":"D\xe9marrer le microphone","BLOCKLY_STRUCTURE_CRAWLER_INIT":"D\xe9marrer le Crawler","BLOCKLY_STRUCTURE_WHEELER_INIT":"D\xe9marrer le Wheeler","BLOCKLY_STRUCTURE_CONSOLE_INIT":"D\xe9marrer la console de jeu","BLOCKLY_DISPLAY_MATRIX_RESET":"R\xe9initialiser la matrice LED","BLOCKLY_DISPLAY_RING_RESET":"R\xe9initialiser l’anneau LED","BLOCKLY_DISPLAY_MATRIX_CHARACTER":"Afficher %1 dans %2","BLOCKLY_DISPLAY_MATRIX_SCROLL":"Faire d\xe9filer %1 dans %2 %3","BLOCKLY_DISPLAY_MATRIX_MANUAL":"D\xe9finir la LED #%1 sur la matrice \xe0 %2","BLOCKLY_DISPLAY_MATRIX_MANUAL_2":"D\xe9finir la LED #%1 sur la matrice \xe0 rouge : %2%, vert : %3%, bleu : %4%","BLOCKLY_DISPLAY_MATRIX_ALL":"D\xe9finir toutes les LED sur la matrice \xe0 %1","BLOCKLY_DISPLAY_MATRIX_ALL_2":"D\xe9finir toutes les LED sur la matrice \xe0 rouge : %1%, vert : %2%, bleu : %3%","BLOCKLY_DISPLAY_RING_SPIN":"Faire tourner une LED dans %1 %2","BLOCKLY_DISPLAY_RING_MANUAL":"D\xe9finir la LED #%1 sur l’anneau \xe0 %2","BLOCKLY_DISPLAY_RING_MANUAL_2":"D\xe9finir la LED #%1 sur l’anneau \xe0 rouge : %2%, vert : %3%, bleu : %4%","BLOCKLY_DISPLAY_RING_ALL":"D\xe9finir toutes les LED sur l’anneau \xe0 %1","BLOCKLY_DISPLAY_RING_ALL_2":"D\xe9finir toutes les LED sur l’anneau \xe0 rouge : %1%, vert : %2%, bleu : %3%","BLOCKLY_MOTION_COMMAND":"Marcher %1 %2 pas","BLOCKLY_MOTION_COMMAND_2":"Tourner %1 %2 pas","BLOCKLY_MOTION_COMMAND_3":"Conduire %1 %2 pendant %3 secondes","BLOCKLY_MOTION_THROTTLE":"R\xe9gler l’acc\xe9l\xe9ration \xe0 %1","BLOCKLY_MOTION_STEERING":"R\xe9gler la direction\\navant %1 arri\xe8re %2","BLOCKLY_MOTION_OFF":"\xc9teindre les moteurs","BLOCKLY_MOTION_CENTER":"Centrer les moteurs","BLOCKLY_MOTION_SINGLE":"R\xe9gler la jambe %1 \\nhanche %2 genou %3","BLOCKLY_MOTION_ALL":"R\xe9gler toutes les jambes\\nJambe 0 hanche %1 genou %2\\nJambe 1 hanche %3 genou %4\\nJambe 2 hanche %5 genou %6\\nJambe 3 hanche %7 genou %8\\n","BLOCKLY_MOTION_SET_ANGLE":"R\xe9gler le canal %1 \xe0 l’angle %2","BLOCKLY_SENSING_ACCEL":"acc\xe9l\xe9ration %1","BLOCKLY_SENSING_GYRO":"gyroscope %1","BLOCKLY_SENSING_TEMP":"temp\xe9rature","BLOCKLY_SENSING_BUTTON":"bouton %1","BLOCKLY_SENSING_CONSOLE_TRIGGER":"g\xe2chette %1","BLOCKLY_SENSING_CONSOLE_JOYSTICK_BUTTON":"bouton de joystick %1","BLOCKLY_SENSING_CONSOLE_JOYSTICK":"joystick %1 axe %2","BLOCKLY_SOUND_PLAY":"Jouer la chanson","BLOCKLY_SOUND_PLAY_RECORD":"Jouer l’enregistrement","BLOCKLY_SOUND_RECORD":"Enregistrer %1 secondes","BLOCKLY_TIMING_SLEEP":"Pause %1 secondes","BLOCKLY_TIMING_TICKSMS":"millisecondes depuis le d\xe9but","BLOCKLY_TIMING_TIME":"secondes depuis le d\xe9but","BLOCKLY_VALUE_NUMBER":"%1","BLOCKLY_SPEED_SLOWLY":"lentement","BLOCKLY_SPEED_NORMALLY":"normalement","BLOCKLY_SPEED_FAST":"vite","BLOCKLY_SPEED_VERY_FAST":"tr\xe8s vite","BLOCKLY_STRAIGHT":"tout droit","BLOCKLY_LEFT":"gauche","BLOCKLY_RIGHT":"droite","BLOCKLY_LEFT_DIAGONAL":"diagonale gauche","BLOCKLY_RIGHT_DIAGONAL":"diagonale droite","BLOCKLY_FORWARD":"en avant","BLOCKLY_BACKWARD":"en arri\xe8re","BLOCKLY_ADD_COMMENT":"Ajouter un commentaire","BLOCKLY_CANNOT_DELETE_VARIABLE_PROCEDURE":"Impossible de supprimer la variable \'%1\' car elle fait partie de la d\xe9finition de la fonction \'%2\'","BLOCKLY_CHANGE_VALUE_TITLE":"Changer la valeur :","BLOCKLY_CLEAN_UP":"Nettoyer les blocs","BLOCKLY_COLLAPSED_WARNINGS_WARNING":"Des blocs r\xe9duits contiennent des avertissements.","BLOCKLY_COLLAPSE_ALL":"R\xe9duire tous les blocs","BLOCKLY_COLLAPSE_BLOCK":"R\xe9duire le bloc","BLOCKLY_COLOUR_BLEND_COLOUR1":"couleur 1","BLOCKLY_COLOUR_BLEND_COLOUR2":"couleur 2","BLOCKLY_COLOUR_BLEND_HELPURL":"https://meyerweb.com/eric/tools/color-blend/#:::rgbp","BLOCKLY_COLOUR_BLEND_RATIO":"ratio","BLOCKLY_COLOUR_BLEND_TITLE":"m\xe9langer","BLOCKLY_COLOUR_BLEND_TOOLTIP":"M\xe9lange deux couleurs avec un ratio donn\xe9 (0.0 - 1.0).","BLOCKLY_COLOUR_PICKER_HELPURL":"https://en.wikipedia.org/wiki/Color","BLOCKLY_COLOUR_PICKER_TOOLTIP":"Choisissez une couleur dans la palette.","BLOCKLY_COLOUR_RANDOM_HELPURL":"http://randomcolour.com","BLOCKLY_COLOUR_RANDOM_TITLE":"couleur al\xe9atoire","BLOCKLY_COLOUR_RANDOM_TOOLTIP":"Choisissez une couleur au hasard.","BLOCKLY_COLOUR_RGB_BLUE":"bleu","BLOCKLY_COLOUR_RGB_GREEN":"vert","BLOCKLY_COLOUR_RGB_HELPURL":"https://www.december.com/html/spec/colorpercompact.html","BLOCKLY_COLOUR_RGB_RED":"rouge","BLOCKLY_COLOUR_RGB_TITLE":"couleur avec","BLOCKLY_COLOUR_RGB_TOOLTIP":"Cr\xe9e une couleur avec la quantit\xe9 de rouge, vert et bleu sp\xe9cifi\xe9e. Toutes les valeurs doivent \xeatre comprises entre 0 et 100.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_HELPURL":"https://github.com/google/blockly/wiki/Loops#loop-termination-blocks","BLOCKLY_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK":"quitter la boucle","BLOCKLY_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE":"continuer avec l’it\xe9ration suivante de la boucle","BLOCKLY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK":"Sort de la boucle englobante.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE":"Ignore le reste de cette boucle, et continue avec l’it\xe9ration suivante.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_WARNING":"Attention : Ce bloc ne peut \xeatre utilis\xe9 que dans une boucle.","BLOCKLY_CONTROLS_FOREACH_HELPURL":"https://github.com/google/blockly/wiki/Loops#for-each","BLOCKLY_CONTROLS_FOREACH_TITLE":"pour chaque \xe9l\xe9ment %1 dans la liste %2","BLOCKLY_CONTROLS_FOREACH_TOOLTIP":"Pour chaque \xe9l\xe9ment d’une liste, d\xe9finit la variable \'%1\' sur l’\xe9l\xe9ment, puis fait certaines instructions.","BLOCKLY_CONTROLS_FOR_HELPURL":"https://github.com/google/blockly/wiki/Loops#count-with","BLOCKLY_CONTROLS_FOR_TITLE":"compter avec %1 de %2 \xe0 %3 par %4","BLOCKLY_CONTROLS_FOR_TOOLTIP":"Fait prendre \xe0 la variable \'%1\' les valeurs du nombre de d\xe9but au nombre de fin, en comptant par l’intervalle sp\xe9cifi\xe9, et effectue les blocs sp\xe9cifi\xe9s.","BLOCKLY_CONTROLS_IF_ELSEIF_TOOLTIP":"Ajouter une condition au bloc si.","BLOCKLY_CONTROLS_IF_ELSE_TOOLTIP":"Ajouter une condition finale attrape-tout au bloc si.","BLOCKLY_CONTROLS_IF_HELPURL":"https://github.com/google/blockly/wiki/IfElse","BLOCKLY_CONTROLS_IF_IF_TOOLTIP":"Ajouter, supprimer ou r\xe9organiser les sections pour reconfigurer ce bloc si.","BLOCKLY_CONTROLS_IF_MSG_ELSE":"sinon","BLOCKLY_CONTROLS_IF_MSG_ELSEIF":"sinon si","BLOCKLY_CONTROLS_IF_MSG_IF":"si","BLOCKLY_CONTROLS_IF_TOOLTIP_1":"Si une valeur est vraie, alors faire certaines instructions.","BLOCKLY_CONTROLS_IF_TOOLTIP_2":"Si une valeur est vraie, alors faire le premier bloc d’instructions. Sinon, faire le deuxi\xe8me bloc d’instructions.","BLOCKLY_CONTROLS_IF_TOOLTIP_3":"Si la premi\xe8re valeur est vraie, alors faire le premier bloc d’instructions. Sinon, si la deuxi\xe8me valeur est vraie, faire le deuxi\xe8me bloc d’instructions.","BLOCKLY_CONTROLS_IF_TOOLTIP_4":"Si la premi\xe8re valeur est vraie, alors faire le premier bloc d’instructions. Sinon, si la deuxi\xe8me valeur est vraie, faire le deuxi\xe8me bloc d’instructions. Si aucune valeur n’est vraie, faire le dernier bloc d’instructions.","BLOCKLY_CONTROLS_REPEAT_HELPURL":"https://en.wikipedia.org/wiki/For_loop","BLOCKLY_CONTROLS_REPEAT_INPUT_DO":"faire","BLOCKLY_CONTROLS_REPEAT_TITLE":"r\xe9p\xe9ter %1 fois","BLOCKLY_CONTROLS_REPEAT_TOOLTIP":"Fait certaines instructions plusieurs fois.","BLOCKLY_CONTROLS_WHILEUNTIL_HELPURL":"https://github.com/google/blockly/wiki/Loops#repeat","BLOCKLY_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL":"r\xe9p\xe9ter jusqu’\xe0 ce que","BLOCKLY_CONTROLS_WHILEUNTIL_OPERATOR_WHILE":"r\xe9p\xe9ter tant que","BLOCKLY_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL":"Tant qu’une valeur est fausse, faire certaines instructions.","BLOCKLY_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE":"Tant qu’une valeur est vraie, faire certaines instructions.","BLOCKLY_DELETE_ALL_BLOCKS":"Supprimer tous les %1 blocs ?","BLOCKLY_DELETE_BLOCK":"Supprimer le bloc","BLOCKLY_DELETE_VARIABLE":"Supprimer la variable \'%1\'","BLOCKLY_DELETE_VARIABLE_CONFIRMATION":"Supprimer %1 utilisations de la variable \'%2\' ?","BLOCKLY_DELETE_X_BLOCKS":"Supprimer %1 blocs","BLOCKLY_DIALOG_CANCEL":"Annuler","BLOCKLY_DIALOG_OK":"OK","BLOCKLY_DISABLE_BLOCK":"D\xe9sactiver le bloc","BLOCKLY_DUPLICATE_BLOCK":"Dupliquer","BLOCKLY_DUPLICATE_COMMENT":"Dupliquer le commentaire","BLOCKLY_ENABLE_BLOCK":"Activer le bloc","BLOCKLY_EXPAND_ALL":"D\xe9velopper tous les blocs","BLOCKLY_EXPAND_BLOCK":"D\xe9velopper le bloc","BLOCKLY_EXTERNAL_INPUTS":"Entr\xe9es externes","BLOCKLY_HELP":"Aide","BLOCKLY_INLINE_INPUTS":"Entr\xe9es en ligne","BLOCKLY_LISTS_CREATE_EMPTY_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-empty-list","BLOCKLY_LISTS_CREATE_EMPTY_TITLE":"cr\xe9er une liste vide","BLOCKLY_LISTS_CREATE_EMPTY_TOOLTIP":"Renvoie une liste, de longueur 0, ne contenant aucune donn\xe9e","BLOCKLY_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD":"liste","BLOCKLY_LISTS_CREATE_WITH_CONTAINER_TOOLTIP":"Ajouter, supprimer ou r\xe9organiser les sections pour reconfigurer ce bloc de liste.","BLOCKLY_LISTS_CREATE_WITH_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-list-with","BLOCKLY_LISTS_CREATE_WITH_INPUT_WITH":"cr\xe9er une liste avec","BLOCKLY_LISTS_CREATE_WITH_ITEM_TOOLTIP":"Ajouter un \xe9l\xe9ment \xe0 la liste.","BLOCKLY_LISTS_CREATE_WITH_TOOLTIP":"Cr\xe9er une liste avec n’importe quel nombre d’\xe9l\xe9ments.","BLOCKLY_LISTS_GET_INDEX_FIRST":"premier","BLOCKLY_LISTS_GET_INDEX_FROM_END":"# \xe0 partir de la fin","BLOCKLY_LISTS_GET_INDEX_FROM_START":"#","BLOCKLY_LISTS_GET_INDEX_GET":"obtenir","BLOCKLY_LISTS_GET_INDEX_GET_REMOVE":"obtenir et supprimer","BLOCKLY_LISTS_GET_INDEX_LAST":"dernier","BLOCKLY_LISTS_GET_INDEX_RANDOM":"al\xe9atoire","BLOCKLY_LISTS_GET_INDEX_REMOVE":"supprimer","BLOCKLY_LISTS_GET_INDEX_TAIL":"","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_FIRST":"Renvoie le premier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_FROM":"Renvoie l’\xe9l\xe9ment \xe0 la position sp\xe9cifi\xe9e d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_LAST":"Renvoie le dernier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_RANDOM":"Renvoie un \xe9l\xe9ment au hasard d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST":"Supprime et renvoie le premier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM":"Supprime et renvoie l’\xe9l\xe9ment \xe0 la position sp\xe9cifi\xe9e d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST":"Supprime et renvoie le dernier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM":"Supprime et renvoie un \xe9l\xe9ment au hasard d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST":"Supprime le premier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM":"Supprime l’\xe9l\xe9ment \xe0 la position sp\xe9cifi\xe9e d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST":"Supprime le dernier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM":"Supprime un \xe9l\xe9ment au hasard d’une liste.","BLOCKLY_LISTS_GET_SUBLIST_END_FROM_END":"jusqu’\xe0 # depuis la fin","BLOCKLY_LISTS_GET_SUBLIST_END_FROM_START":"jusqu’\xe0 #","BLOCKLY_LISTS_GET_SUBLIST_END_LAST":"jusqu’au dernier","BLOCKLY_LISTS_GET_SUBLIST_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-a-sublist","BLOCKLY_LISTS_GET_SUBLIST_START_FIRST":"obtenir la sous-liste du premier","BLOCKLY_LISTS_GET_SUBLIST_START_FROM_END":"obtenir la sous-liste de # depuis la fin","BLOCKLY_LISTS_GET_SUBLIST_START_FROM_START":"obtenir la sous-liste de #","BLOCKLY_LISTS_GET_SUBLIST_TAIL":"","BLOCKLY_LISTS_GET_SUBLIST_TOOLTIP":"Cr\xe9e une copie de la portion sp\xe9cifi\xe9e d’une liste.","BLOCKLY_LISTS_INDEX_FROM_END_TOOLTIP":"%1 est le dernier \xe9l\xe9ment.","BLOCKLY_LISTS_INDEX_FROM_START_TOOLTIP":"%1 est le premier \xe9l\xe9ment.","BLOCKLY_LISTS_INDEX_OF_FIRST":"trouver la premi\xe8re occurrence de l’\xe9l\xe9ment","BLOCKLY_LISTS_INDEX_OF_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list","BLOCKLY_LISTS_INDEX_OF_LAST":"trouver la derni\xe8re occurrence de l’\xe9l\xe9ment","BLOCKLY_LISTS_INDEX_OF_TOOLTIP":"Renvoie l’index de la premi\xe8re/derni\xe8re occurrence de l’\xe9l\xe9ment dans la liste. Renvoie %1 si l’\xe9l\xe9ment n’est pas trouv\xe9.","BLOCKLY_LISTS_INLIST":"dans la liste","BLOCKLY_LISTS_ISEMPTY_HELPURL":"https://github.com/google/blockly/wiki/Lists#is-empty","BLOCKLY_LISTS_ISEMPTY_TITLE":"%1 est vide","BLOCKLY_LISTS_ISEMPTY_TOOLTIP":"Renvoie vrai si la liste est vide.","BLOCKLY_LISTS_LENGTH_HELPURL":"https://github.com/google/blockly/wiki/Lists#length-of","BLOCKLY_LISTS_LENGTH_TITLE":"longueur de %1","BLOCKLY_LISTS_LENGTH_TOOLTIP":"Renvoie la longueur d’une liste.","BLOCKLY_LISTS_REPEAT_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-list-with","BLOCKLY_LISTS_REPEAT_TITLE":"cr\xe9er une liste avec l’\xe9l\xe9ment %1 r\xe9p\xe9t\xe9 %2 fois","BLOCKLY_LISTS_REPEAT_TOOLTIP":"Cr\xe9e une liste compos\xe9e de la valeur donn\xe9e r\xe9p\xe9t\xe9e un certain nombre de fois.","BLOCKLY_LISTS_REVERSE_HELPURL":"https://github.com/google/blockly/wiki/Lists#reversing-a-list","BLOCKLY_LISTS_REVERSE_MESSAGE0":"inverser %1","BLOCKLY_LISTS_REVERSE_TOOLTIP":"Inverser une copie d’une liste.","BLOCKLY_LISTS_SET_INDEX_HELPURL":"https://github.com/google/blockly/wiki/Lists#in-list--set","BLOCKLY_LISTS_SET_INDEX_INPUT_TO":"en tant que","BLOCKLY_LISTS_SET_INDEX_INSERT":"ins\xe9rer \xe0","BLOCKLY_LISTS_SET_INDEX_SET":"d\xe9finir","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST":"Ins\xe8re l’\xe9l\xe9ment au d\xe9but d’une liste.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_FROM":"Ins\xe8re l’\xe9l\xe9ment \xe0 la position sp\xe9cifi\xe9e dans une liste.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_LAST":"Ajoute l’\xe9l\xe9ment \xe0 la fin d’une liste.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM":"Ins\xe8re l’\xe9l\xe9ment \xe0 une position al\xe9atoire dans une liste.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_FIRST":"D\xe9finit le premier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_FROM":"D\xe9finit l’\xe9l\xe9ment \xe0 la position sp\xe9cifi\xe9e dans une liste.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_LAST":"D\xe9finit le dernier \xe9l\xe9ment d’une liste.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_RANDOM":"D\xe9finit un \xe9l\xe9ment al\xe9atoire d’une liste.","BLOCKLY_LISTS_SORT_HELPURL":"https://github.com/google/blockly/wiki/Lists#sorting-a-list","BLOCKLY_LISTS_SORT_ORDER_ASCENDING":"croissant","BLOCKLY_LISTS_SORT_ORDER_DESCENDING":"d\xe9croissant","BLOCKLY_LISTS_SORT_TITLE":"trier %1 %2 %3","BLOCKLY_LISTS_SORT_TOOLTIP":"Trier une copie d’une liste.","BLOCKLY_LISTS_SORT_TYPE_IGNORECASE":"alphab\xe9tique, sans tenir compte de la casse","BLOCKLY_LISTS_SORT_TYPE_NUMERIC":"num\xe9rique","BLOCKLY_LISTS_SORT_TYPE_TEXT":"alphab\xe9tique","BLOCKLY_LISTS_SPLIT_HELPURL":"https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists","BLOCKLY_LISTS_SPLIT_LIST_FROM_TEXT":"cr\xe9er une liste \xe0 partir du texte","BLOCKLY_LISTS_SPLIT_TEXT_FROM_LIST":"cr\xe9er un texte \xe0 partir de la liste","BLOCKLY_LISTS_SPLIT_TOOLTIP_JOIN":"Joindre une liste de textes en un seul texte, s\xe9par\xe9s par un s\xe9parateur.","BLOCKLY_LISTS_SPLIT_TOOLTIP_SPLIT":"Divise le texte en une liste de textes, en coupant \xe0 chaque s\xe9parateur.","BLOCKLY_LISTS_SPLIT_WITH_DELIMITER":"avec s\xe9parateur","BLOCKLY_LOGIC_BOOLEAN_FALSE":"faux","BLOCKLY_LOGIC_BOOLEAN_HELPURL":"https://github.com/google/blockly/wiki/Logic#values","BLOCKLY_LOGIC_BOOLEAN_TOOLTIP":"Renvoie vrai ou faux.","BLOCKLY_LOGIC_BOOLEAN_TRUE":"vrai","BLOCKLY_LOGIC_COMPARE_HELPURL":"https://en.wikipedia.org/wiki/Inequality_(mathematics)","BLOCKLY_LOGIC_COMPARE_TOOLTIP_EQ":"Renvoie vrai si les deux entr\xe9es sont \xe9gales.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_GT":"Renvoie vrai si la premi\xe8re entr\xe9e est sup\xe9rieure \xe0 la seconde.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_GTE":"Renvoie vrai si la premi\xe8re entr\xe9e est sup\xe9rieure ou \xe9gale \xe0 la seconde.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_LT":"Renvoie vrai si la premi\xe8re entr\xe9e est inf\xe9rieure \xe0 la seconde.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_LTE":"Renvoie vrai si la premi\xe8re entr\xe9e est inf\xe9rieure ou \xe9gale \xe0 la seconde.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_NEQ":"Renvoie vrai si les deux entr\xe9es ne sont pas \xe9gales.","BLOCKLY_LOGIC_NEGATE_HELPURL":"https://github.com/google/blockly/wiki/Logic#not","BLOCKLY_LOGIC_NEGATE_TITLE":"non %1","BLOCKLY_LOGIC_NEGATE_TOOLTIP":"Renvoie vrai si l’entr\xe9e est fausse. Renvoie faux si l’entr\xe9e est vraie.","BLOCKLY_LOGIC_NULL":"nul","BLOCKLY_LOGIC_NULL_HELPURL":"https://en.wikipedia.org/wiki/Nullable_type","BLOCKLY_LOGIC_NULL_TOOLTIP":"Renvoie nul.","BLOCKLY_LOGIC_OPERATION_AND":"et","BLOCKLY_LOGIC_OPERATION_HELPURL":"https://github.com/google/blockly/wiki/Logic#logical-operations","BLOCKLY_LOGIC_OPERATION_OR":"ou","BLOCKLY_LOGIC_OPERATION_TOOLTIP_AND":"Renvoie vrai si les deux entr\xe9es sont vraies.","BLOCKLY_LOGIC_OPERATION_TOOLTIP_OR":"Renvoie vrai si au moins une des entr\xe9es est vraie.","BLOCKLY_LOGIC_TERNARY_CONDITION":"test","BLOCKLY_LOGIC_TERNARY_HELPURL":"https://en.wikipedia.org/wiki/%3F:","BLOCKLY_LOGIC_TERNARY_IF_FALSE":"si faux","BLOCKLY_LOGIC_TERNARY_IF_TRUE":"si vrai","BLOCKLY_LOGIC_TERNARY_TOOLTIP":"V\xe9rifie la condition dans \'test\'. Si la condition est vraie, renvoie la valeur \'si vrai\', sinon renvoie la valeur \'si faux\'.","BLOCKLY_MATH_ADDITION_SYMBOL":"+","BLOCKLY_MATH_ARITHMETIC_HELPURL":"https://en.wikipedia.org/wiki/Arithmetic","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_ADD":"Renvoie la somme des deux nombres.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_DIVIDE":"Renvoie le quotient des deux nombres.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_MINUS":"Renvoie la diff\xe9rence des deux nombres.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_MULTIPLY":"Renvoie le produit des deux nombres.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_POWER":"Renvoie le premier nombre \xe9lev\xe9 \xe0 la puissance du second nombre.","BLOCKLY_MATH_ATAN2_HELPURL":"https://en.wikipedia.org/wiki/Atan2","BLOCKLY_MATH_ATAN2_TITLE":"atan2 de X:%1 Y:%2","BLOCKLY_MATH_ATAN2_TOOLTIP":"Renvoie l’arctangente du point (X, Y) en degr\xe9s de -180 \xe0 180.","BLOCKLY_MATH_CHANGE_HELPURL":"https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter","BLOCKLY_MATH_CHANGE_TITLE":"changer %1 de %2","BLOCKLY_MATH_CHANGE_TOOLTIP":"Ajoute un nombre \xe0 la variable \'%1\'.","BLOCKLY_MATH_CONSTANT_HELPURL":"https://en.wikipedia.org/wiki/Mathematical_constant","BLOCKLY_MATH_CONSTANT_TOOLTIP":"Renvoie l’une des constantes usuelles : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(\xbd) (0.707…), ou ∞ (infini).","BLOCKLY_MATH_CONSTRAIN_HELPURL":"https://en.wikipedia.org/wiki/Clamping_(graphics)","BLOCKLY_MATH_CONSTRAIN_TITLE":"contraindre %1 bas %2 haut %3","BLOCKLY_MATH_CONSTRAIN_TOOLTIP":"Contraint un nombre \xe0 \xeatre compris entre les limites sp\xe9cifi\xe9es (incluses).","BLOCKLY_MATH_DIVISION_SYMBOL":"\xf7","BLOCKLY_MATH_IS_DIVISIBLE_BY":"est divisible par","BLOCKLY_MATH_IS_EVEN":"est pair","BLOCKLY_MATH_IS_NEGATIVE":"est n\xe9gatif","BLOCKLY_MATH_IS_ODD":"est impair","BLOCKLY_MATH_IS_POSITIVE":"est positif","BLOCKLY_MATH_IS_PRIME":"est premier","BLOCKLY_MATH_IS_TOOLTIP":"V\xe9rifie si un nombre est pair, impair, premier, entier, positif, n\xe9gatif, ou s’il est divisible par un certain nombre. Renvoie vrai ou faux.","BLOCKLY_MATH_IS_WHOLE":"est entier","BLOCKLY_MATH_MODULO_HELPURL":"https://en.wikipedia.org/wiki/Modulo_operation","BLOCKLY_MATH_MODULO_TITLE":"reste de %1 \xf7 %2","BLOCKLY_MATH_MODULO_TOOLTIP":"Renvoie le reste de la division des deux nombres.","BLOCKLY_MATH_MULTIPLICATION_SYMBOL":"\xd7","BLOCKLY_MATH_NUMBER_HELPURL":"https://en.wikipedia.org/wiki/Number","BLOCKLY_MATH_NUMBER_TOOLTIP":"Un nombre.","BLOCKLY_MATH_ONLIST_HELPURL":"","BLOCKLY_MATH_ONLIST_OPERATOR_AVERAGE":"moyenne de la liste","BLOCKLY_MATH_ONLIST_OPERATOR_MAX":"max de la liste","BLOCKLY_MATH_ONLIST_OPERATOR_MEDIAN":"m\xe9diane de la liste","BLOCKLY_MATH_ONLIST_OPERATOR_MIN":"min de la liste","BLOCKLY_MATH_ONLIST_OPERATOR_MODE":"modes de la liste","BLOCKLY_MATH_ONLIST_OPERATOR_RANDOM":"\xe9l\xe9ment al\xe9atoire de la liste","BLOCKLY_MATH_ONLIST_OPERATOR_STD_DEV":"\xe9cart-type de la liste","BLOCKLY_MATH_ONLIST_OPERATOR_SUM":"somme de la liste","BLOCKLY_MATH_ONLIST_TOOLTIP_AVERAGE":"Renvoie la moyenne (arithm\xe9tique) des valeurs num\xe9riques dans la liste.","BLOCKLY_MATH_ONLIST_TOOLTIP_MAX":"Renvoie le plus grand nombre de la liste.","BLOCKLY_MATH_ONLIST_TOOLTIP_MEDIAN":"Renvoie la m\xe9diane de la liste.","BLOCKLY_MATH_ONLIST_TOOLTIP_MIN":"Renvoie le plus petit nombre de la liste.","BLOCKLY_MATH_ONLIST_TOOLTIP_MODE":"Renvoie une liste des \xe9l\xe9ments les plus courants dans la liste.","BLOCKLY_MATH_ONLIST_TOOLTIP_RANDOM":"Renvoie un \xe9l\xe9ment al\xe9atoire de la liste.","BLOCKLY_MATH_ONLIST_TOOLTIP_STD_DEV":"Renvoie l’\xe9cart-type de la liste.","BLOCKLY_MATH_ONLIST_TOOLTIP_SUM":"Renvoie la somme de tous les nombres dans la liste.","BLOCKLY_MATH_POWER_SYMBOL":"^","BLOCKLY_MATH_RANDOM_FLOAT_HELPURL":"https://en.wikipedia.org/wiki/Random_number_generation","BLOCKLY_MATH_RANDOM_FLOAT_TITLE_RANDOM":"fraction al\xe9atoire","BLOCKLY_MATH_RANDOM_FLOAT_TOOLTIP":"Renvoie une fraction al\xe9atoire comprise entre 0,0 (inclus) et 1,0 (exclus).","BLOCKLY_MATH_RANDOM_INT_HELPURL":"https://en.wikipedia.org/wiki/Random_number_generation","BLOCKLY_MATH_RANDOM_INT_TITLE":"nombre entier al\xe9atoire de %1 \xe0 %2","BLOCKLY_MATH_RANDOM_INT_TOOLTIP":"Renvoie un entier al\xe9atoire compris entre les deux limites sp\xe9cifi\xe9es, incluses.","BLOCKLY_MATH_ROUND_HELPURL":"https://en.wikipedia.org/wiki/Rounding","BLOCKLY_MATH_ROUND_OPERATOR_ROUND":"arrondir","BLOCKLY_MATH_ROUND_OPERATOR_ROUNDDOWN":"arrondir \xe0 l’inf\xe9rieur","BLOCKLY_MATH_ROUND_OPERATOR_ROUNDUP":"arrondir au sup\xe9rieur","BLOCKLY_MATH_ROUND_TOOLTIP":"Arrondit un nombre \xe0 la hausse ou \xe0 la baisse.","BLOCKLY_MATH_SINGLE_HELPURL":"https://en.wikipedia.org/wiki/Square_root","BLOCKLY_MATH_SINGLE_OP_ABSOLUTE":"valeur absolue","BLOCKLY_MATH_SINGLE_OP_ROOT":"racine carr\xe9e","BLOCKLY_MATH_SINGLE_TOOLTIP_ABS":"Renvoie la valeur absolue d’un nombre.","BLOCKLY_MATH_SINGLE_TOOLTIP_EXP":"Renvoie e \xe0 la puissance d’un nombre.","BLOCKLY_MATH_SINGLE_TOOLTIP_LN":"Renvoie le logarithme naturel d’un nombre.","BLOCKLY_MATH_SINGLE_TOOLTIP_LOG10":"Renvoie le logarithme en base 10 d’un nombre.","BLOCKLY_MATH_SINGLE_TOOLTIP_NEG":"Renvoie l’oppos\xe9 d’un nombre.","BLOCKLY_MATH_SINGLE_TOOLTIP_POW10":"Renvoie 10 \xe0 la puissance d’un nombre.","BLOCKLY_MATH_SINGLE_TOOLTIP_ROOT":"Renvoie la racine carr\xe9e d’un nombre.","BLOCKLY_MATH_SUBTRACTION_SYMBOL":"-","BLOCKLY_MATH_TRIG_ACOS":"acos","BLOCKLY_MATH_TRIG_ASIN":"asin","BLOCKLY_MATH_TRIG_ATAN":"atan","BLOCKLY_MATH_TRIG_COS":"cos","BLOCKLY_MATH_TRIG_HELPURL":"https://en.wikipedia.org/wiki/Trigonometric_functions","BLOCKLY_MATH_TRIG_SIN":"sin","BLOCKLY_MATH_TRIG_TAN":"tan","BLOCKLY_MATH_TRIG_TOOLTIP_ACOS":"Renvoie l’arccosinus d’un nombre.","BLOCKLY_MATH_TRIG_TOOLTIP_ASIN":"Renvoie l’arcsinus d’un nombre.","BLOCKLY_MATH_TRIG_TOOLTIP_ATAN":"Renvoie l’arctangente d’un nombre.","BLOCKLY_MATH_TRIG_TOOLTIP_COS":"Renvoie le cosinus d’un angle (en degr\xe9s, non radians).","BLOCKLY_MATH_TRIG_TOOLTIP_SIN":"Renvoie le sinus d’un angle (en degr\xe9s, non radians).","BLOCKLY_MATH_TRIG_TOOLTIP_TAN":"Renvoie la tangente d’un angle (en degr\xe9s, non radians).","BLOCKLY_NEW_COLOUR_VARIABLE":"Cr\xe9er une variable couleur...","BLOCKLY_NEW_NUMBER_VARIABLE":"Cr\xe9er une variable nombre...","BLOCKLY_NEW_STRING_VARIABLE":"Cr\xe9er une variable cha\xeene...","BLOCKLY_NEW_VARIABLE":"Cr\xe9er une variable...","BLOCKLY_NEW_VARIABLE_TITLE":"Nom de la nouvelle variable :","BLOCKLY_NEW_VARIABLE_TYPE_TITLE":"Type de la nouvelle variable :","BLOCKLY_ORDINAL_NUMBER_SUFFIX":"","BLOCKLY_PROCEDURES_ALLOW_STATEMENTS":"autoriser les instructions","BLOCKLY_PROCEDURES_BEFORE_PARAMS":"avec :","BLOCKLY_PROCEDURES_CALLNORETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_CALLNORETURN_TOOLTIP":"Ex\xe9cute la fonction d\xe9finie par l’utilisateur \'%1\'.","BLOCKLY_PROCEDURES_CALLRETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_CALLRETURN_TOOLTIP":"Ex\xe9cute la fonction d\xe9finie par l’utilisateur \'%1\' et utilise son r\xe9sultat.","BLOCKLY_PROCEDURES_CALL_BEFORE_PARAMS":"avec :","BLOCKLY_PROCEDURES_CREATE_DO":"Cr\xe9er \'%1\'","BLOCKLY_PROCEDURES_DEFNORETURN_COMMENT":"D\xe9crire cette fonction...","BLOCKLY_PROCEDURES_DEFNORETURN_DO":"","BLOCKLY_PROCEDURES_DEFNORETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_DEFNORETURN_PROCEDURE":"faire quelque chose","BLOCKLY_PROCEDURES_DEFNORETURN_TITLE":"pour","BLOCKLY_PROCEDURES_DEFNORETURN_TOOLTIP":"Cr\xe9e une fonction sans r\xe9sultat.","BLOCKLY_PROCEDURES_DEFRETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_DEFRETURN_RETURN":"renvoyer","BLOCKLY_PROCEDURES_DEFRETURN_TOOLTIP":"Cr\xe9e une fonction avec un r\xe9sultat.","BLOCKLY_PROCEDURES_DEF_DUPLICATE_WARNING":"Attention : Cette fonction a des param\xe8tres en double.","BLOCKLY_PROCEDURES_HIGHLIGHT_DEF":"Mettre en \xe9vidence la d\xe9finition de la fonction","BLOCKLY_PROCEDURES_IFRETURN_HELPURL":"https://c2.com/cgi/wiki?GuardClause","BLOCKLY_PROCEDURES_IFRETURN_TOOLTIP":"Si une valeur est vraie, alors renvoyer une deuxi\xe8me valeur.","BLOCKLY_PROCEDURES_IFRETURN_WARNING":"Attention : Ce bloc ne peut \xeatre utilis\xe9 que dans une d\xe9finition de fonction.","BLOCKLY_PROCEDURES_MUTATORARG_TITLE":"nom de l’entr\xe9e :","BLOCKLY_PROCEDURES_MUTATORARG_TOOLTIP":"Ajouter une entr\xe9e \xe0 la fonction.","BLOCKLY_PROCEDURES_MUTATORCONTAINER_TITLE":"entr\xe9es","BLOCKLY_PROCEDURES_MUTATORCONTAINER_TOOLTIP":"Ajouter, supprimer ou r\xe9organiser les entr\xe9es de cette fonction.","BLOCKLY_REDO":"R\xe9tablir","BLOCKLY_REMOVE_COMMENT":"Supprimer le commentaire","BLOCKLY_RENAME_VARIABLE":"Renommer la variable...","BLOCKLY_RENAME_VARIABLE_TITLE":"Renommer toutes les variables \'%1\' en :","BLOCKLY_TEXT_APPEND_HELPURL":"https://github.com/google/blockly/wiki/Text#text-modification","BLOCKLY_TEXT_APPEND_TITLE":"\xe0 %1 ajouter le texte %2","BLOCKLY_TEXT_APPEND_TOOLTIP":"Ajouter du texte \xe0 la variable \'%1\'.","BLOCKLY_TEXT_CHANGECASE_HELPURL":"https://github.com/google/blockly/wiki/Text#adjusting-text-case","BLOCKLY_TEXT_CHANGECASE_OPERATOR_LOWERCASE":"en minuscules","BLOCKLY_TEXT_CHANGECASE_OPERATOR_TITLECASE":"En Capitalisant Chaque Mot","BLOCKLY_TEXT_CHANGECASE_OPERATOR_UPPERCASE":"en MAJUSCULES","BLOCKLY_TEXT_CHANGECASE_TOOLTIP":"Renvoie une copie du texte dans une autre casse.","BLOCKLY_TEXT_CHARAT_FIRST":"obtenir la premi\xe8re lettre","BLOCKLY_TEXT_CHARAT_FROM_END":"obtenir la lettre # \xe0 partir de la fin","BLOCKLY_TEXT_CHARAT_FROM_START":"obtenir la lettre #","BLOCKLY_TEXT_CHARAT_HELPURL":"https://github.com/google/blockly/wiki/Text#extracting-text","BLOCKLY_TEXT_CHARAT_LAST":"obtenir la derni\xe8re lettre","BLOCKLY_TEXT_CHARAT_RANDOM":"obtenir une lettre au hasard","BLOCKLY_TEXT_CHARAT_TAIL":"","BLOCKLY_TEXT_CHARAT_TITLE":"dans le texte %1 %2","BLOCKLY_TEXT_CHARAT_TOOLTIP":"Renvoie la lettre \xe0 la position sp\xe9cifi\xe9e.","BLOCKLY_TEXT_COUNT_HELPURL":"https://github.com/google/blockly/wiki/Text#counting-substrings","BLOCKLY_TEXT_COUNT_MESSAGE0":"compter %1 dans %2","BLOCKLY_TEXT_COUNT_TOOLTIP":"Compte combien de fois un texte appara\xeet dans un autre texte.","BLOCKLY_TEXT_CREATE_JOIN_ITEM_TOOLTIP":"Ajouter un \xe9l\xe9ment au texte.","BLOCKLY_TEXT_CREATE_JOIN_TITLE_JOIN":"joindre","BLOCKLY_TEXT_CREATE_JOIN_TOOLTIP":"Ajouter, supprimer ou r\xe9organiser les sections pour reconfigurer ce bloc de texte.","BLOCKLY_TEXT_GET_SUBSTRING_END_FROM_END":"jusqu’\xe0 la lettre # \xe0 partir de la fin","BLOCKLY_TEXT_GET_SUBSTRING_END_FROM_START":"jusqu’\xe0 la lettre #","BLOCKLY_TEXT_GET_SUBSTRING_END_LAST":"jusqu’\xe0 la derni\xe8re lettre","BLOCKLY_TEXT_GET_SUBSTRING_HELPURL":"https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text","BLOCKLY_TEXT_GET_SUBSTRING_INPUT_IN_TEXT":"dans le texte","BLOCKLY_TEXT_GET_SUBSTRING_START_FIRST":"obtenir la sous-cha\xeene \xe0 partir de la premi\xe8re lettre","BLOCKLY_TEXT_GET_SUBSTRING_START_FROM_END":"obtenir la sous-cha\xeene \xe0 partir de la lettre # \xe0 partir de la fin","BLOCKLY_TEXT_GET_SUBSTRING_START_FROM_START":"obtenir la sous-cha\xeene \xe0 partir de la lettre #","BLOCKLY_TEXT_GET_SUBSTRING_TAIL":"","BLOCKLY_TEXT_GET_SUBSTRING_TOOLTIP":"Renvoie une partie sp\xe9cifi\xe9e du texte.","BLOCKLY_TEXT_INDEXOF_HELPURL":"https://github.com/google/blockly/wiki/Text#finding-text","BLOCKLY_TEXT_INDEXOF_OPERATOR_FIRST":"trouver la premi\xe8re occurrence du texte","BLOCKLY_TEXT_INDEXOF_OPERATOR_LAST":"trouver la derni\xe8re occurrence du texte","BLOCKLY_TEXT_INDEXOF_TITLE":"dans le texte %1 %2 %3","BLOCKLY_TEXT_INDEXOF_TOOLTIP":"Renvoie l’index de la premi\xe8re/derni\xe8re occurrence du premier texte dans le second texte. Renvoie %1 si le texte n’est pas trouv\xe9.","BLOCKLY_TEXT_ISEMPTY_HELPURL":"https://github.com/google/blockly/wiki/Text#checking-for-empty-text","BLOCKLY_TEXT_ISEMPTY_TITLE":"%1 est vide","BLOCKLY_TEXT_ISEMPTY_TOOLTIP":"Renvoie vrai si le texte fourni est vide.","BLOCKLY_TEXT_JOIN_HELPURL":"https://github.com/google/blockly/wiki/Text#text-creation","BLOCKLY_TEXT_JOIN_TITLE_CREATEWITH":"cr\xe9er un texte avec","BLOCKLY_TEXT_JOIN_TOOLTIP":"Cr\xe9er un texte en joignant ensemble n’importe quel nombre d’\xe9l\xe9ments.","BLOCKLY_TEXT_LENGTH_HELPURL":"https://github.com/google/blockly/wiki/Text#text-modification","BLOCKLY_TEXT_LENGTH_TITLE":"longueur de %1","BLOCKLY_TEXT_LENGTH_TOOLTIP":"Renvoie le nombre de lettres (y compris les espaces) dans le texte fourni.","BLOCKLY_TEXT_PRINT_HELPURL":"https://github.com/google/blockly/wiki/Text#printing-text","BLOCKLY_TEXT_PRINT_TITLE":"imprimer %1","BLOCKLY_TEXT_PRINT_TOOLTIP":"Imprime le texte, le nombre ou une autre valeur sp\xe9cifi\xe9e.","BLOCKLY_TEXT_PROMPT_HELPURL":"https://github.com/google/blockly/wiki/Text#getting-input-from-the-user","BLOCKLY_TEXT_PROMPT_TOOLTIP_NUMBER":"Demander \xe0 l’utilisateur un nombre.","BLOCKLY_TEXT_PROMPT_TOOLTIP_TEXT":"Demander \xe0 l’utilisateur un texte.","BLOCKLY_TEXT_PROMPT_TYPE_NUMBER":"demander un nombre avec le message","BLOCKLY_TEXT_PROMPT_TYPE_TEXT":"demander un texte avec le message","BLOCKLY_TEXT_REPLACE_HELPURL":"https://github.com/google/blockly/wiki/Text#replacing-substrings","BLOCKLY_TEXT_REPLACE_MESSAGE0":"remplacer %1 par %2 dans %3","BLOCKLY_TEXT_REPLACE_TOOLTIP":"Remplacer toutes les occurrences d’un texte dans un autre texte.","BLOCKLY_TEXT_REVERSE_HELPURL":"https://github.com/google/blockly/wiki/Text#reversing-text","BLOCKLY_TEXT_REVERSE_MESSAGE0":"inverser %1","BLOCKLY_TEXT_REVERSE_TOOLTIP":"Inverse l’ordre des caract\xe8res du texte.","BLOCKLY_TEXT_TEXT_HELPURL":"https://en.wikipedia.org/wiki/String_(computer_science)","BLOCKLY_TEXT_TEXT_TOOLTIP":"Une lettre, un mot ou une ligne de texte.","BLOCKLY_TEXT_TRIM_HELPURL":"https://github.com/google/blockly/wiki/Text#trimming-removing-spaces","BLOCKLY_TEXT_TRIM_OPERATOR_BOTH":"supprimer les espaces des deux c\xf4t\xe9s de","BLOCKLY_TEXT_TRIM_OPERATOR_LEFT":"supprimer les espaces du c\xf4t\xe9 gauche de","BLOCKLY_TEXT_TRIM_OPERATOR_RIGHT":"supprimer les espaces du c\xf4t\xe9 droit de","BLOCKLY_TEXT_TRIM_TOOLTIP":"Renvoie une copie du texte avec les espaces supprim\xe9s d’un ou des deux c\xf4t\xe9s.","BLOCKLY_TODAY":"Aujourd’hui","BLOCKLY_UNDO":"Annuler","BLOCKLY_UNNAMED_KEY":"sans nom","BLOCKLY_VARIABLES_DEFAULT_NAME":"\xe9l\xe9ment","BLOCKLY_VARIABLES_GET_CREATE_SET":"Cr\xe9er \'d\xe9finir %1\'","BLOCKLY_VARIABLES_GET_HELPURL":"https://github.com/google/blockly/wiki/Variables#get","BLOCKLY_VARIABLES_GET_TOOLTIP":"Renvoie la valeur de cette variable.","BLOCKLY_VARIABLES_SET":"d\xe9finir %1 \xe0 %2","BLOCKLY_VARIABLES_SET_CREATE_GET":"Cr\xe9er \'obtenir %1\'","BLOCKLY_VARIABLES_SET_HELPURL":"https://github.com/google/blockly/wiki/Variables#set","BLOCKLY_VARIABLES_SET_TOOLTIP":"D\xe9finit cette variable \xe0 la valeur de l’entr\xe9e.","BLOCKLY_VARIABLE_ALREADY_EXISTS":"Une variable nomm\xe9e \'%1\' existe d\xe9j\xe0.","BLOCKLY_VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE":"Une variable nomm\xe9e \'%1\' existe d\xe9j\xe0 pour un autre type : \'%2\'.","BLOCKLY_WORKSPACE_ARIA_LABEL":"Espace de travail Blockly","BLOCKLY_WORKSPACE_COMMENT_DEFAULT_TEXT":"Dites quelque chose...","BLOCKLY_CONTROLS_FOREACH_INPUT_DO":"faire","BLOCKLY_CONTROLS_FOR_INPUT_DO":"faire","BLOCKLY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF":"sinon si","BLOCKLY_CONTROLS_IF_ELSE_TITLE_ELSE":"sinon","BLOCKLY_CONTROLS_IF_IF_TITLE_IF":"si","BLOCKLY_CONTROLS_IF_MSG_THEN":"faire","BLOCKLY_CONTROLS_WHILEUNTIL_INPUT_DO":"faire","BLOCKLY_LISTS_CREATE_WITH_ITEM_TITLE":"\xe9l\xe9ment","BLOCKLY_LISTS_GET_INDEX_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list","BLOCKLY_LISTS_GET_INDEX_INPUT_IN_LIST":"dans la liste","BLOCKLY_LISTS_GET_SUBLIST_INPUT_IN_LIST":"dans la liste","BLOCKLY_LISTS_INDEX_OF_INPUT_IN_LIST":"dans la liste","BLOCKLY_LISTS_SET_INDEX_INPUT_IN_LIST":"dans la liste","BLOCKLY_MATH_CHANGE_TITLE_ITEM":"\xe9l\xe9ment","BLOCKLY_PROCEDURES_DEFRETURN_COMMENT":"D\xe9crire cette fonction...","BLOCKLY_PROCEDURES_DEFRETURN_DO":"","BLOCKLY_PROCEDURES_DEFRETURN_PROCEDURE":"faire quelque chose","BLOCKLY_PROCEDURES_DEFRETURN_TITLE":"pour","BLOCKLY_TEXT_APPEND_VARIABLE":"\xe9l\xe9ment","BLOCKLY_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM":"\xe9l\xe9ment","BLOCKLY_MATH_HUE":"230","BLOCKLY_LOOPS_HUE":"120","BLOCKLY_LISTS_HUE":"260","BLOCKLY_LOGIC_HUE":"210","BLOCKLY_VARIABLES_HUE":"330","BLOCKLY_TEXTS_HUE":"160","BLOCKLY_PROCEDURES_HUE":"290","BLOCKLY_COLOUR_HUE":"20","BLOCKLY_VARIABLES_DYNAMIC_HUE":"310"}')},4166:function(e){e.exports=JSON.parse('{"DISCONNECTED":"Mất kết nối","CONNECTED":"Đ\xe3 kết nối","SAVE":"Lưu","LOAD":"Tải","DEPLOY":"Triển khai","CLEAR":"X\xf3a","CLEAR_FILTER":"X\xf3a bộ lọc","BREAK":"Dừng","RUN":"Chạy","CONNECT":"Kết nối","CONNECTION":"Kết nối","REFRESH":"L\xe0m mới","REBOOT":"Khởi động lại","ROBOT":"Robot","CONFIRM":"X\xe1c nhận","CANCEL":"Hủy","CODE_EDITOR":"Tr\xecnh chỉnh sửa m\xe3","CONSOLE":"Bảng điều khiển","CLOSE_TAB":"Đ\xf3ng tab","ACTIVITY":"Hoạt động","ACTIVITIES_LIBRARY":"Thư viện hoạt động","ALL":"Tất cả","ACTIVITY_NOT_FOUND":"\xd4i kh\xf4ng, kh\xf4ng t\xecm thấy hoạt động","SETTINGS":"C\xe0i đặt","CONFIG":"Cấu h\xecnh","ROBOT_IP_ADDRESS":"Địa chỉ IP robot","EDITOR":"Tr\xecnh chỉnh sửa","CODE":"M\xe3","BLOCK":"Khối","LANGUAGE":"Ng\xf4n ngữ","SSID":"SSID","PASSWORD":"Mật khẩu","WIFI":"Wifi","WIFI_NETWORK":"Mạng Wifi","WIFI_PASSWORD":"Mật khẩu Wifi","TOAST_LOAD_ACTIVITY_TITLE":"Đ\xe3 tải hoạt động","TOAST_LOAD_ACTIVITY_CODE_DESCRIPTION":"M\xe3 hoạt động đ\xe3 được tải v\xe0o tab mới trong kh\xf4ng gian l\xe0m việc","TOAST_LOAD_ACTIVITY_BLOCK_DESCRIPTION":"Hoạt động đ\xe3 được tải v\xe0o kh\xf4ng gian l\xe0m việc","TOAST_LOAD_CODE_ERROR_TITLE":"Lỗi: Tải m\xe3 từ thẻ SD thất bại","TOAST_LOAD_CODE_ERROR_DESCRIPTION":"Vui l\xf2ng thử lại","TOAST_LOAD_CODE_SUCCESS_TITLE":"Th\xe0nh c\xf4ng","TOAST_LOAD_CODE_SUCCESS_DESCRIPTION":"Đ\xe3 tải m\xe3 từ thẻ SD","TOAST_DEPLOY_CODE_ERROR_TITLE":"Lỗi: Triển khai thất bại","TOAST_DEPLOY_CODE_ERROR_DESCRIPTION":"Vui l\xf2ng thử lại","TOAST_DEPLOY_CODE_SUCCESS_TITLE":"Th\xe0nh c\xf4ng","TOAST_DEPLOY_CODE_SUCCESS_DESCRIPTION":"Đ\xe3 triển khai m\xe3","TOAST_DEPLOY_CODE_FAIL_TITLE":"\xd4i kh\xf4ng, c\xf3 lỗi...","TOAST_DEPLOY_CODE_FAIL_DESCRIPTION":"Vui l\xf2ng thử lại","TOAST_SAVE_CODE_ERROR_TITLE":"Lỗi: Lưu v\xe0o thẻ SD thất bại","TOAST_SAVE_CODE_ERROR_DESCRIPTION":"Vui l\xf2ng thử lại","TOAST_SAVE_CODE_SUCCESS_TITLE":"Th\xe0nh c\xf4ng","TOAST_SAVE_CODE_SUCCESS_DESCRIPTION":"Đ\xe3 lưu m\xe3 v\xe0o thẻ SD","TOAST_NETWORK_STATUS_DISCONNECTED_TITLE":"Robot chưa kết nối","TOAST_NETWORK_STATUS_DISCONNECTED_SAVE_DESCRIPTION":"Vui l\xf2ng kết nối robot để lưu","TOAST_NETWORK_STATUS_DISCONNECTED_LOAD_DESCRIPTION":"Vui l\xf2ng kết nối robot để tải","TOAST_NETWORK_STATUS_DISCONNECTED_BREAK_DESCRIPTION":"Vui l\xf2ng kết nối robot để dừng","TOAST_NETWORK_STATUS_DISCONNECTED_RUN_DESCRIPTION":"Vui l\xf2ng kết nối robot để chạy","TOAST_NETWORK_STATUS_DISCONNECTED_DEPLOY_DESCRIPTION":"Vui l\xf2ng kết nối robot để triển khai","TOAST_WIFI_CONNECTING_TITLE":"Đang kết nối Wifi...","TOAST_WIFI_CONNECT_FAIL_TITLE":"Sai mật khẩu Wifi","TOAST_WIFI_CONNECT_FAIL_DESCRIPTION":"Vui l\xf2ng thử lại","TOAST_WIFI_CONNECT_SUCCESS_TITLE":"Th\xe0nh c\xf4ng","TOAST_WIFI_CONNECT_SUCCESS_DESCRIPTION":"Đ\xe3 kết nối Wifi","TOAST_SETTINGS_UPDATE_ERROR_TITLE":"\xd4i kh\xf4ng, c\xf3 lỗi...","TOAST_SETTINGS_UPDATE_ERROR_DESCRIPTION":"Cập nhật cấu h\xecnh thất bại, vui l\xf2ng thử lại","TOAST_SETTINGS_UPDATE_SUCCESS_TITLE":"Th\xe0nh c\xf4ng","TOAST_SETTINGS_UPDATE_SUCCESS_DESCRIPTION":"Cấu h\xecnh đ\xe3 được cập nhật","ALERT_SETTINGS_UPDATE_TITLE":"X\xe1c nhận thay đổi","ALERT_LANGUAGE_UPDATE_DESCRIPTION":"Bạn c\xf3 chắc muốn thay đổi ng\xf4n ngữ kh\xf4ng?","ALERT_EDITOR_UPDATE_DESCRIPTION":"Tiến độ hiện tại sẽ bị x\xf3a. Bạn c\xf3 chắc muốn đổi tr\xecnh chỉnh sửa kh\xf4ng?","ALERT_CODE_DEPLOY_TITLE":"X\xe1c nhận triển khai m\xe3","ALERT_CODE_DEPLOY_DESCRIPTION":"Triển khai m\xe3 n\xe0y sẽ ghi đ\xe8 t\xednh năng cổng th\xf4ng tin. Bạn c\xf3 muốn tiếp tục?","ONBOARDING_WIFI_CONNECT_TITLE":"Kết nối CYOBot với Wifi","ONBOARDING_WIFI_CONNECT_DESCRIPTION":"Chọn mạng Wifi của bạn","ONBOARDING_WIFI_CONNECT_NOT_FOUND":"Kh\xf4ng t\xecm thấy mạng","ONBOARDING_RETURN_TO_HOME":"Quay về trang chủ","ONBOARDING_BACK_TO_WIFI_SELECT":"Quay lại chọn mạng Wifi","ACTIVITY_TITLE_MATRIX_LED_BLINK":"Nh\xe1y LED tr\xean ma trận","ACTIVITY_DESCRIPTION_MATRIX_LED_BLINK":"Nh\xe1y một đ\xe8n LED tr\xean m\xe0n h\xecnh ma trận của robot. Nhấn Dừng để kết th\xfac chương tr\xecnh.","ACTIVITY_TITLE_MATRIX_CHARACTER":"Hiển thị k\xfd tự","ACTIVITY_DESCRIPTION_MATRIX_CHARACTER":"Hiển thị một k\xfd tự tr\xean m\xe0n h\xecnh ma trận LED. Bạn c\xf3 thể hiển thị chữ c\xe1i (A~Z) v\xe0 số (0~9).","ACTIVITY_TITLE_SCROLL_WORD":"Cuộn từ","ACTIVITY_DESCRIPTION_SCROLL_WORD":"Sử dụng h\xe0m c\xf3 sẵn để cuộn một từ tr\xean m\xe0n h\xecnh LED. Bạn c\xf3 thể thay đổi tốc độ v\xe0 m\xe0u chữ. Hiện tại thư viện chỉ hỗ trợ chữ hoa v\xe0 số.","ACTIVITY_TITLE_RING_MANUAL":"Bật LED tr\xean v\xf2ng","ACTIVITY_DESCRIPTION_RING_MANUAL":"Bật một đ\xe8n LED tr\xean v\xf2ng LED của robot.","ACTIVITY_TITLE_RING_LOADING":"Di chuyển đ\xe8n LED theo v\xf2ng tr\xf2n","ACTIVITY_DESCRIPTION_RING_LOADING":"Bật một đ\xe8n LED tr\xean v\xf2ng của robot v\xe0 di chuyển n\xf3 theo v\xf2ng tr\xf2n.","ACTIVITY_TITLE_BUTTON_PRESSED":"Ph\xe1t hiện n\xfat bấm","ACTIVITY_DESCRIPTION_BUTTON_PRESSED":"Ph\xe1t hiện n\xfat được nhấn. Nếu n\xfat tr\xe1i được nhấn, bật LED tr\xean ma trận. Ngược lại tắt LED. Nhấn Dừng để kết th\xfac chương tr\xecnh.","ACTIVITY_TITLE_SPEAKER_PLAY":"Ph\xe1t file nhạc","ACTIVITY_DESCRIPTION_SPEAKER_PLAY":"Ph\xe1t file nhạc từ thẻ micro SD bằng loa t\xedch hợp của robot.","ACTIVITY_TITLE_IMU_TILT_TEST":"Thu thập dữ liệu chuyển động","ACTIVITY_DESCRIPTION_IMU_TILT_TEST":"Ghi dữ liệu chuyển động khi nghi\xeang robot v\xe0 quan s\xe1t LED hiển thị tương ứng. Nhấn Dừng để kết th\xfac.","ACTIVITY_TITLE_RECORD_REPLAY":"Ghi v\xe0 ph\xe1t lại \xe2m thanh","ACTIVITY_DESCRIPTION_RECORD_REPLAY":"Ghi \xe2m trong 10 gi\xe2y bằng mic t\xedch hợp rồi ph\xe1t lại bằng loa.","ACTIVITY_TITLE_FORWARD_COMMAND":"Di chuyển về ph\xeda trước 3 bước (4 ch\xe2n)","ACTIVITY_DESCRIPTION_FORWARD_COMMAND":"Sử dụng h\xe0m c\xf3 sẵn để điều khiển robot đi thẳng 3 bước ở dạng nhện.","ACTIVITY_TITLE_ROTATE_COMMAND":"Quay tr\xe1i 3 bước (4 ch\xe2n)","ACTIVITY_DESCRIPTION_ROTATE_COMMAND":"Sử dụng h\xe0m c\xf3 sẵn để điều khiển robot quay tr\xe1i 3 bước ở dạng nhện.","ACTIVITY_TITLE_WAVING":"Vẫy tay phải khi đứng","ACTIVITY_DESCRIPTION_WAVING":"Điều khiển 1 động cơ ở h\xf4ng ch\xe2n đầu ti\xean khi robot đứng để n\xf3 vẫy bạn 3 lần.","ACTIVITY_TITLE_PUSHUP":"Chống đẩy","ACTIVITY_DESCRIPTION_PUSHUP":"Điều khiển 2 động cơ ở đầu gối hai ch\xe2n để robot chống đẩy ở dạng người.","ACTIVITY_TITLE_FORWARD_COMMAND_WHEELER":"L\xe1i thẳng 2 gi\xe2y (b\xe1nh xe)","ACTIVITY_DESCRIPTION_FORWARD_COMMAND_WHEELER":"Sử dụng h\xe0m c\xf3 sẵn để điều khiển robot l\xe1i thẳng 2 gi\xe2y ở chế độ b\xe1nh xe","ACTIVITY_TITLE_FORWARD_DIAGLEFT_COMMAND_WHEELER":"L\xe1i ch\xe9o tr\xe1i 2 gi\xe2y","ACTIVITY_DESCRIPTION_FORWARD_DIAGLEFT_COMMAND_WHEELER":"Sử dụng h\xe0m c\xf3 sẵn để điều khiển robot l\xe1i ch\xe9o tr\xe1i 2 gi\xe2y ở chế độ b\xe1nh xe","ACTIVITY_TITLE_FORWARD_LEFT_COMMAND_WHEELER":"Quay tr\xe1i 2 gi\xe2y (b\xe1nh xe)","ACTIVITY_DESCRIPTION_FORWARD_LEFT_COMMAND_WHEELER":"Sử dụng h\xe0m c\xf3 sẵn để điều khiển robot quay tr\xe1i 2 gi\xe2y ở chế độ b\xe1nh xe","ACTIVITY_TITLE_CONSOLE_JOYSTICK_RING":"Hiển thị vị tr\xed cần điều khiển","ACTIVITY_DESCRIPTION_CONSOLE_JOYSTICK_RING":"Đọc vị tr\xed cần điều khiển tr\xe1i v\xe0 hiển thị qua v\xf2ng LED.","ACTIVITY_TITLE_CONSOLE_JOYSTICK_RING_2":"Hiển thị g\xf3c cần điều khiển","ACTIVITY_DESCRIPTION_CONSOLE_JOYSTICK_RING_2":"Đọc vị tr\xed cần điều khiển tr\xe1i v\xe0 hiển thị g\xf3c qua v\xf2ng LED.","BLOCKLY_CATEGORY_STRUCTURE":"Cấu tr\xfac","BLOCKLY_CATEGORY_CONDITION":"Điều kiện","BLOCKLY_CATEGORY_VALUE":"Gi\xe1 trị","BLOCKLY_CATEGORY_DISPLAY":"Hiển thị","BLOCKLY_CATEGORY_MOTION":"Chuyển động","BLOCKLY_CATEGORY_SENSING":"Cảm biến","BLOCKLY_CATEGORY_SOUND":"\xc2m thanh","BLOCKLY_CATEGORY_TIMING":"Thời gian","BLOCKLY_CATEGORY_OTHER":"Kh\xe1c","BLOCKLY_CATEGORY_MATH":"To\xe1n học","BLOCKLY_CATEGORY_DATA_LIST":"Danh s\xe1ch dữ liệu","BLOCKLY_CATEGORY_EXTERNAL":"B\xean ngo\xe0i","BLOCKLY_CATEGORY_VARIABLES":"Biến","BLOCKLY_STRUCTURE_MATRIX_INIT":"Khởi động ma trận LED","BLOCKLY_STRUCTURE_RING_INIT":"Khởi động v\xf2ng LED","BLOCKLY_STRUCTURE_TIME_INIT":"Khởi động thời gian","BLOCKLY_STRUCTURE_SPEAKER_INIT":"Khởi động loa","BLOCKLY_STRUCTURE_IMU_INIT":"Khởi động cảm biến chuyển động","BLOCKLY_STRUCTURE_BUTTON_INIT":"Khởi động n\xfat bấm","BLOCKLY_STRUCTURE_MICROPHONE_INIT":"Khởi động micro","BLOCKLY_STRUCTURE_CRAWLER_INIT":"Khởi động Crawler","BLOCKLY_STRUCTURE_WHEELER_INIT":"Khởi động Wheeler","BLOCKLY_STRUCTURE_CONSOLE_INIT":"Khởi động m\xe1y chơi game","BLOCKLY_DISPLAY_MATRIX_RESET":"Đặt lại ma trận LED","BLOCKLY_DISPLAY_RING_RESET":"Đặt lại v\xf2ng LED","BLOCKLY_DISPLAY_MATRIX_CHARACTER":"Hiển thị %1 tại %2","BLOCKLY_DISPLAY_MATRIX_SCROLL":"Cuộn %1 tại %2 %3","BLOCKLY_DISPLAY_MATRIX_MANUAL":"Đặt LED #%1 tr\xean ma trận th\xe0nh %2","BLOCKLY_DISPLAY_MATRIX_MANUAL_2":"Đặt LED #%1 tr\xean ma trận th\xe0nh đỏ: %2%, xanh l\xe1: %3%, xanh dương: %4%","BLOCKLY_DISPLAY_MATRIX_ALL":"Đặt tất cả LED tr\xean ma trận th\xe0nh %1","BLOCKLY_DISPLAY_MATRIX_ALL_2":"Đặt tất cả LED tr\xean ma trận th\xe0nh đỏ: %1%, xanh l\xe1: %2%, xanh dương: %3%","BLOCKLY_DISPLAY_RING_SPIN":"Xoay LED trong %1 %2","BLOCKLY_DISPLAY_RING_MANUAL":"Đặt LED #%1 tr\xean v\xf2ng th\xe0nh %2","BLOCKLY_DISPLAY_RING_MANUAL_2":"Đặt LED #%1 tr\xean v\xf2ng th\xe0nh đỏ: %2%, xanh l\xe1: %3%, xanh dương: %4%","BLOCKLY_DISPLAY_RING_ALL":"Đặt tất cả LED tr\xean v\xf2ng th\xe0nh %1","BLOCKLY_DISPLAY_RING_ALL_2":"Đặt tất cả LED tr\xean v\xf2ng th\xe0nh đỏ: %1%, xanh l\xe1: %2%, xanh dương: %3%","BLOCKLY_MOTION_COMMAND":"Đi %1 %2 bước","BLOCKLY_MOTION_COMMAND_2":"Xoay %1 %2 bước","BLOCKLY_MOTION_COMMAND_3":"Chạy %1 %2 trong %3 gi\xe2y","BLOCKLY_MOTION_THROTTLE":"Đặt tốc độ tới %1","BLOCKLY_MOTION_STEERING":"Đặt l\xe1i\\ntrước %1 sau %2","BLOCKLY_MOTION_OFF":"Tắt động cơ","BLOCKLY_MOTION_CENTER":"Căn giữa động cơ","BLOCKLY_MOTION_SINGLE":"Đặt ch\xe2n %1 \\nh\xf4ng %2 gối %3","BLOCKLY_MOTION_ALL":"Đặt tất cả ch\xe2n\\nCh\xe2n 0 h\xf4ng %1 gối %2\\nCh\xe2n 1 h\xf4ng %3 gối %4\\nCh\xe2n 2 h\xf4ng %5 gối %6\\nCh\xe2n 3 h\xf4ng %7 gối %8\\n","BLOCKLY_MOTION_SET_ANGLE":"Đặt k\xeanh %1 th\xe0nh g\xf3c %2","BLOCKLY_SENSING_ACCEL":"gia tốc %1","BLOCKLY_SENSING_GYRO":"con quay %1","BLOCKLY_SENSING_TEMP":"nhiệt độ","BLOCKLY_SENSING_BUTTON":"n\xfat %1","BLOCKLY_SENSING_CONSOLE_TRIGGER":"c\xf2 %1","BLOCKLY_SENSING_CONSOLE_JOYSTICK_BUTTON":"n\xfat cần điều khiển %1","BLOCKLY_SENSING_CONSOLE_JOYSTICK":"cần điều khiển %1 trục %2","BLOCKLY_SOUND_PLAY":"Ph\xe1t nhạc","BLOCKLY_SOUND_PLAY_RECORD":"Ph\xe1t bản ghi","BLOCKLY_SOUND_RECORD":"Ghi \xe2m %1 gi\xe2y","BLOCKLY_TIMING_SLEEP":"Tạm dừng %1 gi\xe2y","BLOCKLY_TIMING_TICKSMS":"mili gi\xe2y kể từ khi bắt đầu","BLOCKLY_TIMING_TIME":"gi\xe2y kể từ khi bắt đầu","BLOCKLY_VALUE_NUMBER":"Số %1","BLOCKLY_SPEED_SLOWLY":"chậm","BLOCKLY_SPEED_NORMALLY":"b\xecnh thường","BLOCKLY_SPEED_FAST":"nhanh","BLOCKLY_SPEED_VERY_FAST":"rất nhanh","BLOCKLY_STRAIGHT":"thẳng","BLOCKLY_LEFT":"tr\xe1i","BLOCKLY_RIGHT":"phải","BLOCKLY_LEFT_DIAGONAL":"ch\xe9o tr\xe1i","BLOCKLY_RIGHT_DIAGONAL":"ch\xe9o phải","BLOCKLY_FORWARD":"tiến","BLOCKLY_BACKWARD":"l\xf9i","BLOCKLY_ADD_COMMENT":"Th\xeam ghi ch\xfa","BLOCKLY_CANNOT_DELETE_VARIABLE_PROCEDURE":"Kh\xf4ng thể xo\xe1 biến \'%1\' v\xec n\xf3 l\xe0 một phần của định nghĩa h\xe0m \'%2\'","BLOCKLY_CHANGE_VALUE_TITLE":"Đổi gi\xe1 trị:","BLOCKLY_CLEAN_UP":"Sắp xếp c\xe1c khối","BLOCKLY_COLLAPSED_WARNINGS_WARNING":"C\xe1c khối thu gọn c\xf3 chứa cảnh b\xe1o.","BLOCKLY_COLLAPSE_ALL":"Thu gọn tất cả c\xe1c khối","BLOCKLY_COLLAPSE_BLOCK":"Thu gọn khối","BLOCKLY_COLOUR_BLEND_COLOUR1":"m\xe0u 1","BLOCKLY_COLOUR_BLEND_COLOUR2":"m\xe0u 2","BLOCKLY_COLOUR_BLEND_HELPURL":"https://meyerweb.com/eric/tools/color-blend/#:::rgbp","BLOCKLY_COLOUR_BLEND_RATIO":"tỉ lệ","BLOCKLY_COLOUR_BLEND_TITLE":"trộn","BLOCKLY_COLOUR_BLEND_TOOLTIP":"Trộn hai m\xe0u với tỉ lệ đ\xe3 cho (0.0 - 1.0).","BLOCKLY_COLOUR_PICKER_HELPURL":"https://en.wikipedia.org/wiki/Color","BLOCKLY_COLOUR_PICKER_TOOLTIP":"Chọn một m\xe0u từ bảng m\xe0u.","BLOCKLY_COLOUR_RANDOM_HELPURL":"http://randomcolour.com","BLOCKLY_COLOUR_RANDOM_TITLE":"m\xe0u ngẫu nhi\xean","BLOCKLY_COLOUR_RANDOM_TOOLTIP":"Chọn một m\xe0u ngẫu nhi\xean.","BLOCKLY_COLOUR_RGB_BLUE":"xanh dương","BLOCKLY_COLOUR_RGB_GREEN":"xanh l\xe1","BLOCKLY_COLOUR_RGB_HELPURL":"https://www.december.com/html/spec/colorpercompact.html","BLOCKLY_COLOUR_RGB_RED":"đỏ","BLOCKLY_COLOUR_RGB_TITLE":"m\xe0u với","BLOCKLY_COLOUR_RGB_TOOLTIP":"Tạo một m\xe0u với lượng đỏ, xanh l\xe1 v\xe0 xanh dương x\xe1c định. Gi\xe1 trị từ 0 đến 100.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_HELPURL":"https://github.com/google/blockly/wiki/Loops#loop-termination-blocks","BLOCKLY_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK":"tho\xe1t khỏi v\xf2ng lặp","BLOCKLY_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE":"tiếp tục v\xf2ng lặp","BLOCKLY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK":"Tho\xe1t khỏi v\xf2ng lặp bao quanh.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE":"Bỏ qua phần c\xf2n lại của v\xf2ng lặp n\xe0y, tiếp tục với lần lặp tiếp theo.","BLOCKLY_CONTROLS_FLOW_STATEMENTS_WARNING":"Cảnh b\xe1o: Khối n\xe0y chỉ d\xf9ng được trong v\xf2ng lặp.","BLOCKLY_CONTROLS_FOREACH_HELPURL":"https://github.com/google/blockly/wiki/Loops#for-each","BLOCKLY_CONTROLS_FOREACH_TITLE":"với mỗi mục %1 trong danh s\xe1ch %2","BLOCKLY_CONTROLS_FOREACH_TOOLTIP":"Với mỗi mục trong danh s\xe1ch, g\xe1n biến \'%1\' với mục đ\xf3 rồi thực hiện c\xe1c lệnh.","BLOCKLY_CONTROLS_FOR_HELPURL":"https://github.com/google/blockly/wiki/Loops#count-with","BLOCKLY_CONTROLS_FOR_TITLE":"đếm với %1 từ %2 đến %3 bước %4","BLOCKLY_CONTROLS_FOR_TOOLTIP":"Cho biến \'%1\' chạy từ số bắt đầu đến số kết th\xfac, tăng theo bước đ\xe3 chỉ định, v\xe0 thực hiện c\xe1c lệnh đ\xe3 chọn.","BLOCKLY_CONTROLS_IF_ELSEIF_TOOLTIP":"Th\xeam một điều kiện v\xe0o khối if.","BLOCKLY_CONTROLS_IF_ELSE_TOOLTIP":"Th\xeam điều kiện cuối c\xf9ng v\xe0o khối if.","BLOCKLY_CONTROLS_IF_HELPURL":"https://github.com/google/blockly/wiki/IfElse","BLOCKLY_CONTROLS_IF_IF_TOOLTIP":"Th\xeam, xo\xe1, hoặc sắp xếp lại c\xe1c phần để cấu h\xecnh lại khối if n\xe0y.","BLOCKLY_CONTROLS_IF_MSG_ELSE":"nếu kh\xf4ng","BLOCKLY_CONTROLS_IF_MSG_ELSEIF":"nếu kh\xf4ng nếu","BLOCKLY_CONTROLS_IF_MSG_IF":"nếu","BLOCKLY_CONTROLS_IF_TOOLTIP_1":"Nếu gi\xe1 trị l\xe0 đ\xfang th\xec thực hiện c\xe1c lệnh.","BLOCKLY_CONTROLS_IF_TOOLTIP_2":"Nếu gi\xe1 trị l\xe0 đ\xfang th\xec thực hiện khối lệnh đầu ti\xean. Nếu kh\xf4ng, thực hiện khối lệnh thứ hai.","BLOCKLY_CONTROLS_IF_TOOLTIP_3":"Nếu gi\xe1 trị đầu ti\xean đ\xfang th\xec thực hiện khối lệnh đầu ti\xean. Nếu kh\xf4ng, nếu gi\xe1 trị thứ hai đ\xfang th\xec thực hiện khối lệnh thứ hai.","BLOCKLY_CONTROLS_IF_TOOLTIP_4":"Nếu gi\xe1 trị đầu ti\xean đ\xfang th\xec thực hiện khối lệnh đầu ti\xean. Nếu kh\xf4ng, nếu gi\xe1 trị thứ hai đ\xfang th\xec thực hiện khối lệnh thứ hai. Nếu kh\xf4ng gi\xe1 trị n\xe0o đ\xfang th\xec thực hiện khối lệnh cuối c\xf9ng.","BLOCKLY_CONTROLS_REPEAT_HELPURL":"https://en.wikipedia.org/wiki/For_loop","BLOCKLY_CONTROLS_REPEAT_INPUT_DO":"thực hiện","BLOCKLY_CONTROLS_REPEAT_TITLE":"lặp lại %1 lần","BLOCKLY_CONTROLS_REPEAT_TOOLTIP":"Thực hiện c\xe1c lệnh một số lần nhất định.","BLOCKLY_CONTROLS_WHILEUNTIL_HELPURL":"https://github.com/google/blockly/wiki/Loops#repeat","BLOCKLY_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL":"lặp lại cho đến khi","BLOCKLY_CONTROLS_WHILEUNTIL_OPERATOR_WHILE":"lặp lại khi","BLOCKLY_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL":"Khi gi\xe1 trị l\xe0 sai th\xec thực hiện c\xe1c lệnh.","BLOCKLY_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE":"Khi gi\xe1 trị l\xe0 đ\xfang th\xec thực hiện c\xe1c lệnh.","BLOCKLY_DELETE_ALL_BLOCKS":"Xo\xe1 tất cả %1 khối?","BLOCKLY_DELETE_BLOCK":"Xo\xe1 khối","BLOCKLY_DELETE_VARIABLE":"Xo\xe1 biến \'%1\'","BLOCKLY_DELETE_VARIABLE_CONFIRMATION":"Xo\xe1 %1 lần sử dụng biến \'%2\'?","BLOCKLY_DELETE_X_BLOCKS":"Xo\xe1 %1 khối","BLOCKLY_DIALOG_CANCEL":"Hủy","BLOCKLY_DIALOG_OK":"OK","BLOCKLY_DISABLE_BLOCK":"V\xf4 hiệu ho\xe1 khối","BLOCKLY_DUPLICATE_BLOCK":"Nh\xe2n bản","BLOCKLY_DUPLICATE_COMMENT":"Nh\xe2n bản ghi ch\xfa","BLOCKLY_ENABLE_BLOCK":"K\xedch hoạt khối","BLOCKLY_EXPAND_ALL":"Mở rộng tất cả c\xe1c khối","BLOCKLY_EXPAND_BLOCK":"Mở rộng khối","BLOCKLY_EXTERNAL_INPUTS":"Đầu v\xe0o ngo\xe0i","BLOCKLY_HELP":"Trợ gi\xfap","BLOCKLY_INLINE_INPUTS":"Đầu v\xe0o c\xf9ng d\xf2ng","BLOCKLY_LISTS_CREATE_EMPTY_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-empty-list","BLOCKLY_LISTS_CREATE_EMPTY_TITLE":"tạo danh s\xe1ch rỗng","BLOCKLY_LISTS_CREATE_EMPTY_TOOLTIP":"Trả về danh s\xe1ch c\xf3 độ d\xe0i 0, kh\xf4ng chứa bản ghi n\xe0o.","BLOCKLY_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD":"danh s\xe1ch","BLOCKLY_LISTS_CREATE_WITH_CONTAINER_TOOLTIP":"Th\xeam, xo\xe1, hoặc sắp xếp lại c\xe1c phần để cấu h\xecnh lại khối danh s\xe1ch n\xe0y.","BLOCKLY_LISTS_CREATE_WITH_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-list-with","BLOCKLY_LISTS_CREATE_WITH_INPUT_WITH":"tạo danh s\xe1ch với","BLOCKLY_LISTS_CREATE_WITH_ITEM_TOOLTIP":"Th\xeam một mục v\xe0o danh s\xe1ch.","BLOCKLY_LISTS_CREATE_WITH_TOOLTIP":"Tạo danh s\xe1ch với bất kỳ số lượng mục n\xe0o.","BLOCKLY_LISTS_GET_INDEX_FIRST":"đầu ti\xean","BLOCKLY_LISTS_GET_INDEX_FROM_END":"# từ cuối","BLOCKLY_LISTS_GET_INDEX_FROM_START":"#","BLOCKLY_LISTS_GET_INDEX_GET":"lấy","BLOCKLY_LISTS_GET_INDEX_GET_REMOVE":"lấy v\xe0 xo\xe1","BLOCKLY_LISTS_GET_INDEX_LAST":"cuối c\xf9ng","BLOCKLY_LISTS_GET_INDEX_RANDOM":"ngẫu nhi\xean","BLOCKLY_LISTS_GET_INDEX_REMOVE":"xo\xe1","BLOCKLY_LISTS_GET_INDEX_TAIL":"","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_FIRST":"Trả về mục đầu ti\xean trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_FROM":"Trả về mục ở vị tr\xed chỉ định trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_LAST":"Trả về mục cuối c\xf9ng trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_RANDOM":"Trả về một mục ngẫu nhi\xean trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST":"Xo\xe1 v\xe0 trả về mục đầu ti\xean trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM":"Xo\xe1 v\xe0 trả về mục ở vị tr\xed chỉ định trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST":"Xo\xe1 v\xe0 trả về mục cuối c\xf9ng trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM":"Xo\xe1 v\xe0 trả về một mục ngẫu nhi\xean trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST":"Xo\xe1 mục đầu ti\xean trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM":"Xo\xe1 mục ở vị tr\xed chỉ định trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST":"Xo\xe1 mục cuối c\xf9ng trong danh s\xe1ch.","BLOCKLY_LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM":"Xo\xe1 mục ngẫu nhi\xean trong danh s\xe1ch.","BLOCKLY_LISTS_GET_SUBLIST_END_FROM_END":"đến # từ cuối","BLOCKLY_LISTS_GET_SUBLIST_END_FROM_START":"đến #","BLOCKLY_LISTS_GET_SUBLIST_END_LAST":"đến cuối c\xf9ng","BLOCKLY_LISTS_GET_SUBLIST_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-a-sublist","BLOCKLY_LISTS_GET_SUBLIST_START_FIRST":"lấy đoạn con từ đầu ti\xean","BLOCKLY_LISTS_GET_SUBLIST_START_FROM_END":"lấy đoạn con từ # từ cuối","BLOCKLY_LISTS_GET_SUBLIST_START_FROM_START":"lấy đoạn con từ #","BLOCKLY_LISTS_GET_SUBLIST_TAIL":"","BLOCKLY_LISTS_GET_SUBLIST_TOOLTIP":"Tạo bản sao của phần chỉ định trong danh s\xe1ch.","BLOCKLY_LISTS_INDEX_FROM_END_TOOLTIP":"%1 l\xe0 mục cuối c\xf9ng.","BLOCKLY_LISTS_INDEX_FROM_START_TOOLTIP":"%1 l\xe0 mục đầu ti\xean.","BLOCKLY_LISTS_INDEX_OF_FIRST":"t\xecm vị tr\xed đầu ti\xean của mục","BLOCKLY_LISTS_INDEX_OF_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list","BLOCKLY_LISTS_INDEX_OF_LAST":"t\xecm vị tr\xed cuối c\xf9ng của mục","BLOCKLY_LISTS_INDEX_OF_TOOLTIP":"Trả về vị tr\xed đầu ti\xean/cuối c\xf9ng của mục trong danh s\xe1ch. Trả về %1 nếu kh\xf4ng t\xecm thấy.","BLOCKLY_LISTS_INLIST":"trong danh s\xe1ch","BLOCKLY_LISTS_ISEMPTY_HELPURL":"https://github.com/google/blockly/wiki/Lists#is-empty","BLOCKLY_LISTS_ISEMPTY_TITLE":"%1 l\xe0 rỗng","BLOCKLY_LISTS_ISEMPTY_TOOLTIP":"Trả về true nếu danh s\xe1ch rỗng.","BLOCKLY_LISTS_LENGTH_HELPURL":"https://github.com/google/blockly/wiki/Lists#length-of","BLOCKLY_LISTS_LENGTH_TITLE":"độ d\xe0i của %1","BLOCKLY_LISTS_LENGTH_TOOLTIP":"Trả về độ d\xe0i của danh s\xe1ch.","BLOCKLY_LISTS_REPEAT_HELPURL":"https://github.com/google/blockly/wiki/Lists#create-list-with","BLOCKLY_LISTS_REPEAT_TITLE":"tạo danh s\xe1ch với mục %1 lặp lại %2 lần","BLOCKLY_LISTS_REPEAT_TOOLTIP":"Tạo danh s\xe1ch gồm gi\xe1 trị được lặp lại số lần chỉ định.","BLOCKLY_LISTS_REVERSE_HELPURL":"https://github.com/google/blockly/wiki/Lists#reversing-a-list","BLOCKLY_LISTS_REVERSE_MESSAGE0":"đảo ngược %1","BLOCKLY_LISTS_REVERSE_TOOLTIP":"Đảo ngược bản sao của danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_HELPURL":"https://github.com/google/blockly/wiki/Lists#in-list--set","BLOCKLY_LISTS_SET_INDEX_INPUT_TO":"l\xe0","BLOCKLY_LISTS_SET_INDEX_INSERT":"ch\xe8n tại","BLOCKLY_LISTS_SET_INDEX_SET":"g\xe1n","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST":"Ch\xe8n mục v\xe0o đầu danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_FROM":"Ch\xe8n mục v\xe0o vị tr\xed chỉ định trong danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_LAST":"Th\xeam mục v\xe0o cuối danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM":"Ch\xe8n mục ngẫu nhi\xean v\xe0o danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_FIRST":"G\xe1n mục đầu ti\xean trong danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_FROM":"G\xe1n mục tại vị tr\xed chỉ định trong danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_LAST":"G\xe1n mục cuối c\xf9ng trong danh s\xe1ch.","BLOCKLY_LISTS_SET_INDEX_TOOLTIP_SET_RANDOM":"G\xe1n mục ngẫu nhi\xean trong danh s\xe1ch.","BLOCKLY_LISTS_SORT_HELPURL":"https://github.com/google/blockly/wiki/Lists#sorting-a-list","BLOCKLY_LISTS_SORT_ORDER_ASCENDING":"tăng dần","BLOCKLY_LISTS_SORT_ORDER_DESCENDING":"giảm dần","BLOCKLY_LISTS_SORT_TITLE":"sắp xếp %1 %2 %3","BLOCKLY_LISTS_SORT_TOOLTIP":"Sắp xếp bản sao của danh s\xe1ch.","BLOCKLY_LISTS_SORT_TYPE_IGNORECASE":"chữ c\xe1i, kh\xf4ng ph\xe2n biệt hoa thường","BLOCKLY_LISTS_SORT_TYPE_NUMERIC":"số","BLOCKLY_LISTS_SORT_TYPE_TEXT":"chữ c\xe1i","BLOCKLY_LISTS_SPLIT_HELPURL":"https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists","BLOCKLY_LISTS_SPLIT_LIST_FROM_TEXT":"tạo danh s\xe1ch từ văn bản","BLOCKLY_LISTS_SPLIT_TEXT_FROM_LIST":"tạo văn bản từ danh s\xe1ch","BLOCKLY_LISTS_SPLIT_TOOLTIP_JOIN":"Kết hợp danh s\xe1ch văn bản th\xe0nh một văn bản, ngăn c\xe1ch bởi dấu ph\xe2n t\xe1ch.","BLOCKLY_LISTS_SPLIT_TOOLTIP_SPLIT":"Chia văn bản th\xe0nh danh s\xe1ch văn bản, t\xe1ch ở mỗi dấu ph\xe2n t\xe1ch.","BLOCKLY_LISTS_SPLIT_WITH_DELIMITER":"với dấu ph\xe2n t\xe1ch","BLOCKLY_LOGIC_BOOLEAN_FALSE":"sai","BLOCKLY_LOGIC_BOOLEAN_HELPURL":"https://github.com/google/blockly/wiki/Logic#values","BLOCKLY_LOGIC_BOOLEAN_TOOLTIP":"Trả về true hoặc false.","BLOCKLY_LOGIC_BOOLEAN_TRUE":"đ\xfang","BLOCKLY_LOGIC_COMPARE_HELPURL":"https://en.wikipedia.org/wiki/Inequality_(mathematics)","BLOCKLY_LOGIC_COMPARE_TOOLTIP_EQ":"Trả về true nếu cả hai đầu v\xe0o bằng nhau.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_GT":"Trả về true nếu đầu v\xe0o đầu ti\xean lớn hơn đầu v\xe0o thứ hai.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_GTE":"Trả về true nếu đầu v\xe0o đầu ti\xean lớn hơn hoặc bằng đầu v\xe0o thứ hai.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_LT":"Trả về true nếu đầu v\xe0o đầu ti\xean nhỏ hơn đầu v\xe0o thứ hai.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_LTE":"Trả về true nếu đầu v\xe0o đầu ti\xean nhỏ hơn hoặc bằng đầu v\xe0o thứ hai.","BLOCKLY_LOGIC_COMPARE_TOOLTIP_NEQ":"Trả về true nếu hai đầu v\xe0o kh\xe1c nhau.","BLOCKLY_LOGIC_NEGATE_HELPURL":"https://github.com/google/blockly/wiki/Logic#not","BLOCKLY_LOGIC_NEGATE_TITLE":"kh\xf4ng %1","BLOCKLY_LOGIC_NEGATE_TOOLTIP":"Trả về true nếu đầu v\xe0o sai. Trả về false nếu đầu v\xe0o đ\xfang.","BLOCKLY_LOGIC_NULL":"rỗng","BLOCKLY_LOGIC_NULL_HELPURL":"https://en.wikipedia.org/wiki/Nullable_type","BLOCKLY_LOGIC_NULL_TOOLTIP":"Trả về gi\xe1 trị rỗng.","BLOCKLY_LOGIC_OPERATION_AND":"v\xe0","BLOCKLY_LOGIC_OPERATION_HELPURL":"https://github.com/google/blockly/wiki/Logic#logical-operations","BLOCKLY_LOGIC_OPERATION_OR":"hoặc","BLOCKLY_LOGIC_OPERATION_TOOLTIP_AND":"Trả về true nếu cả hai đầu v\xe0o đều đ\xfang.","BLOCKLY_LOGIC_OPERATION_TOOLTIP_OR":"Trả về true nếu \xedt nhất một trong c\xe1c đầu v\xe0o l\xe0 đ\xfang.","BLOCKLY_LOGIC_TERNARY_CONDITION":"kiểm tra","BLOCKLY_LOGIC_TERNARY_HELPURL":"https://en.wikipedia.org/wiki/%3F:","BLOCKLY_LOGIC_TERNARY_IF_FALSE":"nếu sai","BLOCKLY_LOGIC_TERNARY_IF_TRUE":"nếu đ\xfang","BLOCKLY_LOGIC_TERNARY_TOOLTIP":"Kiểm tra điều kiện ở \'kiểm tra\'. Nếu điều kiện đ\xfang th\xec trả về gi\xe1 trị \'nếu đ\xfang\', nếu kh\xf4ng th\xec trả về gi\xe1 trị \'nếu sai\'.","BLOCKLY_MATH_ADDITION_SYMBOL":"+","BLOCKLY_MATH_ARITHMETIC_HELPURL":"https://en.wikipedia.org/wiki/Arithmetic","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_ADD":"Trả về tổng của hai số.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_DIVIDE":"Trả về thương của hai số.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_MINUS":"Trả về hiệu của hai số.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_MULTIPLY":"Trả về t\xedch của hai số.","BLOCKLY_MATH_ARITHMETIC_TOOLTIP_POWER":"Trả về số thứ nhất lũy thừa số thứ hai.","BLOCKLY_MATH_ATAN2_HELPURL":"https://en.wikipedia.org/wiki/Atan2","BLOCKLY_MATH_ATAN2_TITLE":"atan2 của X:%1 Y:%2","BLOCKLY_MATH_ATAN2_TOOLTIP":"Trả về gi\xe1 trị arctan của điểm (X, Y) theo độ từ -180 đến 180.","BLOCKLY_MATH_CHANGE_HELPURL":"https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter","BLOCKLY_MATH_CHANGE_TITLE":"thay đổi %1 th\xeam %2","BLOCKLY_MATH_CHANGE_TOOLTIP":"Cộng một số v\xe0o biến \'%1\'.","BLOCKLY_MATH_CONSTANT_HELPURL":"https://en.wikipedia.org/wiki/Mathematical_constant","BLOCKLY_MATH_CONSTANT_TOOLTIP":"Trả về một trong những hằng số to\xe1n học phổ biến: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(\xbd) (0.707…), hoặc ∞ (v\xf4 cực).","BLOCKLY_MATH_CONSTRAIN_HELPURL":"https://en.wikipedia.org/wiki/Clamping_(graphics)","BLOCKLY_MATH_CONSTRAIN_TITLE":"giới hạn %1 thấp nhất %2 cao nhất %3","BLOCKLY_MATH_CONSTRAIN_TOOLTIP":"Giới hạn một số trong khoảng gi\xe1 trị x\xe1c định (bao gồm lu\xf4n giới hạn).","BLOCKLY_MATH_DIVISION_SYMBOL":"\xf7","BLOCKLY_MATH_IS_DIVISIBLE_BY":"chia hết cho","BLOCKLY_MATH_IS_EVEN":"l\xe0 số chẵn","BLOCKLY_MATH_IS_NEGATIVE":"l\xe0 số \xe2m","BLOCKLY_MATH_IS_ODD":"l\xe0 số lẻ","BLOCKLY_MATH_IS_POSITIVE":"l\xe0 số dương","BLOCKLY_MATH_IS_PRIME":"l\xe0 số nguy\xean tố","BLOCKLY_MATH_IS_TOOLTIP":"Kiểm tra xem một số c\xf3 phải l\xe0 chẵn, lẻ, nguy\xean tố, nguy\xean, dương, \xe2m, hoặc chia hết cho số n\xe0o đ\xf3 kh\xf4ng. Trả về true hoặc false.","BLOCKLY_MATH_IS_WHOLE":"l\xe0 số nguy\xean","BLOCKLY_MATH_MODULO_HELPURL":"https://en.wikipedia.org/wiki/Modulo_operation","BLOCKLY_MATH_MODULO_TITLE":"phần dư của %1 chia %2","BLOCKLY_MATH_MODULO_TOOLTIP":"Trả về phần dư khi chia hai số.","BLOCKLY_MATH_MULTIPLICATION_SYMBOL":"\xd7","BLOCKLY_MATH_NUMBER_HELPURL":"https://en.wikipedia.org/wiki/Number","BLOCKLY_MATH_NUMBER_TOOLTIP":"Một số.","BLOCKLY_MATH_ONLIST_HELPURL":"","BLOCKLY_MATH_ONLIST_OPERATOR_AVERAGE":"trung b\xecnh của danh s\xe1ch","BLOCKLY_MATH_ONLIST_OPERATOR_MAX":"gi\xe1 trị lớn nhất của danh s\xe1ch","BLOCKLY_MATH_ONLIST_OPERATOR_MEDIAN":"trung vị của danh s\xe1ch","BLOCKLY_MATH_ONLIST_OPERATOR_MIN":"gi\xe1 trị nhỏ nhất của danh s\xe1ch","BLOCKLY_MATH_ONLIST_OPERATOR_MODE":"gi\xe1 trị xuất hiện nhiều nhất của danh s\xe1ch","BLOCKLY_MATH_ONLIST_OPERATOR_RANDOM":"mục ngẫu nhi\xean của danh s\xe1ch","BLOCKLY_MATH_ONLIST_OPERATOR_STD_DEV":"độ lệch chuẩn của danh s\xe1ch","BLOCKLY_MATH_ONLIST_OPERATOR_SUM":"tổng của danh s\xe1ch","BLOCKLY_MATH_ONLIST_TOOLTIP_AVERAGE":"Trả về gi\xe1 trị trung b\xecnh (trung b\xecnh cộng) của c\xe1c số trong danh s\xe1ch.","BLOCKLY_MATH_ONLIST_TOOLTIP_MAX":"Trả về số lớn nhất trong danh s\xe1ch.","BLOCKLY_MATH_ONLIST_TOOLTIP_MEDIAN":"Trả về gi\xe1 trị trung vị của danh s\xe1ch.","BLOCKLY_MATH_ONLIST_TOOLTIP_MIN":"Trả về số nhỏ nhất trong danh s\xe1ch.","BLOCKLY_MATH_ONLIST_TOOLTIP_MODE":"Trả về danh s\xe1ch c\xe1c mục xuất hiện nhiều nhất.","BLOCKLY_MATH_ONLIST_TOOLTIP_RANDOM":"Trả về một phần tử ngẫu nhi\xean từ danh s\xe1ch.","BLOCKLY_MATH_ONLIST_TOOLTIP_STD_DEV":"Trả về độ lệch chuẩn của danh s\xe1ch.","BLOCKLY_MATH_ONLIST_TOOLTIP_SUM":"Trả về tổng của tất cả c\xe1c số trong danh s\xe1ch.","BLOCKLY_MATH_POWER_SYMBOL":"^","BLOCKLY_MATH_RANDOM_FLOAT_HELPURL":"https://en.wikipedia.org/wiki/Random_number_generation","BLOCKLY_MATH_RANDOM_FLOAT_TITLE_RANDOM":"ph\xe2n số ngẫu nhi\xean","BLOCKLY_MATH_RANDOM_FLOAT_TOOLTIP":"Trả về ph\xe2n số ngẫu nhi\xean giữa 0.0 (bao gồm) v\xe0 1.0 (kh\xf4ng bao gồm).","BLOCKLY_MATH_RANDOM_INT_HELPURL":"https://en.wikipedia.org/wiki/Random_number_generation","BLOCKLY_MATH_RANDOM_INT_TITLE":"số nguy\xean ngẫu nhi\xean từ %1 đến %2","BLOCKLY_MATH_RANDOM_INT_TOOLTIP":"Trả về số nguy\xean ngẫu nhi\xean trong khoảng chỉ định (bao gồm cả hai đầu).","BLOCKLY_MATH_ROUND_HELPURL":"https://en.wikipedia.org/wiki/Rounding","BLOCKLY_MATH_ROUND_OPERATOR_ROUND":"l\xe0m tr\xf2n","BLOCKLY_MATH_ROUND_OPERATOR_ROUNDDOWN":"l\xe0m tr\xf2n xuống","BLOCKLY_MATH_ROUND_OPERATOR_ROUNDUP":"l\xe0m tr\xf2n l\xean","BLOCKLY_MATH_ROUND_TOOLTIP":"L\xe0m tr\xf2n số l\xean hoặc xuống.","BLOCKLY_MATH_SINGLE_HELPURL":"https://en.wikipedia.org/wiki/Square_root","BLOCKLY_MATH_SINGLE_OP_ABSOLUTE":"gi\xe1 trị tuyệt đối","BLOCKLY_MATH_SINGLE_OP_ROOT":"căn bậc hai","BLOCKLY_MATH_SINGLE_TOOLTIP_ABS":"Trả về gi\xe1 trị tuyệt đối của một số.","BLOCKLY_MATH_SINGLE_TOOLTIP_EXP":"Trả về e mũ một số.","BLOCKLY_MATH_SINGLE_TOOLTIP_LN":"Trả về logarit tự nhi\xean của một số.","BLOCKLY_MATH_SINGLE_TOOLTIP_LOG10":"Trả về logarit cơ số 10 của một số.","BLOCKLY_MATH_SINGLE_TOOLTIP_NEG":"Trả về gi\xe1 trị đối của một số.","BLOCKLY_MATH_SINGLE_TOOLTIP_POW10":"Trả về 10 mũ một số.","BLOCKLY_MATH_SINGLE_TOOLTIP_ROOT":"Trả về căn bậc hai của một số.","BLOCKLY_MATH_SUBTRACTION_SYMBOL":"-","BLOCKLY_MATH_TRIG_ACOS":"acos","BLOCKLY_MATH_TRIG_ASIN":"asin","BLOCKLY_MATH_TRIG_ATAN":"atan","BLOCKLY_MATH_TRIG_COS":"cos","BLOCKLY_MATH_TRIG_HELPURL":"https://en.wikipedia.org/wiki/Trigonometric_functions","BLOCKLY_MATH_TRIG_SIN":"sin","BLOCKLY_MATH_TRIG_TAN":"tan","BLOCKLY_MATH_TRIG_TOOLTIP_ACOS":"Trả về arccos của một số.","BLOCKLY_MATH_TRIG_TOOLTIP_ASIN":"Trả về arcsin của một số.","BLOCKLY_MATH_TRIG_TOOLTIP_ATAN":"Trả về arctan của một số.","BLOCKLY_MATH_TRIG_TOOLTIP_COS":"Trả về cosin của một g\xf3c (độ, kh\xf4ng phải radian).","BLOCKLY_MATH_TRIG_TOOLTIP_SIN":"Trả về sin của một g\xf3c (độ, kh\xf4ng phải radian).","BLOCKLY_MATH_TRIG_TOOLTIP_TAN":"Trả về tang của một g\xf3c (độ, kh\xf4ng phải radian).","BLOCKLY_NEW_COLOUR_VARIABLE":"Tạo biến m\xe0u mới...","BLOCKLY_NEW_NUMBER_VARIABLE":"Tạo biến số mới...","BLOCKLY_NEW_STRING_VARIABLE":"Tạo biến chuỗi mới...","BLOCKLY_NEW_VARIABLE":"Tạo biến mới...","BLOCKLY_NEW_VARIABLE_TITLE":"T\xean biến mới:","BLOCKLY_NEW_VARIABLE_TYPE_TITLE":"Loại biến mới:","BLOCKLY_ORDINAL_NUMBER_SUFFIX":"","BLOCKLY_PROCEDURES_ALLOW_STATEMENTS":"cho ph\xe9p lệnh","BLOCKLY_PROCEDURES_BEFORE_PARAMS":"với:","BLOCKLY_PROCEDURES_CALLNORETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_CALLNORETURN_TOOLTIP":"Chạy h\xe0m do người d\xf9ng định nghĩa \'%1\'.","BLOCKLY_PROCEDURES_CALLRETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_CALLRETURN_TOOLTIP":"Chạy h\xe0m do người d\xf9ng định nghĩa \'%1\' v\xe0 sử dụng kết quả trả về.","BLOCKLY_PROCEDURES_CALL_BEFORE_PARAMS":"với:","BLOCKLY_PROCEDURES_CREATE_DO":"Tạo \'%1\'","BLOCKLY_PROCEDURES_DEFNORETURN_COMMENT":"M\xf4 tả h\xe0m n\xe0y...","BLOCKLY_PROCEDURES_DEFNORETURN_DO":"","BLOCKLY_PROCEDURES_DEFNORETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_DEFNORETURN_PROCEDURE":"l\xe0m g\xec đ\xf3","BLOCKLY_PROCEDURES_DEFNORETURN_TITLE":"để","BLOCKLY_PROCEDURES_DEFNORETURN_TOOLTIP":"Tạo h\xe0m kh\xf4ng trả về kết quả.","BLOCKLY_PROCEDURES_DEFRETURN_HELPURL":"https://en.wikipedia.org/wiki/Subroutine","BLOCKLY_PROCEDURES_DEFRETURN_RETURN":"trả về","BLOCKLY_PROCEDURES_DEFRETURN_TOOLTIP":"Tạo h\xe0m c\xf3 trả về kết quả.","BLOCKLY_PROCEDURES_DEF_DUPLICATE_WARNING":"Cảnh b\xe1o: H\xe0m n\xe0y c\xf3 tham số tr\xf9ng lặp.","BLOCKLY_PROCEDURES_HIGHLIGHT_DEF":"L\xe0m nổi bật định nghĩa h\xe0m","BLOCKLY_PROCEDURES_IFRETURN_HELPURL":"https://c2.com/cgi/wiki?GuardClause","BLOCKLY_PROCEDURES_IFRETURN_TOOLTIP":"Nếu điều kiện đ\xfang, trả về gi\xe1 trị thứ hai.","BLOCKLY_PROCEDURES_IFRETURN_WARNING":"Cảnh b\xe1o: Khối n\xe0y chỉ d\xf9ng trong h\xe0m.","BLOCKLY_PROCEDURES_MUTATORARG_TITLE":"t\xean tham số:","BLOCKLY_PROCEDURES_MUTATORARG_TOOLTIP":"Th\xeam tham số v\xe0o h\xe0m.","BLOCKLY_PROCEDURES_MUTATORCONTAINER_TITLE":"tham số","BLOCKLY_PROCEDURES_MUTATORCONTAINER_TOOLTIP":"Th\xeam, xo\xe1 hoặc sắp xếp lại c\xe1c tham số của h\xe0m n\xe0y.","BLOCKLY_REDO":"L\xe0m lại","BLOCKLY_REMOVE_COMMENT":"Xo\xe1 ghi ch\xfa","BLOCKLY_RENAME_VARIABLE":"Đổi t\xean biến...","BLOCKLY_RENAME_VARIABLE_TITLE":"Đổi t\xean tất cả biến \'%1\' th\xe0nh:","BLOCKLY_TEXT_APPEND_HELPURL":"https://github.com/google/blockly/wiki/Text#text-modification","BLOCKLY_TEXT_APPEND_TITLE":"v\xe0o %1 nối th\xeam văn bản %2","BLOCKLY_TEXT_APPEND_TOOLTIP":"Nối th\xeam văn bản v\xe0o biến \'%1\'.","BLOCKLY_TEXT_CHANGECASE_HELPURL":"https://github.com/google/blockly/wiki/Text#adjusting-text-case","BLOCKLY_TEXT_CHANGECASE_OPERATOR_LOWERCASE":"chuyển th\xe0nh chữ thường","BLOCKLY_TEXT_CHANGECASE_OPERATOR_TITLECASE":"chuyển th\xe0nh Chữ Hoa Đầu Từ","BLOCKLY_TEXT_CHANGECASE_OPERATOR_UPPERCASE":"chuyển th\xe0nh CHỮ HOA","BLOCKLY_TEXT_CHANGECASE_TOOLTIP":"Trả về bản sao của văn bản với định dạng chữ c\xe1i kh\xe1c.","BLOCKLY_TEXT_CHARAT_FIRST":"lấy chữ c\xe1i đầu ti\xean","BLOCKLY_TEXT_CHARAT_FROM_END":"lấy chữ c\xe1i # từ cuối","BLOCKLY_TEXT_CHARAT_FROM_START":"lấy chữ c\xe1i #","BLOCKLY_TEXT_CHARAT_HELPURL":"https://github.com/google/blockly/wiki/Text#extracting-text","BLOCKLY_TEXT_CHARAT_LAST":"lấy chữ c\xe1i cuối c\xf9ng","BLOCKLY_TEXT_CHARAT_RANDOM":"lấy chữ c\xe1i ngẫu nhi\xean","BLOCKLY_TEXT_CHARAT_TAIL":"","BLOCKLY_TEXT_CHARAT_TITLE":"trong văn bản %1 %2","BLOCKLY_TEXT_CHARAT_TOOLTIP":"Trả về chữ c\xe1i ở vị tr\xed chỉ định.","BLOCKLY_TEXT_COUNT_HELPURL":"https://github.com/google/blockly/wiki/Text#counting-substrings","BLOCKLY_TEXT_COUNT_MESSAGE0":"đếm %1 trong %2","BLOCKLY_TEXT_COUNT_TOOLTIP":"Đếm số lần xuất hiện của một chuỗi trong chuỗi kh\xe1c.","BLOCKLY_TEXT_CREATE_JOIN_ITEM_TOOLTIP":"Th\xeam mục v\xe0o văn bản.","BLOCKLY_TEXT_CREATE_JOIN_TITLE_JOIN":"nối","BLOCKLY_TEXT_CREATE_JOIN_TOOLTIP":"Th\xeam, xo\xe1, hoặc sắp xếp lại c\xe1c phần để cấu h\xecnh lại khối văn bản n\xe0y.","BLOCKLY_TEXT_GET_SUBSTRING_END_FROM_END":"đến chữ c\xe1i # từ cuối","BLOCKLY_TEXT_GET_SUBSTRING_END_FROM_START":"đến chữ c\xe1i #","BLOCKLY_TEXT_GET_SUBSTRING_END_LAST":"đến chữ c\xe1i cuối c\xf9ng","BLOCKLY_TEXT_GET_SUBSTRING_HELPURL":"https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text","BLOCKLY_TEXT_GET_SUBSTRING_INPUT_IN_TEXT":"trong văn bản","BLOCKLY_TEXT_GET_SUBSTRING_START_FIRST":"lấy đoạn con từ chữ c\xe1i đầu ti\xean","BLOCKLY_TEXT_GET_SUBSTRING_START_FROM_END":"lấy đoạn con từ chữ c\xe1i # từ cuối","BLOCKLY_TEXT_GET_SUBSTRING_START_FROM_START":"lấy đoạn con từ chữ c\xe1i #","BLOCKLY_TEXT_GET_SUBSTRING_TAIL":"","BLOCKLY_TEXT_GET_SUBSTRING_TOOLTIP":"Trả về một phần được chỉ định của văn bản.","BLOCKLY_TEXT_INDEXOF_HELPURL":"https://github.com/google/blockly/wiki/Text#finding-text","BLOCKLY_TEXT_INDEXOF_OPERATOR_FIRST":"t\xecm vị tr\xed đầu ti\xean của văn bản","BLOCKLY_TEXT_INDEXOF_OPERATOR_LAST":"t\xecm vị tr\xed cuối c\xf9ng của văn bản","BLOCKLY_TEXT_INDEXOF_TITLE":"trong văn bản %1 %2 %3","BLOCKLY_TEXT_INDEXOF_TOOLTIP":"Trả về vị tr\xed đầu ti\xean/cuối c\xf9ng của văn bản n\xe0y trong văn bản kh\xe1c. Trả về %1 nếu kh\xf4ng t\xecm thấy.","BLOCKLY_TEXT_ISEMPTY_HELPURL":"https://github.com/google/blockly/wiki/Text#checking-for-empty-text","BLOCKLY_TEXT_ISEMPTY_TITLE":"%1 l\xe0 rỗng","BLOCKLY_TEXT_ISEMPTY_TOOLTIP":"Trả về true nếu văn bản rỗng.","BLOCKLY_TEXT_JOIN_HELPURL":"https://github.com/google/blockly/wiki/Text#text-creation","BLOCKLY_TEXT_JOIN_TITLE_CREATEWITH":"tạo văn bản với","BLOCKLY_TEXT_JOIN_TOOLTIP":"Tạo một đoạn văn bản bằng c\xe1ch kết hợp bất kỳ số lượng mục n\xe0o.","BLOCKLY_TEXT_LENGTH_HELPURL":"https://github.com/google/blockly/wiki/Text#text-modification","BLOCKLY_TEXT_LENGTH_TITLE":"độ d\xe0i của %1","BLOCKLY_TEXT_LENGTH_TOOLTIP":"Trả về số k\xfd tự (bao gồm cả dấu c\xe1ch) trong văn bản đ\xe3 cho.","BLOCKLY_TEXT_PRINT_HELPURL":"https://github.com/google/blockly/wiki/Text#printing-text","BLOCKLY_TEXT_PRINT_TITLE":"in %1","BLOCKLY_TEXT_PRINT_TOOLTIP":"In văn bản, số hoặc gi\xe1 trị kh\xe1c đ\xe3 chỉ định.","BLOCKLY_TEXT_PROMPT_HELPURL":"https://github.com/google/blockly/wiki/Text#getting-input-from-the-user","BLOCKLY_TEXT_PROMPT_TOOLTIP_NUMBER":"Y\xeau cầu người d\xf9ng nhập số.","BLOCKLY_TEXT_PROMPT_TOOLTIP_TEXT":"Y\xeau cầu người d\xf9ng nhập văn bản.","BLOCKLY_TEXT_PROMPT_TYPE_NUMBER":"y\xeau cầu số với th\xf4ng b\xe1o","BLOCKLY_TEXT_PROMPT_TYPE_TEXT":"y\xeau cầu văn bản với th\xf4ng b\xe1o","BLOCKLY_TEXT_REPLACE_HELPURL":"https://github.com/google/blockly/wiki/Text#replacing-substrings","BLOCKLY_TEXT_REPLACE_MESSAGE0":"thay %1 bằng %2 trong %3","BLOCKLY_TEXT_REPLACE_TOOLTIP":"Thay thế tất cả c\xe1c lần xuất hiện của một chuỗi văn bản kh\xe1c.","BLOCKLY_TEXT_REVERSE_HELPURL":"https://github.com/google/blockly/wiki/Text#reversing-text","BLOCKLY_TEXT_REVERSE_MESSAGE0":"đảo ngược %1","BLOCKLY_TEXT_REVERSE_TOOLTIP":"Đảo ngược thứ tự c\xe1c k\xfd tự trong văn bản.","BLOCKLY_TEXT_TEXT_HELPURL":"https://en.wikipedia.org/wiki/String_(computer_science)","BLOCKLY_TEXT_TEXT_TOOLTIP":"Một chữ c\xe1i, từ, hoặc d\xf2ng văn bản.","BLOCKLY_TEXT_TRIM_HELPURL":"https://github.com/google/blockly/wiki/Text#trimming-removing-spaces","BLOCKLY_TEXT_TRIM_OPERATOR_BOTH":"x\xf3a khoảng trắng hai b\xean","BLOCKLY_TEXT_TRIM_OPERATOR_LEFT":"x\xf3a khoảng trắng b\xean tr\xe1i","BLOCKLY_TEXT_TRIM_OPERATOR_RIGHT":"x\xf3a khoảng trắng b\xean phải","BLOCKLY_TEXT_TRIM_TOOLTIP":"Trả về bản sao văn bản đ\xe3 x\xf3a khoảng trắng ở một hoặc cả hai đầu.","BLOCKLY_TODAY":"H\xf4m nay","BLOCKLY_UNDO":"Ho\xe0n t\xe1c","BLOCKLY_UNNAMED_KEY":"chưa đặt t\xean","BLOCKLY_VARIABLES_DEFAULT_NAME":"mục","BLOCKLY_VARIABLES_GET_CREATE_SET":"Tạo \'g\xe1n %1\'","BLOCKLY_VARIABLES_GET_HELPURL":"https://github.com/google/blockly/wiki/Variables#get","BLOCKLY_VARIABLES_GET_TOOLTIP":"Trả về gi\xe1 trị của biến n\xe0y.","BLOCKLY_VARIABLES_SET":"g\xe1n %1 l\xe0 %2","BLOCKLY_VARIABLES_SET_CREATE_GET":"Tạo \'lấy %1\'","BLOCKLY_VARIABLES_SET_HELPURL":"https://github.com/google/blockly/wiki/Variables#set","BLOCKLY_VARIABLES_SET_TOOLTIP":"G\xe1n biến n\xe0y bằng đầu v\xe0o.","BLOCKLY_VARIABLE_ALREADY_EXISTS":"Đ\xe3 tồn tại biến t\xean \'%1\'.","BLOCKLY_VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE":"Đ\xe3 tồn tại biến t\xean \'%1\' cho loại kh\xe1c: \'%2\'.","BLOCKLY_WORKSPACE_ARIA_LABEL":"Kh\xf4ng gian l\xe0m việc Blockly","BLOCKLY_WORKSPACE_COMMENT_DEFAULT_TEXT":"Viết g\xec đ\xf3...","BLOCKLY_CONTROLS_FOREACH_INPUT_DO":"thực hiện","BLOCKLY_CONTROLS_FOR_INPUT_DO":"thực hiện","BLOCKLY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF":"nếu kh\xf4ng nếu","BLOCKLY_CONTROLS_IF_ELSE_TITLE_ELSE":"nếu kh\xf4ng","BLOCKLY_CONTROLS_IF_IF_TITLE_IF":"nếu","BLOCKLY_CONTROLS_IF_MSG_THEN":"thực hiện","BLOCKLY_CONTROLS_WHILEUNTIL_INPUT_DO":"thực hiện","BLOCKLY_LISTS_CREATE_WITH_ITEM_TITLE":"mục","BLOCKLY_LISTS_GET_INDEX_HELPURL":"https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list","BLOCKLY_LISTS_GET_INDEX_INPUT_IN_LIST":"trong danh s\xe1ch","BLOCKLY_LISTS_GET_SUBLIST_INPUT_IN_LIST":"trong danh s\xe1ch","BLOCKLY_LISTS_INDEX_OF_INPUT_IN_LIST":"trong danh s\xe1ch","BLOCKLY_LISTS_SET_INDEX_INPUT_IN_LIST":"trong danh s\xe1ch","BLOCKLY_MATH_CHANGE_TITLE_ITEM":"mục","BLOCKLY_PROCEDURES_DEFRETURN_COMMENT":"M\xf4 tả h\xe0m n\xe0y...","BLOCKLY_PROCEDURES_DEFRETURN_DO":"","BLOCKLY_PROCEDURES_DEFRETURN_PROCEDURE":"l\xe0m g\xec đ\xf3","BLOCKLY_PROCEDURES_DEFRETURN_TITLE":"để","BLOCKLY_TEXT_APPEND_VARIABLE":"mục","BLOCKLY_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM":"mục","BLOCKLY_MATH_HUE":"230","BLOCKLY_LOOPS_HUE":"120","BLOCKLY_LISTS_HUE":"260","BLOCKLY_LOGIC_HUE":"210","BLOCKLY_VARIABLES_HUE":"330","BLOCKLY_TEXTS_HUE":"160","BLOCKLY_PROCEDURES_HUE":"290","BLOCKLY_COLOUR_HUE":"20","BLOCKLY_VARIABLES_DYNAMIC_HUE":"310"}')}}]);